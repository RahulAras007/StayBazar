@model IEnumerable<CLayer.SupplierPayment>
@using Microsoft.AspNet.Identity
@{
    Layout = null;
    StayBazar.Lib.GridPager gp = new StayBazar.Lib.GridPager();
    gp.JavascriptFuncName = "showPager";
    gp.ColumnsInPager = 8;
    gp.RowsInAPage = 25;

}
<div class="col-md-10">
    @{
        StayBazar.Areas.Admin.Models.SupplierPaymentModel filterform = (StayBazar.Areas.Admin.Models.SupplierPaymentModel)ViewBag.Filter;
        using (Html.BeginForm("Pager1", "SupplierPayment", FormMethod.Post, new { @id = "frmPagers1" }))
        {
            <input type="hidden" id="Status" name="Status" value="@filterform.Status" />
            <input type="hidden" id="SearchString" name="SearchString" value="@filterform.SearchString" />
            <input type="hidden" id="SearchValue" name="SearchValue" value="@filterform.SearchValue" />
            <input type="hidden" id="currentPage" name="currentPage" value="@filterform.currentPage" />
            <input type="hidden" id="Limit" name="Limit" value="@filterform.Limit" />
        }
        gp.RowsInAPage = filterform.Limit;
    }
@*<div class="col-md-11">*@
    @if (Model != null && Model.Count() > 0)
    {
        <text>@Html.Raw(gp.GetPager((int)filterform.TotalRows, filterform.currentPage))</text>
    }
</div>
<br />
<div class="col-md-2">

    <div style="padding-bottom:8px;"> <button class="btn btn-success savebtn" type="button"  onclick="check()">Add Payment</button></div>   
</div>


@*<div class="col-md-12">*@
@using (Html.BeginForm("SelectOrder", "SupplierPayment", FormMethod.Post, new { @id = "frm1" }))
{

    @*<div class="col-md-1"></div>*@

    <div class="col-md-12">
        <table class="table table-hover table-condensed table-responsive table-striped table-custom table-bordered">
            <thead>
                <tr>
                    <th>Property Name</th>
                    <th>Supplier Name</th>
                    <th>Booking Id</th>
                    <th>Communication</th>


                    <th> Date</th>
                    @*<th>Checkout Date</th>*@
                    <th>Booking  Date</th>
                    <th>Total Amount</th>
                    <th>Amount Paid</th>
                    @*@if (User.IsInRole("Administrator"))
                        {
                            if (filterform.Status != (int)CLayer.ObjectStatus.StatusType.Deleted)
                            {*@
                    <th>Select</th>
                    @*}
                        }*@
                </tr>
            </thead>
            <tbody>
                @if (Model != null && Model.Count() > 0)
                {


                    foreach (CLayer.SupplierPayment usr in Model)
                    {
                        <tr>
                            <td>@usr.propertyname</td>
                            <td>@usr.SupplierName </td>
                            <td>
                                @if (usr.OrderId != null)
                                {
                                    @usr.OrderId
                                }
                            </td>
                            <td>
                                Email :@usr.SupplierEmail <br />Mobile:@usr.SupplierMobile
                            </td>
                            <td>Check In:@usr.CheckIn_date.ToShortDateString()<br />Check out:@usr.CheckOut_date.ToShortDateString()</td>
                            <td>
                                @usr.BookingDate.ToShortDateString()
                            </td>
                            <td>@usr.Buyprice</td>
                            <td>@usr.AmountPaid</td>
                            @if (usr.supplierPayment || (@usr.AmountPaid >= @usr.Buyprice))
                            {
                                <td></td>
                            }
                            else
                            {
                                <td>
                                    <input type="checkbox" class="checkbox" id="offlineBookingSelected" onclick="pay()" name="offlineBookingSelected" value="@usr.OrderId" />
                                    <input type="hidden" id="offlineBookingSelected_@usr.OrderId" value="@usr.SupplierEmail" />
                                </td>
                            }
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
}

@*</div>*@

<div class="col-md-11">

    @if (Model != null && Model.Count() > 0)
    {
        @Html.Raw(gp.GetPager((int)filterform.TotalRows, filterform.currentPage))
    }
</div>
<div class="col-md-1">

</div>


<script type="text/javascript">
    $(document).ready(function () {
        $(".savebtn").attr('disabled', 'disabled');
    });
    function check() {

        var ss = $('input[name="offlineBookingSelected"]:checked').length;
        if (ss != 0) {
            $(".savebtn").removeAttr('disabled', 'disabled');
            var favorite = [];
            $.each($("input[name='offlineBookingSelected']:checked"), function () {
                var a=$(this).val();
                var b=  $("#offlineBookingSelected_"+a).val();
                favorite.push(b);
            });
            function arrHasDupes(A) {                          // finds any duplicate array elements using the fewest possible comparison
                var i, j, n;
                n = A.length;
                // to ensure the fewest possible comparisons
                for (i = 0; i < n; i++) {                        // outer loop uses each item i at 0 through n
                    for (j = i + 1; j < n; j++) {              // inner loop only compares items j at i+1 to n
                        if (A[i] == A[j]) return true;
                    }
                }
                return false;
            }
            Array.prototype.allValuesSame = function () {

                for (var i = 1; i < this.length; i++) {
                    if (this[i] !== this[0])
                        return false;
                }

                return true;
            }
            var b = favorite.allValuesSame();
            //else
            //    $('#frm1').attr('SupplierPayment', 'SelectOrder').submit();
            //alert("My favourite sports are: " + favorite.join(", "));
            @*var hasDups = !favorite.every(function (v, i) {
                return favorite.indexOf(v) == i;
            });

            if (favorite.length != 1) {
                if (hasDups == false) {
                    @*var url = '@Url.Action("SelectOrder", "SupplierPayment")';
            $.post(url, $("#frm1").serialize(),
                    function (data) {*@
            //$("#list").html(data);
            @*       alert("Please select Only one supplier");
                    //window.location = '@Url.Action("SelectOrder", "SupplierPayment")';
                    //});
                } else {
                    $('#frm1').attr('SupplierPayment', 'SelectOrder').submit();

                }*@
            if (b)      {                       // this just calls the function to test it
                $('#frm1').attr('SupplierPayment', 'SelectOrder').submit();
        }
        else {
                alert("Please choose same supplier's bookings");
        }
    } else {
            $(".savebtn").attr('disabled', 'disabled');
    }
    }
    function pay() {

        var ss = $('input[name="offlineBookingSelected"]:checked').length;
        if (ss != 0) {
            $(".savebtn").removeAttr('disabled', 'disabled');
            $('.offlineBookingSelected :checkbox:checked').each(function () {

                alert($(this).val());
            });


        } else {
            $(".savebtn").attr('disabled', 'disabled');
        }
    }
    function showPager(num) {
        //alert('here is it ' + num);
        $("#currentPage").val(num);
        var url = '@Url.Action("Pager1", "SupplierPayment")';
        $.post(url, $("#frmPagers1").serialize(),
                function (data) {
                    $("#list").html(data);
                });
    }
</script>
