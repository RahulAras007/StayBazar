@model StayBazar.Areas.Admin.Models.OfflineBookingModel
@using System.Configuration;
@using CaptchaMvc.HtmlHelpers
@using System.Linq
@using Microsoft.AspNet.Identity
@{
    ViewBag.Title = "Offline Booking Form";

    int startD = 0;
    int endD = 0;
    int.TryParse(System.Configuration.ConfigurationManager.AppSettings.Get("CalendarStartDate"), out startD);
    int.TryParse(System.Configuration.ConfigurationManager.AppSettings.Get("CalendarEndDate"), out endD);
    int diff = endD - startD;
    string userid = User.Identity.GetUserId();
    string email = User.Identity.GetUserName();
    int roleId = BLayer.User.GetRole(email);
    int AssistedBookingFlag = BLayer.User.GetAssistedBookingFlag(email);
    long MyAssistedBookingCount = BLayer.User.GetCountofMyAssistedBooker(userid);

    List<CLayer.RolePermission> perm = BLayer.RolePermissions.GetAllPermissions(roleId);
    bool hasEditPermisson = perm.Exists(m => m.ModuleId == StayBazar.Common.AdminRolePermission.OFFLINEBOOKING_EDIT && m.HasAccess);






    @*<link href="~/Content/jquery.dpNumberPicker-holoLight-1.0.1.css" rel="stylesheet" />*@
    <link href="~/Content/datepicker.css" rel="stylesheet" />
    @*<script src="~/Scripts/jquery.dpNumberPicker-1.0.1.js"></script>*@
    <script src="~/Scripts/Moment.js"></script>

    @*
        <script src="~/Scripts/date.js"></script>*@


    long nonight = 1;
    long norooms = 1;
    string ModelCheckIn = "";
    string ModelCheckOut = "";
    long nopaxadult = 0;
    long nopaxchaild = 0;
    string accname = "";
    long stayid = 0;
    int status = 0;

    //long Accid = 0;
    long offid = 0;
    DateTime CheckBookingdate = Convert.ToDateTime(Model.BookingDate);
    Model.BookingDate = Convert.ToDateTime(Model.BookingDate).ToShortDateString();
    string bookingdate = Convert.ToDateTime(DateTime.Now).ToShortDateString();

    if (Model.OfflineBookingId > 0)
    {
        Model.CheckIn = Convert.ToDateTime(Model.CheckIn).ToShortDateString();
        Model.CheckOut = Convert.ToDateTime(Model.CheckOut).ToShortDateString();

        ModelCheckIn = Convert.ToDateTime(Model.CheckIn).ToShortDateString();
        ModelCheckOut = Convert.ToDateTime(Model.CheckOut).ToShortDateString();

        offid = Model.OfflineBookingId;
        stayid = Model.StayCategoryid;
        //Accid = Model.Accommodationtypeid;
        accname = Model.AccommodationTypeName;
        nonight = Model.NoOfNight;
        norooms = Model.NoOfRooms;
        nopaxadult = Model.NoOfPaxAdult;
        nopaxchaild = Model.NoOfPaxChild;
        status = Model.SaveStatus;

    }
    else
    {
        Model.CheckIn = DateTime.Now.ToShortDateString();
        Model.CheckOut = DateTime.Now.AddDays(1).ToShortDateString();
    }

    //Model.sendmailtocustomer = true;
    //Model.sendmailtosupplier = true;

    string billingIds = "";
    if (ViewBag.BillingIds != null)
    { billingIds = ViewBag.BillingIds; }
}
@Styles.Render("~/Content/css")
<style>
    .dropdonreadonly {
        pointer-events: none;
        background-color: #eee;
    }

    .pointeventsnone {
        pointer-events: none;
    }
</style>

<div id="loading">
    <div class="center_load">
        <img src="~/images/loading.gif" width="30" height="30" />
    </div>
</div>
<style>
    #loading {
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        position: fixed;
        display: block;
        opacity: 0.7;
        background-color: #fff;
        position: absolute;
        z-index: 2;
        text-align: center;
    }

    #loading-image {
        position: absolute;
        top: 100px;
        left: 240px;
        position: absolute;
        z-index: 2;
    }
</style>
<script language="javascript" type="text/javascript">
    $(window).load(function () {
        // $('#loading').hide();
    });
</script>

<script type="text/javascript">
    var billingIds = [@billingIds];
</script>

<div class="page-title-container style3">
    @*<div class="container">*@

    <div class="row">
        <div class="col-md-12">

            <h2 style="color:white">@ViewBag.Title</h2>
        </div>
    </div>

    @*</div>*@

</div>
<div class="container">
    @try
    {


        <br />
        <br />
        @*<div class="row">
                <div class="col-md-12">
                    <h2 class="form-header">
                        @ViewBag.Title
                    </h2>
                </div>
            </div>*@
        <div class="row">
            <div class="col-md-12 sidesplash">
                <div class="col-md-12">
                    @if (TempData["OfflineBookSuccessMessage"] != null)
                    {
                        @*<div class="alert alert-success">
                                @TempData["OfflineBookSuccessMessage"]
                            </div>*@
                    }
                    @using (Html.BeginForm("OfflineBookingFirst", "OfflineBookingGST", FormMethod.Post, new { enctype = "multipart/form-data", id = "FormOfflineBooking" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true)
                        @Html.HiddenFor(m => m.OfficeBookingID)
                        @Html.HiddenFor(m => m.UserType)
                        @Html.HiddenFor(m => m.UserTypeName)
                        @Html.HiddenFor(m => m.BillingStateID)
                        @Html.HiddenFor(m => m.InventoryAPIType)

                        <div class="formcontainer border-radius" id="formoff">

                            <div class="col-md-12" style="top:-14px">
                                <div class="col-md-5">
                                    <div class="form-group">
                                        <div class=""><div class="col-md-4 pad0 bold">Type of booking<span style="color:red">*</span></div></div>
                                        <div class="col-xs-6 col-md-6 ">
                                            <div>
                                                @Html.DropDownListFor(m => m.BookingType, Model.BookingTypes, new { @class = "form-control" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-5">
                                    <div class="form-group">
                                        <div class=""><div class="col-md-4 pad0 bold">Booking Date<span style="color:red">*</span></div></div>
                                        <div class="col-xs-6 col-md-6 Bookingdate">
                                            <div>
                                                <input type="text" id="Bookingdate" name="Bookingdate" value="@Model.BookingDate" style="width: 99px;" class="form-control input-sm" onchange="BookingDate()">
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            @*//Done by Rahul*@
                            @if (roleId == 5)
                            {
                                <div class="col-md-12" style="padding-top:10px">
                                    <div class="col-md-6">
                                        <table>
                                            <tr>
                                                <td>
                                                    <label>Booking For : </label>
                                                </td>
                                                <td style="padding-left:20px;">
                                                    @Html.RadioButtonFor(m => m.BookingForSelf, "S", new { id = "R1", @checked = true, @onchange = "SetVisible(0);" })<span>Self</span>
                                                </td>
                                                <td style="padding-left:20px;">
                                                    @Html.RadioButtonFor(m => m.BookingForSelf, "A", new { id = "R2", onchange = "SetVisible(1);" })<span>Others (Assisted)</span>
                                                </td>
                                                <td>
                                                    <div id="dddv" style="display:none">
                                                    </div>
                                                </td>
                                                <td style="padding-left:60px;">
                                                    <div id="D2" style="display:none">
                                                        @* @Html.DropDownListFor(m => m.CorporateID, Model.CorporateName1, "--Select--", new { @class = "form-control" })*@
                                                        @Html.DropDownListFor(m => m.CorporateUserID1, Model.CorporateUserName1, "-Select-", new { @class = "form-control" })
                                                    </div>
                                                </td>
                                            </tr>
                                        </table>

                                    </div>
                                    <div class="col-md-6">
                                        <table>
                                            <tr>
                                                <td>
                                                    <label>Billing For : </label>
                                                </td>
                                                <td style="padding-left:20px;">
                                                    @Html.RadioButtonFor(m => m.NewBillingFor, "P", new { id = "R3" })<span>Personal</span>
                                                </td>
                                                <td style="padding-left:20px;">
                                                    @Html.RadioButtonFor(m => m.NewBillingFor, "B", new { id = "R4" })<span>Company/Buisness</span>
                                                </td>
                                            </tr>
                                        </table>
                                    </div>


                                    <script language="javascript">
                                        function SetVisible(obj) {
                                            var value = obj;
                                            document.getElementById("dddv").style.display = "none"
                                            document.getElementById("D2").style.display = "none"
                                            if (value == 0) {
                                                document.getElementById("dddv").style.display = "none";
                                                document.getElementById("R4").checked = false;
                                            }
                                            if (value == 1) {
                                                document.getElementById("D2").style.display = "block";
                                                document.getElementById("R4").checked = true;
                                            }

                                        }
                                    </script>
                                </div>
                            }
                            @if (roleId == 6)
                            {
                                <div class="col-md-12" style="padding-top:10px">
                                    <div class="col-md-6">
                                        <table>
                                            <tr>
                                                <td>
                                                    <label>Booking For : </label>
                                                </td>
                                                <td style="padding-left:20px;">
                                                    @Html.RadioButtonFor(m => m.BookingForSelf, "S", new { id = "R1", @checked = true, @onchange = "SetVisible(0);" })<span>Self</span>
                                                </td>
                                                @if (AssistedBookingFlag == 1 || MyAssistedBookingCount > 0)
                                                {
                                                    <td style="padding-left:20px;">
                                                        @Html.RadioButtonFor(m => m.BookingForSelf, "A", new { id = "R2", onchange = "SetVisible(1);" })<span>Others (Assisted)</span>
                                                    </td>
                                                }
                                                <td>
                                                    <div id="dddv" style="display:none">
                                                    </div>
                                                </td>
                                                <td style="padding-left:60px;">
                                                    <div id="D2" style="display:none">
                                                        @if (MyAssistedBookingCount > 0)
                                                        {
                                                            @Html.DropDownListFor(m => m.AssistedCorporateUserID, Model.MyAssistedUsers, "-Select-", new { @class = "form-control" })
                                                        }
                                                        else
                                                        {
                                                            @Html.DropDownListFor(m => m.AssistedCorporateUserID, Model.CorporateUserName_ForCorporateUsers, "-Select-", new { @class = "form-control" })
                                                        }
                                                    </div>
                                                </td>
                                            </tr>
                                        </table>

                                    </div>
                                    <div class="col-md-6">
                                        <table>
                                            <tr>
                                                <td>
                                                    <label>Billing For : </label>
                                                </td>
                                                <td style="padding-left:20px;">
                                                    @Html.RadioButtonFor(m => m.NewBillingFor, "P", new { id = "R3" })<span>Personal</span>
                                                </td>
                                                <td style="padding-left:20px;">
                                                    @Html.RadioButtonFor(m => m.NewBillingFor, "B", new { id = "R4" })<span>Company/Buisness</span>
                                                </td>
                                            </tr>
                                        </table>
                                    </div>


                                    <script language="javascript">
                                        function SetVisible(obj) {
                                            var value = obj;
                                            document.getElementById("dddv").style.display = "none"
                                            document.getElementById("D2").style.display = "none"
                                            if (value == 0) {
                                                document.getElementById("dddv").style.display = "none";
                                                document.getElementById("R4").checked = false;
                                            }
                                            if (value == 1) {
                                                document.getElementById("D2").style.display = "block";
                                                document.getElementById("R4").checked = true;
                                            }

                                        }
                                    </script>
                                </div>
                            }
                            @if (roleId != 5 && roleId != 6)
                            {
                                <div class="col-md-12" style="padding-top:10px">
                                    <div class="col-md-6">
                                        <table>
                                            <tr>
                                                <td>
                                                    <label>Booking For : </label>
                                                </td>
                                                <td style="padding-left:20px;">
                                                    @Html.RadioButtonFor(m => m.BookingForSelf, "S", new { id = "R1", @checked = true, @onchange = "SetVisible(0);" })<span>Self</span>
                                                </td>
                                                <td style="padding-left:20px;">
                                                    @Html.RadioButtonFor(m => m.BookingForSelf, "A", new { id = "R2", onchange = "SetVisible(1);" })<span>Others (Assisted)</span>
                                                </td>
                                                <td>
                                                    <div id="dddv" style="display:none">
                                                    </div>
                                                </td>
                                                <td style="padding-left:60px;">
                                                    <div id="D2" style="display:none">
                                                        @Html.DropDownListFor(m => m.CorporateID, Model.CorporateName, "--Select--", new { @class = "form-control" })
                                                        @Html.DropDownListFor(m => m.CorporateUserID, Model.CorporateUserName, new { @class = "form-control" })
                                                    </div>
                                                </td>
                                            </tr>
                                        </table>

                                    </div>
                                    <div class="col-md-6">
                                        <table>
                                            <tr>
                                                <td>
                                                    <label>Billing For : </label>
                                                </td>
                                                <td style="padding-left:20px;">
                                                    @Html.RadioButtonFor(m => m.NewBillingFor, "P", new { id = "R3" })<span>Personal</span>
                                                </td>
                                                <td style="padding-left:20px;">
                                                    @Html.RadioButtonFor(m => m.NewBillingFor, "B", new { id = "R4" })<span>Company/Buisness</span>
                                                </td>
                                            </tr>
                                        </table>
                                    </div>


                                    <script language="javascript">
                                        function SetVisible(obj) {
                                            var value = obj;
                                            document.getElementById("dddv").style.display = "none"
                                            document.getElementById("D2").style.display = "none"
                                            if (value == 0) {
                                                document.getElementById("dddv").style.display = "none";
                                                document.getElementById("R4").checked = false;
                                            }
                                            if (value == 1) {
                                                document.getElementById("D2").style.display = "block";
                                                document.getElementById("R4").checked = true;
                                            }

                                        }
                                    </script>
                                </div>
                            }
                            @*---------------*@

                            <div class="col-md-12 margin-bot-10">
                                <div class="col-md-5">

                                    <div class="form-group">
                                        @Html.LabelFor(m => m.SBEntity)<span style="color:red">*</span>
                                        @Html.DropDownListFor(m => m.SBEntity, Model.SBEntityLIst, "select", new { @class = "form-control" })
                                    </div>

                                </div>

                                <div class="col-md-5">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.SBEntity1)<span style="color:red">*</span>
                                        @*@Html.DropDownListFor(m => m.SBEntity1, Model.SBEntityLIst1, new { @class = "form-control"})*@

                                        @Html.DropDownListFor(m => m.SBEntity1, Model.SBEntityLIst, new { @class = "form-control", id = "SBEntity1" })
                                    </div>

                                </div>

                            </div>
                            <div class="col-md-12">
                                <h4 class="bold">
                                    Customer Details
                                </h4>
                            </div>
                            <div class="col-md-12 margin-bot-10">
                                <div class="col-md-5">
                                    <div id="cus">
                                        @*Customer Details*@
                                        <div class="row" style="margin-bottom:15px;">
                                            <div class="col-md-8">

                                                @Html.HiddenFor(m => m.FromCustomer)
                                                @Html.HiddenFor(m => m.FromCustomerId)


                                                @Html.HiddenFor(m => m.BillingState1)
                                                @Html.HiddenFor(m => m.BillingCountryId1)
                                                @Html.HiddenFor(m => m.BillingCity1)

                                                @Html.HiddenFor(m => m.PinCode1)

                                                @Html.HiddenFor(m => m.BillingMobile1)
                                                @Html.HiddenFor(m => m.ContactPerson1)
                                                @Html.HiddenFor(m => m.OfficeNO1)
                                                @Html.HiddenFor(m => m.BillingAddress1)

                                                @Html.HiddenFor(m => m.CustomerId)
                                                @Html.HiddenFor(m => m.CategoryType)
                                                @Html.LabelFor(m => m.CustomerName)<span style="color:red">*</span>
                                                @Html.TextBoxFor(m => m.CustomerName, new { @class = "form-control input-sm", @readonly = "readonly" })
                                                @Html.ValidationMessageFor(m => m.CustomerName)
                                            </div>
                                            <div class="col-md-2">
                                                <br />
                                                <input type="button" onclick="browsecustomer()" value="Choose Customer" class="btn btn-success" id="browsecustomerBtn" />


                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.CustomerEmail)<span style="color:red">*</span>
                                            @Html.TextBoxFor(m => m.CustomerEmail, new { @class = "form-control input-sm", @readonly = "readonly" })
                                            @Html.ValidationMessageFor(m => m.CustomerEmail)
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.CustomerMobile)<span style="color:red">*</span>
                                            @Html.TextBoxFor(m => m.CustomerMobile, new { @class = "form-control input-sm" })
                                            @Html.ValidationMessageFor(m => m.CustomerMobile)
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(m => m.NewCustomerReferenceNo)
                                            @Html.TextBoxFor(m => m.NewCustomerReferenceNo, new { @class = "form-control input-sm" })
                                        </div>


                                        <div class="form-group" id="gstcustomerdivcheckbox">
                                            GST Not Avaliable <input type="checkbox" id="GstCheckBox" />
                                        </div>

                                        <div id="gstcustomerdiv">

                                            <div class="row" style="margin-bottom:15px;">
                                                <div class="col-md-8">
                                                    @Html.LabelFor(m => m.CustomerGstStateId)<span style="color:red">*</span>
                                                    @*@Html.TextBoxFor(m => m.CustomerGstStateId, new { @class = "form-control input-sm" })*@
                                                    @Html.DropDownListFor(m => m.CustomerGstStateId, Model.CustomerGstStateList, new { @class = "form-control input-sm ", @onchange = "ChCustomerGstStateId(this.value)" })
                                                    <span>State Code :</span><label id="LBLStateCode"></label>
                                                </div>
                                                <div class="col-md-4">
                                                    <br />
                                                    <input type="button" style="width: 130px;" onclick="browsecustomergststatelist()" value="Add GST State Info" class="btn btn-success" id="browsecustomergststatelistBtn" />
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.CustomerGstRegNo)
                                                @Html.TextBoxFor(m => m.CustomerGstRegNo, new { @class = "form-control input-sm" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(m => m.CustomerAddress)<span style="color:red">*</span>
                                            @Html.TextAreaFor(m => m.CustomerAddress, new { @class = "form-control input-sm" })
                                            @Html.ValidationMessageFor(m => m.CustomerAddress)
                                        </div>

                                    </div>
                                </div>
                                <div class="col-md-5 ">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.CustomerCountry)<span style="color:red">*</span>
                                        @Html.DropDownListFor(m => m.CustomerCountry, Model.CusCountryList, new { @class = "form-control input-sm " })
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.CustomerState)<span style="color:red">*</span>
                                        @Html.DropDownListFor(m => m.CustomerState, Model.CusStateList, new { @class = "form-control input-sm " })
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.CustomerCity)<span style="color:red">*</span> &nbsp;
                                        <a href="#" id="close_other_citycus" class="lnk" style="display:none;"><span class="glyphicon glyphicon-remove"></span>choose from the list</a>
                                        @Html.DropDownListFor(m => m.CustomerCity, Model.CusCityList, "select", new { @class = "form-control" })
                                        <div id="other_citycus" style="display:none;">
                                            @Html.TextBoxFor(m => m.CustomerCityname, new { @class = "form-control input-sm" })
                                        </div>
                                        @Html.ValidationMessageFor(m => m.CustomerCity)
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(m => m.CustomerpinCode)
                                        @Html.TextBoxFor(m => m.CustomerpinCode, new { @class = "form-control input-sm" })
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.CustomerPaymentModeId)<span style="color:red">*</span>
                                        @*@Html.HiddenFor(m => m.CustomerPaymentModeId, new { @id = "drpCustomerPayment_Value" })*@
                                        @Html.DropDownListFor(m => m.CustomerPaymentModeId, Model.CustomerPaymentModeList, "select", new { @class = "form-control input-sm" })
                                        @Html.ValidationMessageFor(m => m.CustomerPaymentModeId)
                                    </div>
                                    <div class="form-group" id="divCustomerPaymentCredit">
                                        @Html.LabelFor(m => m.CustomerPaymentCreditPeriod)
                                        @Html.TextBoxFor(m => m.CustomerPaymentCreditPeriod, new { @class = "form-control input-sm", placeholder = "0.00" })

                                    </div>
                                </div>
                            </div>



                            <hr />
                            <div class="col-md-12 margin-top-10 margin-bot-10">
                                <div class="col-md-5">
                                    <div id="PropertyDetails">
                                        <div class="row">
                                            <h4 class="bold">
                                                Property Details
                                            </h4>
                                        </div>
                                        <div class="row" style="margin-bottom:15px;">
                                            <div class="col-md-8">
                                                @Html.HiddenFor(m => m.SecurityToken)
                                                @Html.HiddenFor(m => m.SessionId)
                                                @Html.HiddenFor(m => m.SequenceNumber)
                                                @Html.HiddenFor(m => m.hotelcode)

                                                @Html.HiddenFor(m => m.Accommodationid)
                                                @Html.HiddenFor(m => m.AccommodatoinType)
                                                @Html.HiddenFor(m => m.AccommodationTypeName)

                                                @Html.HiddenFor(m => m.SupplierPinCode1)
                                                @Html.HiddenFor(m => m.PropertyId)
                                                @Html.HiddenFor(m => m.CustomPropertyId)

                                                @*@Html.HiddenFor(m => m.SupplierAddress)*@
                                                @Html.HiddenFor(m => m.SupplierCity)
                                                @Html.HiddenFor(m => m.SupplierCityname)
                                                @Html.HiddenFor(m => m.SupplierState1)
                                                @Html.HiddenFor(m => m.SupplierCountry1)
                                                @Html.HiddenFor(m => m.SupplierMobile1)
                                                @Html.HiddenFor(m => m.NoInvoiceMail)

                                                @*@Html.HiddenFor(m => m.SupplierEmail)*@

                                                @Html.LabelFor(m => m.PropertyName)<span style="color:red">*</span>
                                                @Html.TextBoxFor(m => m.PropertyName, new { @class = "form-control input-sm", @readonly = "readonly" })
                                                @Html.ValidationMessageFor(m => m.PropertyName)

                                                @Html.HiddenFor(m => m.PropertySupplierCountry)
                                                @Html.HiddenFor(m => m.PropertySupplierstate)
                                                @Html.HiddenFor(m => m.PropertySupplierstateName)
                                                @Html.HiddenFor(m => m.PropertySuppliercityname)

                                            </div>
                                            <div class="col-md-2">
                                                <br />
                                                <input type="button" onclick="browseProperty()" value="Choose Property" class="btn btn-success" id="browsePropertyBtn" />
                                                <span id="propertynames"></span>
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @*@Html.HiddenFor(m => m.SupplierId)*@
                                            @Html.LabelFor(m => m.SupplierName)
                                            @Html.TextBoxFor(m => m.SupplierName, new { @class = "form-control input-sm", @readonly = "readonly" })
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(m => m.PropertyEmail)<span style="color:red">*</span>
                                            @Html.TextBoxFor(m => m.PropertyEmail, new { @class = "form-control input-sm", @readonly = "readonly" })
                                            @Html.ValidationMessageFor(m => m.PropertyEmail)
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.PropertyContactNo)<span style="color:red">*</span>
                                            @Html.TextBoxFor(m => m.PropertyContactNo, new { @class = "form-control input-sm", @readonly = "readonly" })
                                            @Html.ValidationMessageFor(m => m.PropertyContactNo)
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.PropertyAddress)<span style="color:red">*</span>
                                            @Html.TextAreaFor(m => m.PropertyAddress, new { @class = "form-control input-sm", @readonly = "readonly" })
                                            @Html.ValidationMessageFor(m => m.PropertyAddress)
                                        </div>
                                        <div class="form-group">
                                            GST Not Avaliable : <input type="checkbox" id="PropertyGstRegNoCheckBox" />
                                        </div>
                                        <div id="PropertyGstRegNoDiv">
                                            <div class="form-group">
                                                @Html.LabelFor(m => m.PropertyGstRegNo)<span style="color:red">*</span>
                                                @Html.TextBoxFor(m => m.PropertyGstRegNo, new { @class = "form-control input-sm" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.cancellationpolicy)
                                            @Html.TextAreaFor(m => m.cancellationpolicy, new { @class = "form-control input-sm" })
                                        </div>

                                    </div>
                                </div>
                                <div class="col-md-5">
                                    <div class="row">
                                        <h4 class="bold">
                                            &nbsp;
                                        </h4>
                                    </div>


                                    <div class="form-group">
                                        @Html.LabelFor(m => m.PropertyPinCode)
                                        @Html.TextBoxFor(m => m.PropertyPinCode, new { @class = "form-control input-sm", @readonly = "readonly" })
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.PropertyCountry)<span style="color:red">*</span>
                                        @Html.DropDownListFor(m => m.PropertyCountry, Model.PropCountryList, new { @class = "form-control input-sm dropdonreadonly" })
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.PropertyState)<span style="color:red">*</span>
                                        @Html.DropDownListFor(m => m.PropertyState, Model.PropStateList, new { @class = "form-control input-sm dropdonreadonly", id = "PropertyState" })


                                        <span>State Code :</span><label id="PropertyStateCode"></label>

                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.PropertyCity)<span style="color:red">*</span> &nbsp;
                                        <a href="#" id="close_other_cityprop" class="lnk" style="display:none;"><span class="glyphicon glyphicon-remove"></span>choose from the list</a>
                                        @Html.DropDownListFor(m => m.PropertyCity, Model.PropCityList, "select", new { @class = "form-control  dropdonreadonly" })
                                        <div id="other_cityprop" style="display:none;">
                                            @Html.TextBoxFor(m => m.PropertyCityname, new { @class = "form-control input-sm", @readonly = "readonly" })
                                        </div>
                                        @Html.ValidationMessageFor(m => m.PropertyCity)
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.PropertyCaretakerName)
                                        @Html.TextBoxFor(m => m.PropertyCaretakerName, new { @class = "form-control input-sm", @readonly = "readonly" })
                                        @Html.ValidationMessageFor(m => m.PropertyCaretakerName)
                                    </div>
                                    <div class="form-group"><a href="#" id="btnBankDetails" target="_blank" class="btn btn-danger">Update Bank Details</a> </div>
                                </div>
                            </div>

                            <div class="col-md-12 margin-top-10 margin-bot-10">
                                <div class="col-md-5">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.OtherService)
                                        @Html.TextAreaFor(m => m.OtherService, new { @class = "form-control input-sm" })
                                        @Html.ValidationMessageFor(m => m.OtherService)
                                    </div>
                                </div>
                                <div class="col-md-5 col-md-offset-2">

                                </div>
                            </div>
                            <div class="col-md-12 margin-top-10 margin-bot-10 bktype">
                                <div class="col-md-5 tactype">
                                    <label>TAC Amount <span style="color:red">*</span></label>
                                    <input type="text" name="BookingTypeTAC" id="BookingTypeTAC" class="form-control input-sm" value="@Model.BookingTypeTAC" />
                                    GST included &nbsp;  @*<input type="checkbox" id="BookingTypeGSTIncluded" @(Model.BookingTypeGSTIncluded ? "checked=\"checked\"" : "") name="BookingTypeGSTIncluded" />*@
                                    @if (Model.BookingTypeGSTIncluded)
                                    {
                                        @Html.CheckBoxFor(m => m.BookingTypeGSTIncluded, new { @checked = "checked" })
                                    }
                                    else
                                    {
                                        @Html.CheckBoxFor(m => m.BookingTypeGSTIncluded)
                                    }

                                </div>
                                <div class="col-md-5 directtype">
                                    <label>Handling Fee Percentage <span style="color:red">*</span></label>
                                    <input type="text" id="BookingTypePercent" name="BookingTypePercent" value="@Model.BookingTypePercent" class="form-control input-sm" />
                                    <label>Handling Fee Amount <span style="color:red">*</span></label>
                                    <input type="text" id="BookingTypeAmount" name="BookingTypeAmount" value="@Model.BookingTypeAmount" class="form-control input-sm" />

                                    @*// Booking For       *@
                                    <div class="row">
                                        <h4 class="bold">
                                            Booking For
                                        </h4>
                                    </div>
                                    <div id="BookingForChooseBtn" style="display:none">
                                        <br />
                                        <input type="button" onclick="browseBookingFor()" value="Choose Booking For" class="btn btn-success" />
                                        <span id="propertynames"></span>
                                    </div>

                                    <label>Name</label>
                                    <input type="text" id="DirectName" name="DirectName" value="@Model.DirectName" class="form-control input-sm" readonly="readonly" />
                                    @Html.HiddenFor(m => m.BookingForID)
                                    @Html.HiddenFor(m => m.MasterCustomerID)
                                    <label>Email</label>
                                    <input type="text" id="DirectEmail" name="DirectEmail" value="@Model.DirectEmail" class="form-control input-sm" readonly="readonly" />

                                    <label>Address</label>

                                    @Html.TextAreaFor(m => m.DirectAddress, new { @class = "form-control input-sm", @readonly = "readonly" })
                                    <label>Country</label>
                                    @Html.DropDownListFor(m => m.DirectCountry, Model.DirectCountryList, new { @class = "form-control input-sm dropdonreadonly", @readonly = "readonly" })

                                    <label>State</label>
                                    @Html.DropDownListFor(m => m.DirectState, Model.DirectStateList, new { @class = "form-control input-sm dropdonreadonly", @readonly = "readonly" })

                                    <label>City</label>
                                    @Html.DropDownListFor(m => m.DirectCity, Model.DirectCityList, new { @class = "form-control input-sm dropdonreadonly", @readonly = "readonly" })
                                    <div style="display:none;" id="bookingforCityTXT">
                                        <input type="text" id="DirectCitynames" name="DirectCitynames" value="@Model.DirectCitynames" class="form-control input-sm" readonly="readonly" />
                                    </div>
                                    <label>Pin Code</label>
                                    @Html.TextBoxFor(m => m.DirectpinCode, new { @class = "form-control input-sm", @readonly = "readonly" })

                                    <label>Mobile</label>
                                    <input type="text" id="DirectMobile" name="DirectMobile" value="@Model.DirectMobile" class="form-control input-sm" readonly="readonly" />

                                </div>
                            </div>
                            <div class="col-md-12 margin-top-10 margin-bot-10 bktype">
                                <div class="col-md-5">
                                    <label>Nature Of Service<span style="color:red">*</span></label>
                                    @Html.DropDownListFor(m => m.BookingTypeHSNCode, Model.BookingTypeHSNCodes, new { @class = "form-control input-sm" })

                                    <label>GST %<span style="color:red">*</span></label>
                                    <input type="text" id="BookingTypeGST" name="BookingTypeGST" value="@Model.BookingTypeGST" class="form-control input-sm" />
                                </div>
                            </div>
                            <div class="col-md-12 margin-top-10 margin-bot-10 bktype">
                                <div class="col-md-5">
                                    <label>GST Splitup</label>
                                    <h6 id="GSTValidation" style="color:red;display:none;">Taxes spit up should be equal to GST ( % )</h6>
                                    @*@for (int i = 0; i < 4; i++)
                                        {
                                        string nameTxtT_Title = "BookingTypeTaxes[" + i + "].Key";
                                        string nameTxtT_Percent = "BookingTypeTaxes[" + i + "].Value";

                                        string ID_nameTxtT_Title = "BookingTypeTaxes" + i + "__Key";
                                        string ID_nameTxtT_Percent = "BookingTypeTaxes" + i + "__Value";

                                        <div class="row" style="margin-bottom: 4px;">
                                            <div class="col-md-9">
                                                <input type="text" class="form-control input-sm" id="@ID_nameTxtT_Title" name="@nameTxtT_Title" value="@Model.BookingTypeTaxes[i].Key" />
                                            </div>
                                            <div class="col-md-3" style="padding-left: 0px;">
                                                <div class="input-group">
                                                    <input type="text" class="form-control input-sm numberboxTaxPerccent" value="@(Model.BookingTypeTaxes[i].Value > 0 ? Model.BookingTypeTaxes[i].Value.ToString() : " " )" style="text-align: right;" id="@ID_nameTxtT_Percent" name="@nameTxtT_Percent" />
                                                    <span class="input-group-addon">%</span>
                                                </div>
                                            </div>
                                        </div>
                                        }*@
                                    @for (int i = 0; i < 4; i++)
                                    {
                                        <div class="row clsDivGstSplitUpValidation" style="margin-bottom: 4px;">

                                            <div class="col-md-9">
                                                @Html.TextBoxFor(m => m.BookingTypeTaxes[i].TaxTitle, new { @class = "form-control input-sm gst IGSTExist" })
                                                @*< input type="text" class="form-control input-sm" id="@ID_nameTxtT_Title" name="@nameTxtT_Title" value="@Model.BookingTypeTaxes[i].Key" />*@
                                            </div>
                                            <div class="col-md-3" style="padding-left: 0px;">
                                                <div class="input-group">
                                                    @Html.TextBoxFor(m => m.BookingTypeTaxes[i].TaxPercent, new { @class = "form-control input-sm numberboxTaxPerccent text-right" })
                                                    @*<input type="text" class="form-control input-sm numberboxTaxPerccent " value="@(Model.BookingTypeTaxes[i].Value > 0 ? Model.BookingTypeTaxes[i].Value.ToString() : " " )" style="text-align: right;" id="@ID_nameTxtT_Percent" name="@nameTxtT_Percent" />*@
                                                    <span class="input-group-addon">%</span>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                            <div class="col-md-12 margin-top-10 margin-bot-10">
                                <div class="col-md-5">
                                    @Html.LabelFor(m => m.SalesPersonId)<span style="color:red">*</span>
                                    @Html.DropDownListFor(m => m.SalesPersonId, Model.SalesPerson, "Select", new { @class = "form-control input-sm", @onchange = "ChangeSalesPerson(this.value)" })

                                </div>
                            </div>
                            <div class="col-md-12 margin-top-10 margin-bot-10">
                                <div class="col-md-5">
                                    @Html.LabelFor(m => m.SalesRegion)
                                    @Html.TextBoxFor(m => m.SalesRegion, new { @class = "form-control input-sm", @readonly = "readonly" })
                                </div>
                            </div>
                            <div class="col-md-12 margin-top-10 margin-bot-10">
                                <div class="col-md-5">
                                    <div class="form-group">

                                        @Html.CheckBoxFor(m => m.sendmailtocustomer, new { @class = "" })
                                        @Html.LabelFor(m => m.sendmailtocustomer)

                                        &nbsp;   &nbsp;
                                        @Html.CheckBoxFor(m => m.sendmailtosupplier, new { @class = "" })
                                        @Html.LabelFor(m => m.sendmailtosupplier)
                                    </div>
                                </div>
                                <div class="col-md-5 col-md-offset-2">

                                </div>
                            </div>

                            <div class="col-md-12">
                                <div class="col-md-5">
                                    <div class="form-group">
                                        @Html.Label("CC for confirmation email (Please put comma between emails)")
                                        @Html.TextAreaFor(m => m.MailContent, new { @class = "form-control input-sm" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div class="col-md-5">
                                    <div class="form-group">
                                        @Html.LabelFor(m => m.HotelFacility)
                                        @Html.TextAreaFor(m => m.HotelFacility, new { @class = "form-control input-sm mceSimple" })
                                    </div>
                                </div>
                            </div>

                            <div class="col-md-12">
                                <div class="col-md-8">
                                    @*<div class="form-group">*@
                                    <label>ORC : <input type="checkbox" id="chkORC" /></label>
                                    @*</div>*@
                                </div>
                                <div id="OrcDiv">
                                    <div class="col-md-5">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.PayeeName)
                                            @Html.TextBoxFor(m => m.PayeeName, new { @class = "form-control input-sm" })
                                            @Html.HiddenFor(m => m.PayeeID)
                                        </div>
                                    </div>
                                    <div class="col-md-5">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.AmountPayable)
                                            @Html.TextBoxFor(m => m.AmountPayable, new { @class = "form-control input-sm" })
                                        </div>
                                    </div>
                                    <div class="col-md-5">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.BankName)
                                            @Html.TextBoxFor(m => m.BankName, new { @class = "form-control input-sm" })
                                        </div>
                                    </div>
                                    <div class="col-md-5">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.BranchName)
                                            @Html.TextBoxFor(m => m.BranchName, new { @class = "form-control input-sm" })
                                        </div>
                                    </div>

                                    <div class="col-md-5">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.AccountNumber)
                                            @Html.TextBoxFor(m => m.AccountNumber, new { @class = "form-control input-sm" })
                                        </div>
                                    </div>
                                    <div class="col-md-5">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.IFSCcode)
                                            @Html.TextBoxFor(m => m.IFSCcode, new { @class = "form-control input-sm" })
                                        </div>
                                    </div>
                                    <div class="col-md-5">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.PAN)
                                            @Html.TextBoxFor(m => m.PAN, new { @class = "form-control input-sm" })
                                        </div>
                                    </div>
                                </div>

                            </div>
                            @Html.ValidationMessage("SBEntity")<br />
                            @Html.ValidationMessage("SBEntity1")<br />
                            @Html.ValidationMessage("CustomerMobile")<br />
                            @Html.ValidationMessage("CustomerName")<br />
                            @Html.ValidationMessage("CustomerEmail")<br />
                            @Html.ValidationMessage("CustomerCity")<br />
                            @Html.ValidationMessage("PropertyName")<br />
                            @Html.ValidationMessage("PropertyAddress")<br />
                            @Html.ValidationMessage("PropertyCity")<br />
                            @Html.ValidationMessage("PropertyContactNo")<br />
                            @Html.ValidationMessage("SalesPersonId")<br />
                            @Html.ValidationMessage("CustomerPaymentModeId")<br />
                            @Html.ValidationMessage("CustomerGstRegNo")<br />
                            @Html.ValidationMessage("PropertyGstRegNo")<br />





                            @*@Html.ValidationMessage("AccommodationTypeName")<br />

                                @Html.ValidationMessage("BookingDate")<br />*@
                            <div class="col-md-12">
                                <div class="col-md-4">
                                    @*<input type="button" id="btnSave" value="Save" onclick="SaveOffline()" class="btn btn-success marginleft30px" tabindex="23" />*@
                                    <input type="button" id="btnSave" value="Save & Continue" onclick="SubmitOffline()" class="btn btn-success " tabindex="23" />
                                    <a href="~/Admin/OfflineBookingGST/OfflineBooking" id="btnReset" class="btn btn-danger" tabindex="24">Cancel</a>
                                </div>
                            </div>
                            <div class="col-md-12">
                            </div>
                            <div class="col-md-12">
                            </div>
                            <div class="col-md-12">
                            </div>
                            <div class="col-md-12">
                            </div>
                            <!-- Modal -->
                            <div class="modal fade" id="chooseCustomer" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                                            <h4 class="modal-title" id="myModalLabel">Choose Customer</h4>
                                        </div>
                                        <div class="modal-body">
                                            <div class="row">
                                                <div class="col-lg-12">
                                                    @Html.Partial("_BrowsCustomer")
                                                </div>
                                            </div>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>

                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- Modal -->
                            <!-- Modal -->
                            <div class="modal fade" id="chooseSupplier" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                                            <h4 class="modal-title" id="myModalLabel">Choose Supplier</h4>
                                        </div>
                                        <div class="modal-body">
                                            <div class="row">
                                                <div class="col-lg-12">
                                                    @Html.Partial("_BrowseSupplier")
                                                </div>
                                            </div>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- Modal -->
                            <!-- Modal -->
                            <div class="modal fade" id="chooseProperty" tabindex="-1" role="dialog" data-backdrop="static" aria-labelledby="myModalLabel" aria-hidden="true">
                                <div class="modal-dialog" style="width:894px;">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                                            <h4 class="modal-title" id="myModalLabel">Choose Property</h4>
                                        </div>
                                        <div class="modal-body">
                                            <div class="row">
                                                <div class="col-lg-12">
                                                    @Html.Partial("_BrowsProperty")
                                                </div>
                                            </div>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Booking For -->

                            <div class="modal fade" id="chooseBookingFor" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                                <div class="modal-dialog" style="width:894px;">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                                            <h4 class="modal-title" id="myModalLabel">Choose Booking For</h4>
                                        </div>
                                        <div class="modal-body">
                                            <div class="row">
                                                <div class="col-lg-12">
                                                    @Html.Partial("_BrowsBookingFor")
                                                </div>
                                            </div>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- Modal -->
                            <!-- Modal -->
                            <div class="modal fade" id="choosePropertyfromsup" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                                <div class="modal-dialog">
                                    <div class="modal-content">
                                        <div class="modal-header">
                                            <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                                            <h4 class="modal-title" id="myModalLabel">Choose Property</h4>
                                        </div>
                                        <div class="modal-body">
                                            <div class="row">
                                                <div class="col-lg-12">
                                                    @Html.Partial("_BrowsPropertySup")
                                                </div>
                                            </div>
                                        </div>
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- Modal -->
                            <br />
                            <div id="confirmBoxWindow" class="modal fade" role="dialog">
                                <div class="modal-dialog modal-md">

                                    <!-- Modal content-->
                                    <div class="modal-content">
                                        <div class="modal-header">

                                            <h5 class="modal-title">Sale Price is lesser than Buy Price!, Do you want to save?</h5>
                                        </div>

                                        <div class="modal-footer">

                                            <button id="btnConfirmBoxNo" type="button" class="btn btn-primary" data-dismiss="modal">NO</button>
                                            <button id="btnConfirmBoxYes" type="button" class="btn btn-primary" data-dismiss="modal">YES</button>
                                        </div>
                                    </div>

                                </div>
                            </div>
                            <div id="OfflineBookingAlreadyExistsChecking" class="modal fade" role="dialog">
                                <div class="modal-dialog modal-md">

                                    <!-- Modal content-->
                                    <div class="modal-content">
                                        <div class="modal-header">

                                            <h5 class="modal-title">Found a booking with same details - Booking No : <label id="orderno"></label> Do you want to save?</h5>
                                        </div>

                                        <div class="modal-footer">

                                            <button id="OfflineBookingAlreadyExistsCheckingNO" type="button" class="btn btn-danger" data-dismiss="modal">NO</button>
                                            <button id="OfflineBookingAlreadyExistsCheckingYES" type="button" class="btn btn-success" data-dismiss="modal">YES</button>

                                        </div>
                                    </div>

                                </div>
                            </div>
                            <div id="OfflineBookingEditCheckingValueChange" class="modal fade" role="dialog">
                                <div class="modal-dialog modal-md">

                                    <!-- Modal content-->
                                    <div class="modal-content">
                                        <div class="modal-header">

                                            <h5 class="modal-title">We found that Total Pax has been reduced. Please contact administrator to edit this booking.</h5>
                                        </div>

                                        <div class="modal-footer">

                                            <button id="OfflineBookingEditCheckingValueChangeNO" type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                                            @*<button id="OfflineBookingEditCheckingValueChangeYES" type="button" class="btn btn-success" data-dismiss="modal">YES</button>*@

                                        </div>
                                    </div>

                                </div>
                            </div>

                            <div id="BillingIdsDIV" class="modal fade" role="dialog">
                                <div class="modal-dialog modal-md">

                                    <!-- Modal content-->
                                    <div class="modal-content">
                                        <div class="modal-header">

                                            <h5 class="modal-title">Alert: SB Billing entity does not exist in Property State, Do you want to save?</h5>
                                        </div>

                                        <div class="modal-footer">

                                            <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                                            <button id="btnBillingIdsDIVYes" type="button" class="btn btn-primary" data-dismiss="modal">YES</button>
                                        </div>
                                    </div>

                                </div>
                            </div>
                            <div id="GSTStateDiffrent" class="modal fade" role="dialog">
                                <div class="modal-dialog modal-md">

                                    <!-- Modal content-->
                                    <div class="modal-content">
                                        <div class="modal-header">

                                            <h5 class="modal-title">Customer GST State and Property GST State Does not Match Do you Want to Continue ?</h5>
                                        </div>

                                        <div class="modal-footer">

                                            <button id="GSTStateDiffrentNO" type="button" class="btn btn-primary" data-dismiss="modal">NO</button>
                                            <button id="GSTStateDiffrentYes" type="button" class="btn btn-primary" data-dismiss="modal">YES</button>
                                        </div>
                                    </div>

                                </div>
                            </div>
                            <script type="text/javascript">

                                //Done By Rahul
                                $(function () {



                                    $('#CorporateID').change(function () {

                                        $.get("/Common/GetCorporateUserName?id=" + $('#CorporateID').val(), function (data) {
                                            if (data != "") {
                                                $('#CorporateUserID').html(data).append('<option selected="selected" value="0">Select</option>');
                                                $('#ddlCorporateUserID').html(data).append('<option selected="selected" value="0">Select</option>');
                                            }
                                            else {
                                                $('#CorporateUserID').empty().append('<option selected="selected" value="0">not available...</option>');
                                                $('#ddlCorporateUserID').html(data).append('<option selected="selected" value="0">Select</option>');
                                            }

                                            loadcity();
                                        });
                                    });

                                });

                            </script>



                            <script type="text/javascript">
                                $(function () {
                                    $('.gst').autocomplete({
                                        source: ["SGST", "UTGST", "CGST", "IGST"],
                                        minLength: 0
                                    }).focus(function () {
                                        // $(this).autocomplete("search");
                                    })
                                });

                            </script>
                            <script type="text/javascript">
                                /*    var sumOFGST =0.0;

                                    var GST=$('#BookingTypeGST').val();
                                    if(isNaN(GST))
                                    {
                                        GST=0.0;
                                    }
                                    var BookingTypeGST = parseFloat(GST);
                                    $('div.clsDivGstSplitUpValidation :input.numberboxTaxPerccent').each(function(){
                                        //console.log($(this).val());
                                        if(  !isNaN(parseFloat($(this).val())) ) //$(this).val().match(intRegex)
                                            sumOFGST = 0 + sumOFGST + parseFloat($(this).val());
                                        else
                                            console.log('null2');
                                    });


                                    if(sumOFGST.toFixed(4) == BookingTypeGST.toFixed(4))
                                    {
                                        $('#GSTValidation').css("display","none");
                                        console.log('Servi Equal');
                                    }
                                    else{
                                        $('#GSTValidation').css("display","block");
                                        console.log('Servi not Equal');
                                        cnt=1;
                                    }
                                    */

                                $(function() {
                                    $("#gstcustomerdiv").css("display","none");
                                    $("#gstcustomerdivcheckbox").css("display", "none");
                                    $("#btnBankDetails").hide();
                                });

                                $(document).ready(function(){

                                    if(@Model.InventoryAPIType==2)
                                    {
                                        $('#browsePropertyBtn').hide();
                                    }


                                    debugger;
                                    $('#loading').hide();
                                    if(@Model.OfficeBookingID > 0)
                                    {

                                        if(@Model.CustomerType == 5)
                                        {
                                            LoadCustomerGSTStateList(@Model.CustomerGstStateId);

                                            $("#gstcustomerdiv").css("display","block");
                                            $("#gstcustomerdivcheckbox").css("display","block");
                                        }

                                        $.ajax({
                                            type: "Get",
                                            url: "/OfflineBookingGST/GetInvoiceIDByOfflineBookingID?OfflineBookingId=" + @Model.OfficeBookingID,
                                            success: function (data) {

                                                if(data!=null && data!="" && data!=0 && data.trim() != "0" )
                                                {
                                                    $("#browsePropertyBtn").prop("disabled", true);
                                                    $("#browsecustomerBtn").prop("disabled", true);
                                                    $("#browsecustomergststatelistBtn").prop("disabled", true);
                                                    $('#SBEntity1').attr('readonly', true);
                                                    $('#CustomerMobile').attr('readonly', true);
                                                    $('#NewCustomerReferenceNo').attr('readonly', true);
                                                    $('#CustomerCountry').attr('readonly', true);
                                                    $('#CustomerState').attr('readonly', true);
                                                    $('#CustomerCity').attr('readonly', true);
                                                    $('#CustomerAddress').attr('readonly', true);
                                                    $('#CustomerpinCode').attr('readonly', true);
                                                    $('#CustomerpinCode').attr('readonly', true);
                                                    $('#CustomerPaymentModeId').attr('readonly', true);
                                                    $('#CustomerGstStateId').attr('readonly', true);
                                                    $('#CustomerGstRegNo').attr('readonly', true);
                                                }
                                            }
                                        })

                                    }

                                });






                                $("#CustomerGstStateId").change(function() {
                                    var value = $('select#CustomerGstStateId option:selected').val();
                                    if(value!=0 || value!=null||value!="")
                                    {
                                        $.get("/OfflineBookingGST/GetGSTStateCode?stateid=" + value , function (data) {
                                            if (data != "") {
                                                $('#LBLStateCode').html(data);
                                            }
                                            else{
                                                $('#LBLStateCode').html("");
                                            }
                                        });
                                    }
                                });

                            </script>
                            <script src="~/Scripts/tinymce/tiny_mce.js"></script>
                            <script>
                                // $("#OrcDiv").hide();
                                $("#chkORC").change(function () {
                                    if (this.checked) {

                                        $("#OrcDiv").show();
                                    }
                                    else {
                                        $("#OrcDiv").hide();
                                    }
                                });


                                function BookingDate() {
                                    re = /^\d{1,2}\/\d{1,2}\/\d{4}$/;
                                    var date = $("#Bookingdate").val()
                                    if (date == null || date == "") {
                                        var curDate = new Date();
                                        curDate.setDate(curDate.getDate());
                                        var idat = pad(curDate.getDate(), 2) + "/" + pad(parseInt(curDate.getMonth()) + 1, 2) + "/" + curDate.getFullYear();
                                        $("#Bookingdate").val(idat);
                                    }
                                    else if (date != '' && !date.match(re)) {
                                        var curDate = new Date();
                                        curDate.setDate(curDate.getDate());
                                        var idat = pad(curDate.getDate(), 2) + "/" + pad(parseInt(curDate.getMonth()) + 1, 2) + "/" + curDate.getFullYear();
                                        $("#Bookingdate").val(idat);
                                    }
                                    else {
                                        return true;
                                    }
                                }


                                tinyMCE.init({
                                    mode: "textareas",
                                    theme: "simple",
                                    force_br_newlines: true,
                                    force_p_newlines: false,
                                    theme_simple_toolbar_location: "top",
                                    height: "100", width: "420",
                                    editor_selector: "mceSimple"

                                });

                            </script>
                            <script type="text/javascript">



    function onClickNewProperty()
    {
        $.get('@Url.Action("EditCustomProperty", "CustomProperty")',function (data){
            $("#SalesRegion").val(data);
        });
    }

    function ChangeSalesPerson(salespersonid)
    {
        var id=salespersonid;
        $.get('@Url.Action("GetSalesRegion", "OfflineBookingGST")?id='+ salespersonid,function (data){
            $("#SalesRegion").val(data);
        });
    }

    function changecheckout()
    {
        var CheckOutdt =   moment( $("#CheckOut").val(), "DD/MM/YYYY");
        var Checkindt =    moment( $("#CheckIn").val(), "DD/MM/YYYY");

        var days = daydiff(Checkindt, CheckOutdt );
        $("#NoOfNight").val(days);

        onchangestaxbuyprice();
        onchangestaxsaleprice();
    }

    function changenoofnight()
    {
        var CheckOutdt =   moment( $("#CheckOut").val(), "DD/MM/YYYY");
        var Checkindt  =    moment( $("#CheckIn").val(), "DD/MM/YYYY");
        var Noofnight  =   $("#NoOfNight").val();
        if(isNaN(parseFloat(Noofnight))){ Noofnight = 0;}
        var updatecheckoutdt =moment( Checkindt.add("days",Noofnight),"DD/MM/YYYY" ).format("DD/MM/YYYY");
        //$("#CheckOut").val(updatecheckoutdt);

        onchangestaxbuyprice();
        onchangestaxsaleprice();
    }

    function changecheckin()
    {
        var CheckOutdt =   moment( $("#CheckOut").val(), "DD/MM/YYYY");
        var Checkindt =    moment( $("#CheckIn").val(), "DD/MM/YYYY");

        var days = daydiff(Checkindt, CheckOutdt );
        $("#NoOfNight").val(days);

        onchangestaxbuyprice();
        onchangestaxsaleprice();
    }
    function changenoofrooms()
    {
        onchangestaxbuyprice();
        onchangestaxsaleprice();
    }
    //$("#spnrAdnight").bind( function(){
    //    alert("sdsd1");
    //});

    //function night()
    //{
    //    alert( $('#spnrAdnight').text());
    //    $("#NoOfNight").val();
    //}

    //function rooms()
    //{
    //    $("#NoOfRooms").val();
    //}
    //function adult()
    //{
    //    $("#NoOfPaxAdult").val();
    //}
    //function child()
    //{
    //    $("#NoOfPaxChild").val();
    //}
    //$('#spnrCdrooms').bind( function(){
    //    alert("sdsd2");
    //});

    //$('#sprbxadult').bind( function(){
    //    alert("sdsd3");
    //});

    //$('#sprbxchild').bind( function(){
    //    alert("sdsd4");
    //});

    $("#AccommodationTypeName").autocomplete({
        minLength: 0,
        source: "/Common/GetAccommodation",
        focus: function (event, ui) {
            $("#AccommodationTypeName").val(ui.item.value);
            return false;
        }
    })
    .autocomplete("instance")._renderItem = function (ul, item) {
        ul.addClass("custom");
        return $("<li>") //.addClass("custom")
        .append("<a>" + item.label )
        .appendTo(ul);
    };

    function SaveOffline()
    {
        var PropertyId = $("#PropertyId").val();
        //var SupplierId = $("#SupplierId").val();
        var accommodationtypeid = $("#AccommodatoinType").find('option:selected').attr('value');
        var AccommodationId =$("#AccommodatoinType").find('option:selected').attr('id');
        var staycategoryid =$("#StayType").find('option:selected').attr('value');
        $("#Accommodationtypeid").val($("#AccommodatoinType").val());
        $("#Accommodationid").val(AccommodationId);
        $("#StayCategoryid").val($("#StayType").find('option:selected').attr('value'));

        $("#FormOfflineBooking").submit();

        //$.get("/OfflineBooking/SaveOfflineBooking", $("#FormOfflineBooking").serialize(), function (data) {
        //    if (data != "") {
        //        if( data != 0)
        //        {
        //            alert("Saved Successfully");
        //        }
        //    }
        //});
    }


    function SubmitOff(tnc)
    {

        if(tnc == 0)
        {
            //debugger
            //var PropertyId = $("#PropertyId").val();
            ////var SupplierId = $("#SupplierId").val();
            //var accommodationtypeid = $("#AccommodatoinType").find('option:selected').attr('value');
            //var AccommodationId =$("#AccommodatoinType").find('option:selected').attr('id');
            //var staycategoryid =$("#StayType").find('option:selected').attr('value');
            //$("#Accommodationtypeid").val($("#AccommodatoinType").val());
            //$("#Accommodationid").val(AccommodationId);
            //$("#StayCategoryid").val($("#StayType").find('option:selected').attr('value'));
            var validaccount = true;
            if ($("#CustomPropertyId").val() > 0) {

                $.ajax({
                    type: "POST",
                    url: '/Admin/Property/ValidAccountCustomProp',
                                data: { id: $("#CustomPropertyId").val() },

                    async: false
                }).done(function (result) {
                    if (result == "0") {
                        $("#btnBankDetails").prop("href", "/Admin/CustomProperty/EditCustomProperty?CustomPropertyId=" + $("#CustomPropertyId").val());
                        $("#btnBankDetails").show();
                        alert('The property "' + $("#PropertyName").val() + '" do not have bank details. Please update in Custom Property Page');
                        validaccount=false;
                        return;
                    }
                });
            } else {
                if ($("#PropertyId").val() > 0) {
                    $.ajax({
                        type: "POST",
                        url: '/Admin/Property/ValidAccountProperty',
                                data: { id: $("#PropertyId").val() },
                        async: false
                    }).done(function (result) {
                        if (result == "0") {

                            $.ajax({
                                type: "POST",
                                url: '/Admin/Property/GetOwner',
                                data: { id: $("#PropertyId").val() },
                                async: false
                            }).done(function (result) {
                                if (result != "0") {
                                    $("#btnBankDetails").prop("href", "/Admin/Supplier/Details/" + result);
                                    $("#btnBankDetails").show();
                                }
                                });


                            alert('The property "' + $("#PropertyName").val() + '" do not have bank details. Please update in Supplier details page');
                            validaccount=false;
                            return;
                        }
                    });
                }
            }
            if (!validaccount) { return; }
           // $("#btnBankDetails").hide();

            $('#FormOfflineBooking').attr('action', "/Admin/OfflineBookingGST/MultipleBooking").submit();
        }

    }

    function SubmitOffline1()
    {
        $.ajax({
            type: "POST",
            url: "/Admin/OfflineBookingGST/OfflineBookingAlreadyExistsChecking",
            data: { CustomerName: $("#CustomerName").val(), GuestName: $("#GuestName").val(), PropertyName: $("#PropertyName").val(), CheckIn: $("#CheckIn").val(), CheckOut: $("#CheckOut").val(),SalesPersonId: $("#SalesPersonId").val(),OfflineBookingId:$("#OfflineBookingId").val()},
        }).done(function (data) {

            if (data == 0) {

                var default_gst = 18;
                $("#StaxForSalePrice").val(default_gst);

                var cnt=0;
                var servTax=$('#StaxForSalePrice').val();
                var servOtherTax=$('#StaxForotherForSalePrice').val();
                if(isNaN(servTax))
                {
                    servTax=0.0;
                }
                if(isNaN(servOtherTax))
                {
                    servOtherTax=0.0;
                }
                var StaxForSalePrice = parseFloat(servTax);
                var StaxForotherForSalePrice= parseFloat(servOtherTax);
                var sumOFServiceTax =0.0; var sumOFServiceTaxOthers=0.0;
                var intRegex = /^\d+(?:\.\d\d?)?$/;
                $('div.clsDivServiceTaxSplitUpValidation :input.numberboxTaxPerccent').each(function(){
                    //console.log($(this).val());
                    if( !isNaN(parseFloat($(this).val())) )
                        sumOFServiceTax = 0 + sumOFServiceTax + parseFloat($(this).val());
                    else
                        console.log('null1');
                });
                $('div.clsDivServiceTaxOthersSplitUpValidation :input.numberboxTaxPerccent').each(function(){
                    //console.log($(this).val());
                    if(  !isNaN(parseFloat($(this).val())) ) //$(this).val().match(intRegex)
                        sumOFServiceTaxOthers = 0 + sumOFServiceTaxOthers + parseFloat($(this).val());
                    else
                        console.log('null2');
                });
                if(sumOFServiceTax.toFixed(4) == StaxForSalePrice.toFixed(4))
                {
                    $('#ServiceTaxSplitUpValidation').css("display","none");
                    console.log('Servi Equal');
                }
                else{
                    $('#ServiceTaxSplitUpValidation').css("display","block");
                    console.log('Servi not Equal');
                    cnt=1;
                }
                if(sumOFServiceTaxOthers.toFixed(4) == StaxForotherForSalePrice.toFixed(4))
                {
                    $('#ServiceTaxOthersSplitUpValidation').css("display","none");
                    console.log('Servi Others Equal');
                }
                else{
                    $('#ServiceTaxOthersSplitUpValidation').css("display","block");
                    console.log('Servi Others not Equal');
                    cnt=2;
                }
                SubmitOff(cnt);
            }
            else {
                $("#orderno").html(data);
                $('#OfflineBookingAlreadyExistsChecking').modal({
                    backdrop: 'static',
                    keyboard: false
                })
                  .one('click', '#OfflineBookingAlreadyExistsCheckingYES', function(e) {
                      var cnt = 0;
                      var default_gst = 18;
                      $("#StaxForSalePrice").val(default_gst);

                      var servTax=$('#StaxForSalePrice').val();
                      var servOtherTax=$('#StaxForotherForSalePrice').val();
                      if(isNaN(servTax))
                      {
                          servTax=0.0;
                      }
                      if(isNaN(servOtherTax))
                      {
                          servOtherTax=0.0;
                      }
                      var StaxForSalePrice = parseFloat(servTax);
                      var StaxForotherForSalePrice= parseFloat(servOtherTax);
                      var sumOFServiceTax =0.0; var sumOFServiceTaxOthers=0.0;
                      var intRegex = /^\d+(?:\.\d\d?)?$/;
                      $('div.clsDivServiceTaxSplitUpValidation :input.numberboxTaxPerccent').each(function(){
                          //console.log($(this).val());
                          if( !isNaN(parseFloat($(this).val())) )
                              sumOFServiceTax = 0 + sumOFServiceTax + parseFloat($(this).val());
                          else
                              console.log('null1');
                      });
                      $('div.clsDivServiceTaxOthersSplitUpValidation :input.numberboxTaxPerccent').each(function(){
                          //console.log($(this).val());
                          if(  !isNaN(parseFloat($(this).val())) ) //$(this).val().match(intRegex)
                              sumOFServiceTaxOthers = 0 + sumOFServiceTaxOthers + parseFloat($(this).val());
                          else
                              console.log('null2');
                      });
                      if(sumOFServiceTax.toFixed(4) == StaxForSalePrice.toFixed(4))
                      {
                          $('#ServiceTaxSplitUpValidation').css("display","none");
                          console.log('Servi Equal');
                      }
                      else{
                          $('#ServiceTaxSplitUpValidation').css("display","block");
                          console.log('Servi not Equal');
                          cnt=1;
                      }
                      if(sumOFServiceTaxOthers.toFixed(4) == StaxForotherForSalePrice.toFixed(4))
                      {
                          $('#ServiceTaxOthersSplitUpValidation').css("display","none");
                          console.log('Servi Others Equal');
                      }
                      else{
                          $('#ServiceTaxOthersSplitUpValidation').css("display","block");
                          console.log('Servi Others not Equal');
                          cnt=2;
                      }
                      SubmitOff(cnt);
                  });

            }
        })




    }
    $('#SBEntity1').change(function () {
        $.get("/OfflineBookingGST/GetBillingStateId?id=" + $('#SBEntity1').val(), function (data) {
            if (data != "")
            {
                $('#BillingStateID').val(data);
            }


        });
    });

    function SaveOfflineData()
    {

        var cnt=0;

        var BookingType=$('#BookingType').val();

        var direct=@((int)@CLayer.ObjectStatus.OfflineBookingType.Direct);
        var tca=@((int)@CLayer.ObjectStatus.OfflineBookingType.TAC);
        if(BookingType==direct || BookingType==tca)
        {
            var sumOFGST =0.0;

            var GST=$('#BookingTypeGST').val();
            if(isNaN(GST))
            {
                GST=0.0;
            }
            var BookingTypeGST = parseFloat(GST);
            $('div.clsDivGstSplitUpValidation :input.numberboxTaxPerccent').each(function(){
                //console.log($(this).val());
                if(  !isNaN(parseFloat($(this).val())) ) //$(this).val().match(intRegex)
                    sumOFGST = 0 + sumOFGST + parseFloat($(this).val());
                else
                    console.log('null2');
            });


            if(sumOFGST.toFixed(4) == BookingTypeGST.toFixed(4))
            {
                $('#GSTValidation').css("display","none");
                console.log('Servi Equal');
            }
            else{
                $('#GSTValidation').css("display","block");
                console.log('Servi not Equal');
                cnt=1;
            }
        }

        //

        if($('#UserType').val() =="Corporate")
        {
            if( $('#CustomerGstStateId').val()  != $('#PropertyState').val() && $('#BillingStateID').val()  != $('#PropertyState').val()  )
            {
                $('#GSTStateDiffrent').modal({
                    backdrop: 'static',
                    keyboard: false
                })
                 .one('click', '#GSTStateDiffrentNO', function(e) {
                     $("#GSTStateDiffrent").modal('hide');
                 })
                .one('click', '#GSTStateDiffrentYes', function(e) {
                    if(cnt==0)
                    {
                        SubmitOff(0)
                    }

                });
            }
            else
            {
                if(cnt==0)
                {
                    SubmitOff(0)
                }
            }
        }
        else{
            if(cnt==0)
            {
                SubmitOff(0)
            }
        }
    }




    function SubmitOffline()
    {
        //debugger;
        if($('#UserTypeName').val() != "Corporate")
        {
            $("#CustomerPaymentModeId").rules("remove", "required");
        }
        else
        {
            $("#CustomerPaymentModeId").rules("add", "required");
        }


        if($('#FormOfflineBooking').valid()){

            if(CheckValidationEnabled() == false)
            {
                //return false;
                SubmitOff(0);
                return;
            }

            //CheckregbillpropertyValid();

            if(creditdaysValidation()==true)
            {
                CheckregbillpropertyValid();
            }

            //CustomerFieldsValidation()// /CheckregbillpropertyValid() == true //isValidBookingType == true && CheckBookingdateValid() == true
            //CheckSuppliergstNumber()// CheckCustomergstNumber() //PropertyFieldsValidation()
            //SalePersonFieldsValidation()
        }
    }

    //
    @*var byPrice = parseFloat($('#TotalBuyPrice').val()) > 0 ? parseFloat($('#TotalBuyPrice').val()) : 0;
                                        var salePrice = parseFloat($('#TotalSalePrice').val()) > 0 ? parseFloat($('#TotalSalePrice').val()) : 0;
                                        if($('#OfflineBookingId').val()!=null||$('#OfflineBookingId').val()!=""||$('#OfflineBookingId').val()!=0 )
                                        {
                                            debugger
                                            var id= $('#OfflineBookingId').val();
                                            //$.get("/Admin/OfflineBooking/StatusUpdateOfflineBookingEdit?id=" + id, function (data) {
                                            var Approved= @((int)@CLayer.ObjectStatus.BookingOfflineStatus.Approved)
                                            var ApprovedFromModel=@status;
                                            @if(hasEditPermisson) {<text>var hasPermission =  true;</text>}else{<text>var hasPermission =  false;</text>}
                                            if(Approved==ApprovedFromModel)
                                            {//checking for approved models
                                                //   var totalPax=(@nonightnorooms);
                                                //      var textbox_NoOfNight =  $('#NoOfNight').val();
                                                //   var textbox_NoOfRooms=  $('#NoOfRooms').val();
                                                @*$('#NoOfNight').val(@nonight);
                                                $('#NoOfRooms').val(@norooms);*@
    //  var totalpaxTextbox=(textbox_NoOfNight*textbox_NoOfRooms)
    //   if(totalpaxTextbox > totalPax && (!hasPermission) )//&& (!hasPermission)
    //  {
    //show message and leave, no save
    //message
    //      $('#OfflineBookingEditCheckingValueChange').modal({
    //         backdrop: 'static',
    //        keyboard: false
    //     })

    //  //   return;
    //  //   }
    //}

    //if(byPrice > salePrice  )
    //{
    //    $('#confirmBoxWindow').modal({
    //        backdrop: 'static',
    //        keyboard: false
    //    })
    //    .one('click', '#btnConfirmBoxYes', function(e) {
    //        SubmitOffline1();
    //    });
    //    //.one('click', '#btnConfirmBoxNo', function(e) {
    //    //    console.log('No');
    //    //});
    //}else{
    //    SubmitOffline1();
    //}
    // }//offline id checking

    function onchangestaxbuyprice()
    {
        debugger;
        var avgdailyrate = parseFloat( $("#AvgDailyRateBefreStaxForBuyPrice").val());
        var noofnight = parseFloat($("#NoOfNight").val());
        var noofrooms = parseFloat($("#NoOfRooms").val());
        var Stax  =parseFloat( $("#StaxForBuyPrice").val());

        var avgdailyrateother = parseFloat( $("#BuyPriceforotherservicesForBuyprice").val());
        var Staxother  =parseFloat( $("#StaxForotherBuyPrice").val());

        if(isNaN(parseFloat(avgdailyrate))){ avgdailyrate = 0;}
        if(isNaN(parseFloat(avgdailyrateother))){ avgdailyrateother = 0;}
        if(isNaN(parseFloat(noofnight))){ noofnight = 0;}
        if(isNaN(parseFloat(noofrooms))){ noofrooms = 0;}
        if(isNaN(parseFloat(Stax))){ Stax = 0;}
        if(isNaN(parseFloat(Staxother))){ Staxother = 0;}

        var total =parseFloat( ( avgdailyrate + (avgdailyrate*Stax/100)) * noofnight * noofrooms );

        $("#TotalAmtForBuyPrice").val(Math.round(total));


        var totalbuyamount =  parseFloat ($("#TotalAmtForBuyPrice").val() );


        var totalbuyotheramount = parseFloat(avgdailyrateother + (avgdailyrateother * Staxother /100) );
        $("#TotalAmtotherForBuyPrice").val(totalbuyotheramount);

        if(isNaN(parseFloat(totalbuyamount))){ totalbuyamount = 0;}
        if(isNaN(parseFloat(totalbuyotheramount))){ totalbuyotheramount = 0;}

        var totalbuy = parseFloat( ( totalbuyamount + totalbuyotheramount));
        //alert(totalbuy);
        $("#TotalBuyPrice").val(totalbuy);

    }


    function onchangestaxsaleprice()
    {
        var avgdailyrate =parseFloat( $("#AvgDailyRateBefreStaxForSalePrice").val());
        var noofnight = parseFloat($("#NoOfNight").val());
        var noofrooms = parseFloat($("#NoOfRooms").val());

        var default_gst = 18;
        $("#StaxForSalePrice").val(default_gst);

        var Stax  =parseFloat( $("#StaxForSalePrice").val());

        var avgdailyrateother =parseFloat( $("#BuyPriceforotherservicesForSalePrice").val());
        var Staxother  =parseFloat( $("#StaxForotherForSalePrice").val());


        if(isNaN(parseFloat(avgdailyrate))){ avgdailyrate = 0;}
        if(isNaN(parseFloat(avgdailyrateother))){ avgdailyrateother = 0;}
        if(isNaN(parseFloat(noofnight))){ noofnight = 0;}
        if(isNaN(parseFloat(noofrooms))){ noofrooms = 0;}
        if(isNaN(parseFloat(Stax))){ Stax = 0;}
        if(isNaN(parseFloat(Staxother))){ Staxother = 0;}


        var total =parseFloat( ( avgdailyrate + (avgdailyrate * Stax / 100 )) * noofnight * noofrooms );
        $("#TotalAmtForSalePrice").val(Math.round(total));

        var totalbuyamount = parseFloat ($("#TotalAmtForSalePrice").val());

        var totalbuyotheramount =parseFloat(avgdailyrateother + ( avgdailyrateother * Staxother /100) );

        $("#TotalAmtotherForSalePrice").val(totalbuyotheramount) ;

        var default_gst = 18;
        $("#StaxForSalePrice").val(default_gst);

        $("#TotalSalePrice").val(totalbuyamount + totalbuyotheramount);

    }

    function onchangestaxbuypriceforotherservice()
    {
        var avgdailyrateother = parseFloat( $("#BuyPriceforotherservicesForBuyprice").val());
        var noofnight = parseFloat($("#NoOfNight").val());
        var noofrooms = parseFloat($("#NoOfRooms").val());
        var Staxother = parseFloat($("#StaxForotherBuyPrice").val());

        var default_gst = 18;
        $("#StaxForSalePrice").val(default_gst);

        var avgdailyrate = parseFloat( $("#AvgDailyRateBefreStaxForBuyPrice").val());
        var Stax  =parseFloat( $("#StaxForBuyPrice").val());

        if(isNaN(parseFloat(avgdailyrate))){ avgdailyrate = 0;}
        if(isNaN(parseFloat(Stax))){ Stax = 0;}


        if(isNaN(parseFloat(avgdailyrateother))){ avgdailyrateother = 0;}
        if(isNaN(parseFloat(Staxother))){ Staxother = 0;}

        var total = parseFloat( ( avgdailyrateother + Staxother));

        $("#TotalAmtotherForBuyPrice").val(Math.round( total));


        var totalbuyamount =parseFloat( avgdailyrate + Stax);
        $("#TotalAmtForBuyPrice").val(totalbuyamount);

        var totalbuyotheramount =parseFloat( $("#TotalAmtotherForBuyPrice").val() );
        $("#TotalBuyPrice").val(totalbuyamount + totalbuyotheramount);


    }


    function onchangestaxsalepriceforotherservice()
    {
        var avgdailyrateother =parseFloat( $("#BuyPriceforotherservicesForSalePrice").val());
        var noofnight = parseFloat($("#NoOfNight").val());
        var noofrooms = parseFloat($("#NoOfRooms").val());
        var Staxother = parseFloat($("#StaxForotherForSalePrice").val());

        var default_gst = 18;
        $("#StaxForSalePrice").val(default_gst);

        var avgdailyrate = parseFloat($("#AvgDailyRateBefreStaxForSalePrice").val());
        var Stax = parseFloat($("#StaxForSalePrice").val());

        if(isNaN(parseFloat(avgdailyrate))){ avgdailyrate = 0;}
        if(isNaN(parseFloat(Stax))){ Stax = 0;}

        if(isNaN(parseFloat(avgdailyrateother))){ avgdailyrateother = 0;}
        if(isNaN(parseFloat(Staxother))){ Staxother = 0;}

        var total = parseFloat( ( avgdailyrateother + Staxother));

        $("#TotalAmtotherForSalePrice").val(Math.round(total));


        var totalbuyamount = parseFloat(avgdailyrate + Stax );
        $("#TotalAmtForSalePrice").val(totalbuyamount);
        var totalbuyotheramount =parseFloat( $("#TotalAmtotherForSalePrice").val() );


        $("#TotalSalePrice").val(parseFloat (totalbuyamount) + parseFloat (totalbuyotheramount));
    }


    function onchangetotalbuyprice()
    {
        var totalbuyamount =  parseFloat ($("#TotalAmtForBuyPrice").val() );
        var totalbuyotheramount =parseFloat( $("#TotalAmtotherForBuyPrice").val());

        if(isNaN(parseFloat(totalbuyamount))){ totalbuyamount = 0;}
        if(isNaN(parseFloat(totalbuyotheramount))){ totalbuyotheramount = 0;}

        var totalbuy = parseFloat( ( totalbuyamount + totalbuyotheramount));
        $("#TotalBuyPrice").val(totalbuy);

    }

    function onchangetotalsaleprice()
    {
        var totalbuyamount = parseFloat ($("#TotalAmtForSalePrice").val());
        var totalbuyotheramount = parseFloat( $("#TotalAmtotherForSalePrice").val());

        if(isNaN(parseFloat(totalbuyamount))){ totalbuyamount = 0;}
        if(isNaN(parseFloat(totalbuyotheramount))){ totalbuyotheramount = 0;}

        var totalbuy = parseFloat( ( totalbuyamount + totalbuyotheramount));
        $("#TotalSalePrice").val(totalbuy);

    }

    function GenBookAmt(){

        var PropertyId = $("#PropertyId").val();
        if(PropertyId != "" && PropertyId >0)
        {
            if($("input[id=Defaultcheck]").is(":checked") == true)
            {
                document.getElementById("pricediv").style.display = "block";
                var SupplierId = $("#SupplierId").val();
                var accommodationtypeid = $("#AccommodatoinType").find('option:selected').attr('value');
                var AccommodationId =$("#AccommodatoinType").find('option:selected').attr('id');
                var staycategoryid =$("#StayType").find('option:selected').attr('value');
                $("#Accommodationtypeid").val($("#AccommodatoinType").val());
                $("#Accommodationid").val(AccommodationId);
                $("#StayCategoryid").val($("#StayType").find('option:selected').attr('value'));

                var booking_CheckIndate= $("#CheckIn").val();
                var booking_CheckOutdate = $("#CheckOut").val();


                var NoOfNight = $("#NoOfNight").val();
                var NoOfRooms= $("#NoOfRooms").val();

                var NoOfpax_Adult =$("#NoOfPaxAdult").val();
                var NoOfpax_Child =$("#NoOfPaxChild").val();

                $('#pricingdet').html("");
                //{ propertyid :  PropertyId ,SupplierId :SupplierId,accommodationtypeid:accommodationtypeid, AccommodationId: AccommodationId,staycategoryid:staycategoryid,booking_CheckIndate :booking_CheckIndate,booking_CheckOutdate :booking_CheckOutdate,NoOfNight :NoOfNight,NoOfRooms :NoOfRooms,NoOfpax_Adult :NoOfpax_Adult,NoOfpax_Child:NoOfpax_Child }
                // controller part - long propertyid, long SupplierId, long accommodationtypeid, long AccommodationId, long staycategoryid, string booking_CheckIndate, string booking_CheckOutdate, int NoOfNight, int NoOfRooms, int NoOfpax_Adult, int NoOfpax_Child
                $.get("/OfflineBookingGST/SetPricingDetailsforOffline", $("#FormOfflineBooking").serialize(), function (data) {
                    if (data != "") {

                        document.getElementById("pricediv").style.display = "none";
                        $('#pricingdet').html(data);

                    }
                });
            }



        }

    }

    //$('#AccommodatoinType').change(function () {
    //    if($("#AccommodatoinType").find('option:selected').attr('Value') == -1)
    //    {
    //        document.getElementById("Accdiv").style.display = "none";
    //        document.getElementById("other_Acctype").style.display = "block";
    //        document.getElementById("close_other_Acctype").style.display = "block";
    //    }

    //    GenBookAmt();

    //});



    //function Accdivdisplay(){
    //    document.getElementById("Accdiv").style.display = "block";
    //    document.getElementById("other_Acctype").style.display = "none";
    //    document.getElementById("close_other_Acctype").style.display = "none";
    //}

    $('#StayType').change(function () {

        if($("#StayType").find('option:selected').attr('Value') == -1)
        {
            document.getElementById("staydiv").style.display = "none";
            document.getElementById("other_staytype").style.display = "block";
            document.getElementById("close_other_staytype").style.display = "block";
        }

    });



    function staydivdisplay(){
        document.getElementById("staydiv").style.display = "block";
        document.getElementById("other_staytype").style.display = "none";
        document.getElementById("close_other_staytype").style.display = "none";
    }


    function browseSupplier() {
        $('#chooseSupplier').modal('show');
    }

    function browseProperty() {

        $('#chooseProperty').modal('show');
    }
    function browseBookingFor() {

        $('#chooseBookingFor').modal('show');
    }

    function onCancelCustomPropSave()
    {
        $('#chooseProperty').modal('hide');
    }

    function browsecustomer() {

        $('#chooseCustomer').modal('show');
    }

    function supSelected(corpId)
    {


        $("#SupplierId").val(corpId);

        $('#chooseSupplier').modal('hide');
        $('#choosePropertyfromsup').modal('show');


        document.getElementById("searchpropfromsup").style.display = "none";
        document.getElementById("goidforsup").style.display = "none";


        $("#SupplierName").val($("#supname_" + corpId).html());
        $("#SupplierEmail").val($("#supemail_" + corpId).html());
        $("#SupplierMobile").val($("#supmobile_" + corpId).html());
        $("#SupplierAddress").val($("#supaddress_" + corpId).html());


        var c = $("#supCountryid_" + corpId).html();
        var s = $("#supStateId_" + corpId).html();
        var ci = $("#supCityId_" + corpId).html();

        $("#SupplierCountry").val(c);


        $.get("/Common/GetState?id=" + $('#SupplierCountry').val(), function (data) {S
            if (data != "") {
                $('#SupplierState').empty().append(data);
                $("#SupplierState").val(s);
                $("#SupplierState option[value= '" + s + "' ]").attr("selected","selected");
            }
            else {
                $('#SupplierState').empty().append('<option selected="selected" value="0">not available...</option>');
            }
        });


        $.get("/Common/GetCity?id=" + s, function (data) {
            if (data != "") {
                $('#SupplierCity').html(data).append('<option selected="selected" value="0">Select</option>');;
                $("#SupplierCity").val(ci);
                $("#SupplierCity option[value= '" + ci + "' ]").attr("selected","selected");

                $("#SupplierCityname").val($("#SupplierCity").find('option:selected').text());

            }
            else {
                $('#SupplierCity').html('<option selected="selected" value="0">not available...</option>');
            }
        });


        var cname1 =  corpId;
        $.post('@Url.Action("Searchforofflinebookaftersup", "property", new { area = "Admin" })', { name: cname1 },function (data){
            $("#browseListprofromsup").html(data);
        });
        $("#searchsup").val("");

        //GenBookAmt();
    }
    function CustomerValueAppend(corpId)
    {
        //debugger;
        $("#CustomerId").val(corpId);
        // Booking for
        if(corpId>0)
        {
            $("#MasterCustomerID").val(corpId);
            $("#BookingForChooseBtn").show();

        }

        $("#FromCustomer").val(2);
        $("#FromCustomerId").val(corpId)

        if($("#CustomerType11Hidden" + corpId).html() == "7" )
        {
            $("#UserTypeName").val("Customer");
            $("#gstcustomerdiv").css("display","none");
            $("#gstcustomerdivcheckbox").css("display","none");

        }
        else
        {
            $("#UserTypeName").val("Corporate");
            LoadCustomerGSTStateList(0);
            $("#gstcustomerdiv").css("display","block");
            $("#gstcustomerdivcheckbox").css("display","block");
        }



        $("#CustomerName").val(htmlDecode($("#CustomerName1Hidden" + corpId).html()));
        $("#CustomerEmail").val($("#CustomerEmail1Hidden" + corpId).html());
        $("#CustomerMobile").val($("#CustomerMobile1Hidden" + corpId).html());
        $("#GuestName").val(htmlDecode($("#GuestName1Hidden" + corpId).html()));
        $("#GuestEmail").val($("#GuestEmail1Hidden" + corpId).html());
        $("#CustomerpinCode").val($("#CustomerpinCodeHidden" + corpId).html());
        $("#CustomerpinCode").val($("#CustomerpinCodeHidden" + corpId).html());
        $("#CustomerAddress").val(htmlDecode($("#CustomerAddress1Hidden" + corpId).html()));
        $("#CustomerCityname").val($("#CustomerCitynameHidden" + corpId).html());

        $("#BillingCountryId1").val($("#HiddenBillingCountryId" + corpId).html());
        $("#BillingState1").val($("#HiddenBillingState" + corpId).html());
        $("#BillingCity1").val($("#HiddenBillingCity" + corpId).html());
        $("#PinCode1").val($("#HiddenBillingPinCode" + corpId).html());

        $("#BillingMobile1").val($("#HiddenBillingMobile" + corpId).html());
        $("#ContactPerson1").val($("#HiddenContactPerson" + corpId).html());
        $("#OfficeNO1").val($("#HiddenOfficeNO" + corpId).html());
        $("#BillingAddress1").val($("#HiddenBillingAddress" + corpId).html());

        $("#NoInvoiceMail").val($("#HIddenNoInvoiceMail" + corpId).html());


        var PayModeId=$("#CustomerPaymentModeHidden" + corpId).html();

        if(PayModeId!=null && PayModeId !=undefined)
        {
            var period = $("#CreditDaysHidden" + corpId).html();

            $('#CustomerPaymentCreditPeriod').val(period);
            $('#CustomerPaymentModeId').val(PayModeId);
            if(PayModeId==="3"){
                $('#divCustomerPaymentCredit').show();
            }
            else{
                $('#divCustomerPaymentCredit').hide();
                //$("#CustomerPaymentCreditPeriod").attr("placeholder", "0.00");
            }
        }




        var c = $("#CustomerCountryHidden" + corpId).html();
        var s = $("#CustomerStateHidden" + corpId).html();

        var ci = $("#CustomerCity1Hidden" + corpId).html();
        var CityName = $("#CustomerCitynameHidden" + corpId).html();

        $("#CustomerCountry").val(c);

        $.get("/Common/GetState?id=" + $('#SupplierCountry').val(), function (data) {
            if (data != "") {
                $('#CustomerState').empty().append(data);
                $("#CustomerState").val(s);
                $("#CustomerState option[value= '" + s + "' ]").attr("selected","selected");
            }
            else {
                $('#CustomerState').empty().append('<option selected="selected" value="0">not available...</option>');
            }
        });

        if(ci>0||ci != -1)
        {
            $.get("/Common/GetCity?id=" + s, function (data) {
                if (data != "") {
                    $('#CustomerCity').html(data).append('<option selected="selected" value="0">Select</option>');;
                    $("#CustomerCity").val(ci);
                    $("#CustomerCity option[value= '" + ci + "' ]").attr("selected","selected");

                }
                else {
                    $('#CustomerCity').html('<option selected="selected" value="0">not available...</option>');
                }
            });
        }
        else
        {
            $('#CustomerCity').hide();
            $('#other_citycus').show();
            $("#CustomerCityname").val(CityName);
        }
    }




    function proSelectedFromCstomPropSave(corpId)
    {
        ChPropertyGstbyPropertyid(corpId,2);

        if($("#procity_" + corpId).html() == -1)
        {
            $("#PropertyCity").hide();
            $("#PropertyCity").val(-1);
            $("#other_cityprop").show();
            document.getElementById("close_other_cityprop").style.display = 'block';
            //$("#close_other_cityprop").show();
        }

        $("#CustomPropertyId").val(corpId);
        $("#PropertyId").val(0);

        $("#SupplierId").val($("#customeprosupid_" + corpId).html());

        $("#SupplierIdforprop").val($("#customeprosupid_" + corpId).html());

        $("#PropertyName").val(htmlDecode($("#customeproname_" + corpId).html()));

        $("#PropertyEmail").val($("#customeproemail_" + corpId).html());
        $("#PropertyAddress").val(htmlDecode($("#customeproAddress_" + corpId).html()));
        $("#PropertyCaretakerName").val($("#customeprotakecarename_" + corpId).html());
        $("#PropertyContactNo").val($("#customepromobile_" + corpId).html());
        $("#PropertyPinCode").val($("#customepropertypincode_" + corpId).html());

        $("#SupplierName").val(htmlDecode($("#customeprosupbuissname_" + corpId).html()));
        $("#SupplierEmail").val($("#customeprosupemail_" + corpId).html());
        $("#SupplierMobile").val($("#customeprosupmobile_" + corpId).html());
        $("#SupplierAddress").val(htmlDecode($("#customeprosupaddress_" + corpId).html()));
        $("#SupplierPinCode1").val(htmlDecode($("#HiddenSupplierPinCode" + corpId).html()));



        var c = $("#customeprosupcountry_" + corpId).html();
        var s = $("#customeprosupstate_" + corpId).html();
        var ci = $("#customeprosupcityid_" + corpId).html();

        //


        $("#CustomerCountry").val(c);


        //var prosupstateName  = $("#customeprosupstateName_" + corpId).html();
        //var   prosupcityname = $("#customeprosupcityname_" + corpId).html();
        //alert(prosupstateName);
        //alert(prosupcityname);
        //$("#PropertySupplierstateName").val(prosupstateName);
        //$("#PropertySuppliercityname").val(prosupcityname);

        $.get("/Common/GetState?id=" + $('#SupplierCountry').val(), function (data) {
            if (data != "") {
                $('#SupplierState').empty().append(data);
                $("#SupplierState").val(s);
                $("#SupplierState option[value= '" + s + "' ]").attr("selected","selected");
            }
            else {
                $('#SupplierState').empty().append('<option selected="selected" value="0">not available...</option>');
            }
        });
        $.get("/Common/GetCity?id=" + s, function (data) {
            if (data != "") {
                $('#SupplierCity').html(data).append('<option selected="selected" value="0">Select</option>');;
                $("#SupplierCity").val(ci);
                $("#SupplierCity option[value= '" + ci + "' ]").attr("selected","selected");

            }
            else {
                $('#SupplierCity').html('<option selected="selected" value="0">not available...</option>');
            }
        });

        $("#SupplierCityname").val($("#SupplierCity").find('option:selected').text());

        $("#PropertyCountry").val($("#customeprocountry_" + corpId).html());




        //if($("input[id=Defaultcheck]").is(":checked") == true)
        //{

        //    $.get("/Common/GetAcctypebypropertyid?id=" + corpId , function (data) {
        //        if (data != "") {
        //            $('#AccommodatoinType').empty().append(data);
        //        }
        //    });

        //    $.get("/Common/Getstaytypebypropertyid?id=" + corpId, function (data) {
        //        if (data != "") {
        //            $('#StayType').empty().append(data);
        //        }
        //    });

        //}
        //else
        //{
        //    $.get("/Common/GetAcctypebypropertyid?id=" + 0 , function (data) {
        //        if (data != "") {
        //            $('#AccommodatoinType').empty().append(data);
        //        }
        //    });


        //    $.get("/Common/Getstaytypebypropertyid?id=" + 0, function (data) {
        //        if (data != "") {
        //            $('#StayType').empty().append(data);
        //        }
        //    });
        //}





        var ps =  $("#customeprostate_" + corpId).html();

        $.get("/Common/GetState?id=" + $('#PropertyCountry').val(), function (data) {
            if (data != "") {
                $('#PropertyState').empty().append(data);
                $("#PropertyState").val(ps);
                $("#PropertyState option[value= '" + ps + "' ]").attr("selected","selected");

            }
            else {
                $('#PropertyState').empty().append('<option selected="selected" value="0">not available...</option>');
            }
        });

        var pc = $("#customeprocity_" + corpId).html();
        var newcityname = $("#customeprocity_New" + corpId).html();


        if(pc!=-1||pc>0)
        {
            $.get("/Common/GetCity?id=" + ps, function (data) {
                if (data != "") {
                    $('#PropertyCity').html(data).append('<option selected="selected" value="0">Select</option>');;
                    $("#PropertyCity").val(pc);

                    $("#PropertyCity option[value= '" + pc + "' ]").attr("selected","selected");

                }
                else {
                    $('#PropertyCity').html('<option selected="selected" value="0">not available...</option>');
                }
            });
        }
        else
        {
            $('#PropertyCity').hide();
            $('#other_cityprop').show();
            $("#PropertyCityname").val(newcityname);
        }



        //$("#PropertyCityname").val($("#PropertyCity").find('option:selected').text());

        ////if($("#PropertyCityname").val() == "" || $("#PropertyCityname").val() == null)
        ////{
        //$("#PropertyCityname").val($("#customeprocityname_" + corpId).html());
        ////}

        if($("#SupplierCityname").val() == "" ||  $("#SupplierCityname").val() == null)
        {
            $("#SupplierCityname").val($("#customeprosupcityname_" + corpId).html());
        }


        $("#searchprop").val("");
        $('#chooseProperty').modal('hide');
        $('#choosePropertyfromsup').modal('hide');
        $('#chooseSupplier').modal('hide');

        //GenBookAmt();
    }


    function proSelectedForCustom(corpId)
    {
        ChPropertyGstbyPropertyid(corpId,2);
        if($("#procity_" + corpId).html() == -1)
        {
            $("#PropertyCity").hide();
            $("#PropertyCity").val(-1);
            $("#other_cityprop").show();
            document.getElementById("close_other_cityprop").style.display = 'block';
            //$("#close_other_cityprop").show();
        }

        $("#CustomPropertyId").val(corpId);
        $("#PropertyId").val(0);

        $("#btnBankDetails").hide();



        $("#SupplierId").val($("#prosupid_" + corpId).html());

        $("#SupplierIdforprop").val($("#prosupid_" + corpId).html());

        $("#PropertyName").val(htmlDecode($("#proname_" + corpId).html()));

        $("#PropertyEmail").val($("#proemail_" + corpId).html());
        $("#PropertyAddress").val(htmlDecode($("#proAddress_" + corpId).html()));
        $("#PropertyCaretakerName").val($("#prosupname_" + corpId).html());
        $("#PropertyContactNo").val($("#promobile_" + corpId).html());
        $("#PropertyPinCode").val($("#PropertyPinCode_" + corpId).html());
        $("#SupplierPinCode1").val($("#SupplierPinCode_" + corpId).html());

                                $.get('/Admin/Property/ValidAccountCustomProp', { id: corpId }, function (result) {
                                    if (result == "0") {
                                        $("#btnBankDetails").prop("href", "/Admin/CustomProperty/EditCustomProperty?CustomPropertyId=" + corpId);
                                        $("#btnBankDetails").show();
                                        alert('The property "' + $("#PropertyName").val() + '" do not have bank details. Please update in Custom Property Page');
                                        return;
                                    }
                                });

        $("#SupplierName").val(htmlDecode($("#prosupbuissname_" + corpId).html()));
        $("#SupplierEmail").val($("#prosupemail_" + corpId).html());
        $("#SupplierMobile").val($("#prosupmobile_" + corpId).html());
        $("#SupplierAddress").val(htmlDecode($("#prosupaddress_" + corpId).html()));


        var c = $("#prosupcountry_" + corpId).html();
        var s = $("#prosupstate_" + corpId).html();
        var ci = $("#prosupcityid_" + corpId).html();

        $("#PropertySupplierCountry").val(c);
        $("#SupplierCountry").val(c);

        $("#PropertySupplierstate").val(s);

        var prosupstateName  = $("#prosupstateName_" + corpId).html();
        var   prosupcityname = $("#prosupcityname_" + corpId).html();

        $("#PropertySupplierstateName").val(prosupstateName);
        $("#PropertySuppliercityname").val(prosupcityname);

        $.get("/Common/GetState?id=" + $('#SupplierCountry').val(), function (data) {
            if (data != "") {
                $('#SupplierState').empty().append(data);
                $("#SupplierState").val(s);
                $("#SupplierState option[value= '" + s + "' ]").attr("selected","selected");
            }
            else {
                $('#SupplierState').empty().append('<option selected="selected" value="0">not available...</option>');
            }
        });
        $.get("/Common/GetCity?id=" + s, function (data) {
            if (data != "") {
                $('#SupplierCity').html(data).append('<option selected="selected" value="0">Select</option>');;
                $("#SupplierCity").val(ci);
                $("#SupplierCity option[value= '" + ci + "' ]").attr("selected","selected");

            }
            else {
                $('#SupplierCity').html('<option selected="selected" value="0">not available...</option>');
            }
        });

        $("#SupplierCityname").val($("#SupplierCity").find('option:selected').text());

        $("#PropertyCountry").val($("#procountry_" + corpId).html());




        var ps =  $("#prostate_" + corpId).html();

        $.get("/Common/GetState?id=" + $('#PropertyCountry').val(), function (data) {
            if (data != "") {
                $('#PropertyState').empty().append(data);
                $("#PropertyState").val(ps);
                $("#PropertyState option[value= '" + ps + "' ]").attr("selected","selected");

            }
            else {
                $('#PropertyState').empty().append('<option selected="selected" value="0">not available...</option>');
            }
        });

        var pc = $("#procity_" + corpId).html();
        $.get("/Common/GetCity?id=" + ps, function (data) {
            if (data != "") {
                $('#PropertyCity').html(data).append('<option selected="selected" value="0">Select</option>');;
                $("#PropertyCity").val(pc);

                $("#PropertyCity option[value= '" + pc + "' ]").attr("selected","selected");

            }
            else {
                $('#PropertyCity').html('<option selected="selected" value="0">not available...</option>');
            }
        });


        $("#PropertyCityname").val($("#PropertyCity").find('option:selected').text());

        //if($("#PropertyCityname").val() == "" || $("#PropertyCityname").val() == null)
        //{
        $("#PropertyCityname").val($("#procityname_" + corpId).html());
        //}

        if($("#SupplierCityname").val() == "" ||  $("#SupplierCityname").val() == null)
        {
            $("#SupplierCityname").val($("#prosupcityname_" + corpId).html());
        }


        $("#searchprop").val("");
        $('#chooseProperty').modal('hide');
        $('#choosePropertyfromsup').modal('hide');
        $('#chooseSupplier').modal('hide');

        //GenBookAmt();
    }



    function proSelected(corpId)
    {
        ChPropertyGstbyPropertyid(corpId,1);
        if($("#procity_" + corpId).html() == -1)
        {
            $("#PropertyCity").hide();
            $("#PropertyCity").val(-1);
            $("#other_cityprop").show();
            document.getElementById("close_other_cityprop").style.display = 'block';
            //$("#close_other_cityprop").show();
        }

        $("#PropertyId").val(corpId);
        $("#CustomPropertyId").val(0);

        $("#btnBankDetails").hide();


        $("#SupplierId").val($("#prosupid_" + corpId).html());

        $("#SupplierIdforprop").val($("#prosupid_" + corpId).html());

        $("#PropertyName").val(htmlDecode($("#proname_" + corpId).html()));

        $("#PropertyEmail").val($("#proemail_" + corpId).html());
        $("#PropertyAddress").val(htmlDecode($("#proAddress_" + corpId).html()));
        $("#PropertyCaretakerName").val($("#prosupname_" + corpId).html());
        $("#PropertyContactNo").val($("#promobile_" + corpId).html());


        $("#SupplierName").val(htmlDecode($("#prosupbuissname_" + corpId).html()));
        $("#SupplierEmail").val($("#prosupemail_" + corpId).html());
        $("#SupplierMobile").val($("#prosupmobile_" + corpId).html());
        $("#SupplierAddress").val(htmlDecode($("#prosupaddress_" + corpId).html()));

        $("#PropertyPinCode").val($("#PropertyZipcode_" + corpId).html());
        $("#SupplierPinCode1").val($("#SupplierZipcode_" + corpId).html());
        $("#SupplierAddress").val($("#SupplierAddress_" + corpId).html());

                                $.get('/Admin/Property/ValidAccountProperty', { id: corpId }, function (result) {
                                    if (result == "0") {
                                        $.ajax({
                                            type: "POST",
                                            url: '/Admin/Property/GetOwner',
                                            data: { id: $("#PropertyId").val() },
                                            async: false
                                        }).done(function (r) {
                                            if (r != "0") {
                                                $("#btnBankDetails").prop("href", "/Admin/Supplier/Details/" + r);
                                                $("#btnBankDetails").show();
                                            }
                                        });
                                        alert('The property "' + $("#PropertyName").val() + '" do not have bank details. Please update in Supplier details page');
                                        return;
                                    }
                                });


        var c = $("#prosupcountry_" + corpId).html();
        var s = $("#prosupstate_" + corpId).html();
        var ci = $("#prosupcityid_" + corpId).html();

        var value = $("#prostate_" + corpId).html();
        if(value!=0 || value!=null||value!="")
        {
            $.get("/OfflineBookingGST/GetGSTStateCode?stateid=" + value , function (data) {
                if (data != "") {
                    $('#PropertyStateCode').html(data);
                }
                else{
                    $('#PropertyStateCode').html("");
                }
            });
        }


        $("#PropertySupplierCountry").val(c);
        $("#SupplierCountry").val(c);
        $("#PropertySupplierstate").val(s);

        var prosupstateName  = $("#prosupstateName_" + corpId).html();
        var   prosupcityname = $("#prosupcityname_" + corpId).html();

        $("#PropertySupplierstateName").val(prosupstateName);
        $("#PropertySuppliercityname").val(prosupcityname);


        $.get("/Common/GetState?id=" + $('#SupplierCountry').val(), function (data) {
            if (data != "") {
                $('#SupplierState').empty().append(data);
                $("#SupplierState").val(s);
                $("#SupplierState option[value= '" + s + "' ]").attr("selected","selected");
            }
            else {
                $('#SupplierState').empty().append('<option selected="selected" value="0">not available...</option>');
            }
        });
        $.get("/Common/GetCity?id=" + s, function (data) {
            if (data != "") {
                $('#SupplierCity').html(data).append('<option selected="selected" value="0">Select</option>');;
                $("#SupplierCity").val(ci);
                $("#SupplierCity option[value= '" + ci + "' ]").attr("selected","selected");

            }
            else {
                $('#SupplierCity').html('<option selected="selected" value="0">not available...</option>');
            }
        });

        $("#SupplierCityname").val($("#SupplierCity").find('option:selected').text());

        $("#PropertyCountry").val($("#procountry_" + corpId).html());




        //if($("input[id=Defaultcheck]").is(":checked") == true)
        //{

        //    $.get("/Common/GetAcctypebypropertyid?id=" + corpId , function (data) {
        //        if (data != "") {
        //            $('#AccommodatoinType').empty().append(data);
        //        }
        //    });

        //    $.get("/Common/Getstaytypebypropertyid?id=" + corpId, function (data) {
        //        if (data != "") {
        //            $('#StayType').empty().append(data);
        //        }
        //    });

        //}
        //else
        //{
        //    $.get("/Common/GetAcctypebypropertyid?id=" + 0 , function (data) {
        //        if (data != "") {
        //            $('#AccommodatoinType').empty().append(data);
        //        }
        //    });


        //    $.get("/Common/Getstaytypebypropertyid?id=" + 0, function (data) {
        //        if (data != "") {
        //            $('#StayType').empty().append(data);
        //        }
        //    });
        //}





        var ps =  $("#prostate_" + corpId).html();

        $.get("/Common/GetState?id=" + $('#PropertyCountry').val(), function (data) {
            if (data != "") {
                $('#PropertyState').empty().append(data);
                $("#PropertyState").val(ps);
                $("#PropertyState option[value= '" + ps + "' ]").attr("selected","selected");

            }
            else {
                $('#PropertyState').empty().append('<option selected="selected" value="0">not available...</option>');
            }
        });

        var pc = $("#procity_" + corpId).html();
        $.get("/Common/GetCity?id=" + ps, function (data) {
            if (data != "") {
                $('#PropertyCity').html(data).append('<option selected="selected" value="0">Select</option>');;
                $("#PropertyCity").val(pc);

                $("#PropertyCity option[value= '" + pc + "' ]").attr("selected","selected");

            }
            else {
                $('#PropertyCity').html('<option selected="selected" value="0">not available...</option>');
            }
        });
        //karthikms added on 31-10-2019 2585 - 2594
        $.get("/Common/GetSBEntity?id=" + ps, function (data) {
            if (data != "") {
                $('#SBEntity1').empty().append(data);
                //$('#SBEntity1').val(data);
                $("#SBEntity1 option[value= '" + ps + "' ]").attr("selected", "selected");
            }
            else {
                $('#SBEntity1').html('<option selected="selected" value="0">not available...</option>');
            }
        });

        ////SBEntity1
        //$("#SBEntity1").val($("#SBEntity1").find('option:selected').text());
        $("#PropertyCityname").val($("#PropertyCity").find('option:selected').text());

        //if($("#PropertyCityname").val() == "" || $("#PropertyCityname").val() == null)
        //{
        $("#PropertyCityname").val($("#procityname_" + corpId).html());

        //$("#SBEntity1").val($("#SBEntity1_" + corpId).html());
        //}

        if($("#SupplierCityname").val() == "" ||  $("#SupplierCityname").val() == null)
        {
            $("#SupplierCityname").val($("#prosupcityname_" + corpId).html());
        }


        $("#searchprop").val("");
        $('#chooseProperty').modal('hide');
        $('#choosePropertyfromsup').modal('hide');
        $('#chooseSupplier').modal('hide');

        //GenBookAmt();
    }

    function cusSelected(corpId,userType)
    {

        if($("#cusType_" + corpId).html() == "Corporate" )
        {
        //debugger;
        var period = 0;
        var payid = 0;
        var cust_type=$("#Type_" + corpId).html();
        var url='@Url.Action("GetCustomerPaymentMode", "OfflineBookingGST")?CustomerId='+corpId+'&userType='+userType;
        //if(cust_type==="7" || cust_type==="5"){
        $.post(url,function(result){
            //debugger;

                if(result!= null && result!= undefined && result!="")
                {
                    if(result.PayModeId!=null && result.PayModeId !=undefined)
                    {
                         period = result.Period;
                         payid = result.PayModeId;
                         $('#CustomerPaymentCreditPeriod').val(period);
                         if(payid > 0)
                         {
                             $('#CustomerPaymentModeId').val(payid);
                         }
                        if(payid===3){
                            $('#divCustomerPaymentCredit').show();
                        }
                        else{
                            $('#divCustomerPaymentCredit').hide();
                            //$("#CustomerPaymentCreditPeriod").attr("placeholder", "0.00");
                        }
                    }
                }

        });
            }

        //}
        //else{

        //}


    $("#CategoryType").val($("#UserTableCategory_" + corpId).html());
    $("#UserType").val($("#cusType_" + corpId).html());
    $("#UserTypeName").val($("#cusType_" + corpId).html());

    var type=($("#CategoryType").val());
    if(type=='user')
    {
        $("#FromCustomer").val(1);
    }
    else{
        $("#FromCustomer").val(2);
    }

    $("#FromCustomerId").val(corpId);





    if($("#cusType_" + corpId).html() != "Corporate" )
    {

        $("#gstcustomerdiv").css("display","none");
        $("#gstcustomerdivcheckbox").css("display","none");


        $("#CustomerPaymentModeId").rules("remove", "required");

    }
    else
    {
        LoadCustomerGSTStateList(0);
        $("#gstcustomerdiv").css("display","block");
        $("#gstcustomerdivcheckbox").css("display","block");

        $("#CustomerPaymentModeId").rules("add", "required");
    }



    //cus Customer
    if($("#cuscity_" + corpId).html() == -1)
    {
        $("#CustomerCity").hide();
        $("#other_citycus").show();
        document.getElementById("close_other_citycus").style.display = 'block';
        //$("#close_other_cityprop").show();
    }



    $("#CustomerId").val(corpId);
    // Booking For
    if(corpId>0)
    {
        $("#MasterCustomerID").val(corpId);
        $("#BookingForChooseBtn").show();

    }

    $("#NoInvoiceMail").val($("#NoInvoiceMail_" + corpId).html());


    $("#CustomerName").val(htmlDecode($("#cusname_" + corpId).html()));
    $("#CustomerEmail").val($("#cusemail_" + corpId).html());
    $("#CustomerAddress").val(htmlDecode($("#cusAddress_" + corpId).html()));
    $("#CustomerMobile").val($("#cusmobile_" + corpId).html());
    $("#CustomerCountry").val($("#cuscountry_" + corpId).html());
    console.log()
    $("#CustomerpinCode").val($("#ZipCode_" + corpId).html());

    var cs =  $("#cusstate_" + corpId).html();

    $.get("/Common/GetState?id=" + $('#CustomerCountry').val(), function (data) {
        if (data != "") {
            $('#CustomerState').empty().append(data);
            $("#CustomerState").val(cs);
            $("#CustomerState option[value= '" + cs + "' ]").attr("selected","selected");

        }
        else {
            $('#CustomerState').empty().append('<option selected="selected" value="0">not available...</option>');
        }
    });

    var cc = $("#cuscity_" + corpId).html();
    $.get("/Common/GetCity?id=" + cs, function (data) {
        if (data != "") {
            $('#CustomerCity').html(data).append('<option selected="selected" value="0">Select</option>');;
            $("#CustomerCity").val(cc);

            $("#CustomerCity option[value= '" + cc + "' ]").attr("selected","selected");

        }
        else {
            $('#CustomerCity').html('<option selected="selected" value="0">not available...</option>');
        }
    });

    $("#CustomerCityname").val($("#CustomerCity").find('option:selected').text());
    $("#CustomerCityname").val($("#cuscityname_" + corpId).html());
    $("#searchcust").val("");
    $('#chooseCustomer').modal('hide');
    }

  // for gds booking

      function proSelectedgdsRoomType(corpId) {


          $("#PropertyId").val($("#GDSproPropertyId_" + corpId).html());
          $("#PropertyName").val($("#GDSproPropertyName_" + corpId).html());
          $("#PropertyAddress").val($("#GDSproaddress_" + corpId).html());
          $("#PropertyContactNo").val($("#GDSproMobile_" + corpId).html());
          $("#PropertyPinCode").val($("#GDSproZipCode_" + corpId).html());
          $("#PropertyId").val($("#GDSproPropertyId_" + corpId).html());
                                $("#SupplierName").val("Amadeus");
                                debugger;
                                $("#Accommodationid").val($("#GDSAccommodationId_" + corpId).html());
                                $("#Accommodationid").html($("#GDSAccommodationId_" + corpId).html());

          $("#AccommodationTypeName").val($("#GDSName_" + corpId).html());
          $("#AccommodatoinType").val($("#GDSName_" + corpId).html());
           $("#PropertyCityname").val($("#GDSCity_" + corpId).html());
           $("#PropertyState").val($("#GDSproStateName_" + corpId).html());
           $("#PropertyCountry").val($("#GDSproCountryName_" + corpId).html());
           $("#PropertyEmail").val($("#GDSproPropertyEmail_" + corpId).html());



          //$("#PropertyName").removeAttr("readonly");
          //$("#PropertyAddress").attr("readonly", false);
          $("#PropertyCaretakerName").removeAttr("readonly");
        //  $("#PropertyPinCode").attr("readonly", false);
          $("#SupplierName").removeAttr("readonly");
          $("#PropertyEmail").attr("readonly", false);
        //  $("#PropertyContactNo").removeAttr("readonly");
          var cc = $("#GDSproCity_" + corpId).html();
          $.ajax({
              type: "Get",
              url: "/Common/GetCityByName",
              data: { name:cc },
              success: function (data) {
                  if (data != "") {
                      var arr = data.split(',');
                      $("#PropertyCountry").val(arr[0]);
                      var ps =  arr[1];
                      $.get("/Common/GetState?id=" + $('#PropertyCountry').val(), function (data) {
                          if (data != "") {
                              $('#PropertyState').empty().append(data);
                              $("#PropertyState").val(ps);
                              $("#PropertyState option[value= '" + ps + "' ]").attr("selected","selected");
                          }
                          else {
                              $('#PropertyState').empty().append('<option selected="selected" value="0">not available...</option>');
                          }
                      });
                      var pc =arr[2];
                      $.get("/Common/GetCity?id=" + ps, function (data) {
                          if (data != "") {
                              $('#PropertyCity').html(data).append('<option selected="selected" value="0">Select</option>');;
                              $("#PropertyCity").val(pc);
                              $("#PropertyCity option[value= '" + pc + "' ]").attr("selected","selected");
                          }
                          else {
                              $('#PropertyCity').html('<option selected="selected" value="0">not available...</option>');
                          }
                      });
                  }
                  else
                  {
                      $("#PropertyCountry").removeClass("dropdonreadonly");
                      $("#PropertyState").removeClass("dropdonreadonly");
                      $("#PropertyCity").removeClass("dropdonreadonly");
                  }
              }
          })
   $('#chooseProperty').modal('hide');
   $('#chooseGDSProperty').modal('hide');
      }



    //booking For
    function SelectedBookingFor(corpId)
    {
        $("#BookingForID").val(corpId);
        $("#DirectName").val(htmlDecode($("#cusname_" + corpId).html()));
        $("#DirectEmail").val($("#cusemail_" + corpId).html());
        $("#DirectAddress").val(htmlDecode($("#cusAddress_" + corpId).html()));
        $("#DirectMobile").val($("#cusmobile_" + corpId).html());
        $("#CustomerCountry").val($("#cuscountry_" + corpId).html());
        $("#DirectpinCode").val($("#ZipCode_" + corpId).html());

        if($("#cuscity_" + corpId).html() == 0 || $("#cuscity_" + corpId).html() ==-1)
        {
            $("#DirectCity").hide();
            $("#bookingforCityTXT").show();
        }
        var cs =  $("#cusstate_" + corpId).html();

        $.get("/Common/GetState?id=" + $('#CustomerCountry').val(), function (data) {
            if (data != "") {
                $('#DirectState').empty().append(data);
                $("#DirectState").val(cs);
                $("#DirectState option[value= '" + cs + "' ]").attr("selected","selected");

            }
            else {
                $('#DirectState').empty().append('<option selected="selected" value="0">not available...</option>');
            }
        });

        var cc = $("#cuscity_" + corpId).html();
        $.get("/Common/GetCity?id=" + cs, function (data) {
            if (data != "") {
                $('#DirectCity').html(data).append('<option selected="selected" value="0">Select</option>');;
                $("#DirectCity").val(cc);

                $("#DirectCity option[value= '" + cc + "' ]").attr("selected","selected");

            }
            else {
                $('#DirectCity').html('<option selected="selected" value="0">not available...</option>');
            }
        });

        $("#DirectCitynames").val($("#CustomerCity").find('option:selected').text());
        $("#DirectCitynames").val($("#cuscityname_" + corpId).html());
        $("#searchBookingFor").val("");
        $('#chooseBookingFor').modal('hide');
    }
    //booking for end


    function htmlDecode(value){
        return $('<div/>').html(value).text();
    }



    $(function () {

        if(@offid > 0)
        {
            $('#StayType').val(@stayid);
            @*$('#AccommodatoinType').val(@Accid);*@
            @*$('#AccommodatoinType option[value=@Accid]').attr('selected','selected');*@

            @*if(@Accid != -1)
                                        {
                                            document.getElementById("Accdiv").style.display = "block";
                                            document.getElementById("other_Acctype").style.display = "none";
                                            document.getElementById("close_other_Acctype").style.display = "none";
                                        }
                                        else
                                        {

                                            document.getElementById("Accdiv").style.display = "none";
                                            document.getElementById("other_Acctype").style.display = "block";
                                            document.getElementById("close_other_Acctype").style.display = "block";
                                        }*@


            $("#NoOfNight").val(@nonight);
            $("#NoOfRooms").val(@norooms);
            $("#NoOfPaxAdult").val(@nopaxadult);
            $("#NoOfPaxChild").val(@nopaxchaild);
        }
        else
        {

            $("#NoOfNight").val(1);
            $("#NoOfRooms").val(1);
            $("#NoOfPaxAdult").val(0);
            $("#NoOfPaxChild").val(0);
        }
        $("#spnrAdnight").dpNumberPicker({
            value: @nonight,
            min: 1,
            max: 10000,
            step: 1,
            afterChange: function () { $("#NoOfNight").val(this.options.value); }
        });
        $("#spnrCdrooms").dpNumberPicker({
            value: @norooms,
            min: 0,
            max: 10000,
            step: 1,
            afterChange: function () { $("#NoOfRooms").val(this.options.value); }
        });

        $("#sprbxadult").dpNumberPicker({
            value: @nopaxadult,
            min: 0,
            max: 10000,
            step: 1,
            afterChange: function () { $("#NoOfPaxAdult").val(this.options.value); }
        });
        $("#sprbxchild").dpNumberPicker({
            value: @nopaxchaild,
            min: 0,
            max: 10000,
            step: 1,
            afterChange: function () { $("#NoOfPaxChild").val(this.options.value); }
        });
    });


                            </script>
                            <script type="text/javascript">
                                // for customer

                                $(function () {


                                    if ($('#CustomerCity').val() == -1) {
                                        $("#CustomerCity").hide();
                                        @*if(@offid < 1)
                                {
                                    $("#CustomerCityname").val("");
                                }*@
                                        $("#other_citycus").show();
                                    }

                                    $('#CustomerCountry').change(function () {
                                        $.get("/Common/GetState?id=" + $('#CustomerCountry').val(), function (data) {
                                            if (data != "")
                                                $('#CustomerState').empty().append(data);
                                            else
                                                $('#CustomerState').empty().append('<option selected="selected" value="0">not available...</option>');
                                            cusLoadcity()
                                        });
                                    });

                                    $('#CustomerState').change(function () {
                                        $("#CustomerCity").show();
                                        $("#CustomerCityname").val("");
                                        $("#other_citycus").hide();
                                        $.get("/Common/GetCity?id=" + $('#CustomerState').val(), function (data) {
                                            if (data != "") {
                                                $('#CustomerCity').empty().append(data);
                                                $("#CustomerCityname").val($("#CustomerCity").find('option:selected').text());
                                                if ($("select#CustomerCity option").length == 1) {
                                                    $("#CustomerCity").hide();
                                                    $("#CustomerCityname").val("");
                                                    $("#other_citycus").show();
                                                }
                                            }
                                            else {
                                                $('#CustomerCity').empty().append('<option selected="selected" value="0">not available...</option>');
                                            }
                                        });

                                    });

                                    $('#CustomerCity').change(function () {
                                        $("#CustomerCityname").val($("#CustomerCity").find('option:selected').text());
                                        if ($(this).val() == -1) {
                                            $(this).hide();

                                            $("#CustomerCityname").val("");

                                            $("#other_citycus").show();
                                            $("#close_other_citycus").show();
                                        }
                                    });
                                    $('#close_other_citycus').click(function () {
                                        $("#CustomerCity").show();
                                        $("#CustomerCityname").val("");
                                        $("#other_citycus").hide();
                                        $("#close_other_citycus").hide();
                                    });
                                });

                                function cusLoadcity() {
                                    $.get("/Common/GetCity?id=" + $('#CustomerState').val(), function (data) {
                                        if (data != "") {
                                            $('#CustomerCity').html(data);
                                        }
                                        else {
                                            $('#CustomerCity').html('<option selected="selected" value="0">not available...</option>');
                                        }
                                    });
                                }
                                function cusLoadState() {
                                    $.get("/Common/GetState?id=" + $('#CustomerCountry').val(), function (data) {
                                        if (data != "") {
                                            $('#CustomerState').empty().append(data);
                                        }
                                        else {
                                            $('#CustomerState').empty().append('<option selected="selected" value="0">not available...</option>');
                                        }
                                    });
                                }


                                // for property


                                $(function () {


                                    if ($('#PropertyCity').val() == -1) {
                                        $("#PropertyCity").hide();
                                        @*if(@offid < 1)
                                {
                                    $("#PropertyCityname").val("");
                                }*@

                                        $("#other_cityprop").show();
                                    }

                                    $('#PropertyCountry').change(function () {
                                        $.get("/Common/GetState?id=" + $('#PropertyCountry').val(), function (data) {
                                            if (data != "")
                                                $('#PropertyState').empty().append(data);
                                            else
                                                $('#PropertyState').empty().append('<option selected="selected" value="0">not available...</option>');
                                            propLoadcity()
                                        });
                                    });
                                    $('#PropertyState').change(function () {
                                        $("#PropertyCity").show();
                                        $("#PropertyCityname").val("");
                                        $("#other_cityprop").hide();

                                        $.get("/Common/GetCity?id=" + $('#PropertyState').val(), function (data) {
                                         if (data != "") {
                                                $('#PropertyCity').empty().append(data);
                                                $("#PropertyCityname").val($("#PropertyCity").find('option:selected').text());
                                                if ($("select#PropertyCity option").length == 1) {
                                                    $("#PropertyCity").hide();
                                                    $("#PropertyCityname").val("");
                                                    $("#other_cityprop").show();
                                                }
                                            }
                                            else {
                                                $('#PropertyCity').empty().append('<option selected="selected" value="0">not available...</option>');
                                            }
                                        });

                                    });
                                    $('#PropertyCity').change(function () {
                                        $("#PropertyCityname").val($("#PropertyCity").find('option:selected').text());
                                        if ($(this).val() == -1) {
                                            $(this).hide();
                                            $("#PropertyCityname").val("");
                                            $("#other_cityprop").show();
                                            $("#close_other_cityprop").show();
                                        }
                                    });
                                    $('#close_other_cityprop').click(function () {
                                        $("#PropertyCity").show();
                                        $("#PropertyCityname").val("");
                                        $("#other_cityprop").hide();
                                        $("#close_other_cityprop").hide();
                                    });
                                });

                                function propLoadcity() {
                                    $.get("/Common/GetCity?id=" + $('#PropertyState').val(), function (data) {
                                        if (data != "") {

                                            $('#PropertyCity').html(data).append('<option selected="selected" value="0">Select</option>');;
                                        }
                                        else {
                                            $('#PropertyCity').html('<option selected="selected" value="0">not available...</option>');
                                        }
                                    });
                                }
                                function propLoadState() {
                                    $.get("/Common/GetState?id=" + $('#PropertyCountry').val(), function (data) {
                                        if (data != "") {
                                            $('#PropertyState').empty().append(data);
                                        }
                                        else {
                                            $('#PropertyState').empty().append('<option selected="selected" value="0">not available...</option>');
                                        }
                                    });
                                }

                                //for supplier

                                $(function () {


                                    if ($('#SupplierCity').val() == -1) {
                                        $("#SupplierCity").hide();
                                        $("#SupplierCityname").val("");
                                        $("#other_citysup").show();
                                    }

                                    $('#SupplierCountry').change(function () {
                                        $.get("/Common/GetState?id=" + $('#SupplierCountry').val(), function (data) {
                                            if (data != "")
                                                $('#SupplierState').empty().append(data);
                                            else
                                                $('#SupplierState').empty().append('<option selected="selected" value="0">not available...</option>');
                                            supLoadcity()
                                        });
                                    });
                                    $('#SupplierState').change(function () {
                                        $("#SupplierCity").show();
                                        $("#SupplierCityname").val("");
                                        $("#other_citysup").hide();
                                        $.get("/Common/GetCity?id=" + $('#SupplierState').val(), function (data) {
                                            if (data != "") {
                                                $('#SupplierCity').empty().append(data);
                                                if ($("select#SupplierCity option").length == 1) {
                                                    $("#SupplierCity").hide();
                                                    $("#SupplierCityname").val("");
                                                    $("#other_citysup").show();
                                                }
                                            }
                                            else {
                                                $('#SupplierCity').empty().append('<option selected="selected" value="0">not available...</option>');
                                            }
                                        });
                                    });
                                    $('#SupplierCity').change(function () {


                                        $("#SupplierCityname").val($("#SupplierCity").find('option:selected').text());

                                        if ($(this).val() == -1) {
                                            $(this).hide();
                                            $("#SupplierCityname").val("");
                                            $("#other_citysup").show();
                                            $("#close_other_citysup").show();
                                        }
                                    });
                                    $('#close_other_citysup').click(function () {
                                        $("#SupplierCity").show();
                                        $("#SupplierCityname").val("");
                                        $("#other_citysup").hide();
                                        $("#close_other_citysup").hide();
                                    });
                                });

                                function supLoadcity() {
                                    $.get("/Common/GetCity?id=" + $('#SupplierState').val(), function (data) {
                                        if (data != "") {
                                            $('#SupplierCity').html(data).append('<option selected="selected" value="0">Select</option>');;
                                        }
                                        else {
                                            $('#SupplierCity').html('<option selected="selected" value="0">not available...</option>');
                                        }
                                    });
                                }
                                function supLoadState() {
                                    $.get("/Common/GetState?id=" + $('#SupplierCountry').val(), function (data) {
                                        if (data != "") {
                                            $('#SupplierState').empty().append(data);
                                        }
                                        else {
                                            $('#SupplierState').empty().append('<option selected="selected" value="0">not available...</option>');
                                        }
                                    });
                                }

                                $(function () {

                                    // $('#most-popular1').show();
                                    $('#most-popular12').show();
                                    $('#most-popular123').show();

                                    // for Start Date
                                    var now = new Date();
                                    now.setDate(now.getDate() + @startD );

                                    var mnth = pad(now.getMonth() + 1, 2);
                                    var sdate = pad(now.getDate(), 2) + "/" + mnth + "/" + now.getFullYear();

                                    //$("#CheckIn").val(sdate);

                                    //    var now = nowTemp; // new Date(nowTemp.getFullYear(), nowTemp.getMonth(), nowTemp.getDay(), 0, 0, 0, 0);
                                    var Bookingdate = $('#Bookingdate').datepicker(
                                        {
                                            minDate:$("#hiddenmindate").val(),
                                            defaultDate: now,
                                            numberOfMonths: 2,
                                            dateFormat: "dd/mm/yy"
                                        });



                                    $(".Bookingdate div").click(function () { $("#Bookingdate").datepicker('show'); });


                                    var checkin = $('#CheckIn').datepicker(
                                        {
                                            minDate:$("#hiddenmindate").val(),
                                            defaultDate: now,
                                            numberOfMonths: 2,
                                            dateFormat: "dd/mm/yy"
                                        });



                                    $(".checkin div").click(function () { $("#CheckIn").datepicker('show'); });
                                    $(".checkout div").click(function () { $("#CheckOut").datepicker('show'); });

                                    // for end date
                                    now.setDate(now.getDate() + @diff);

                                    var mnth1 = pad(now.getMonth() + 1, 2);
                                    var edate = pad(now.getDate(), 2) + "/" + mnth1 + "/" + now.getFullYear();

                                    //$("#CheckOut").val(edate);

                                    var checkout = $('#CheckOut').datepicker(
                                         {
                                             minDate: 2,
                                             numberOfMonths: 2,
                                             defaultDate: now,
                                             dateFormat: "dd/mm/yy"
                                         });

                                    $("#CheckIn").change(function () {
                                        var v = $(this).val().trim();

                                        var curDate = new Date();
                                        curDate.setDate(curDate.getDate() + 1);
                                        var idat = pad(curDate.getDate(), 2) + "/" + pad(parseInt(curDate.getMonth()) + 1, 2) + "/" + curDate.getFullYear();
                                        curDate.setDate(curDate.getDate() + 2);
                                        var odat = pad(curDate.getDate(), 2) + "/" + pad(parseInt(curDate.getMonth()) + 1, 2) + "/" + curDate.getFullYear();

                                        if (checkDate(v)) {
                                            re = /^(\d{1,2})\/(\d{1,2})\/(\d{4})$/;
                                            if (regs = v.match(re)) {
                                                var day, mnt, yr;
                                                yr = parseInt(regs[3]);
                                                mnt = parseInt(regs[2]);
                                                dy = parseInt(regs[1]);
                                                if (mnt > 0) mnt = mnt - 1;
                                                var cd = new Date(Date.UTC(yr, mnt, dy));
                                                cd.setDate(cd.getDate() + 1);
                                                var mn = cd.getMonth() + 1; //parseInt(cd.getMonth()) + 1;
                                                var chgDt = pad(cd.getDate(), 2) + "/" + pad(mn, 2) + "/" + cd.getFullYear();
                                                // alert(chgDt);
                                                var cs = new Date(Date.UTC(yr, mnt, dy));
                                                var mind = new Date(Date.UTC(yr, mnt, dy));
                                                mind.setDate(mind.getDate() + 1);
                                                var mindx = pad(mind.getDate(), 2) + "/" + pad(parseInt(mind.getMonth()) + 1, 2) + "/" + mind.getFullYear();
                                                var xo = $("#CheckOut").val();
                                                //                    $("#CheckOut").datepicker("option", "minDate", mind);

                                                if (checkDate(xo)) {
                                                    if (regss = xo.match(re)) {
                                                        yr = parseInt(regss[3]);
                                                        mnt = parseInt(regss[2]);
                                                        dy = parseInt(regss[1]);
                                                        if (mnt > 0) mnt = mnt - 1;
                                                        var co = new Date(Date.UTC(yr, mnt, dy));
                                                        if (co <= cs) {
                                                            $("#CheckOut").val(chgDt);
                                                            // $("#CheckOut").datepicker("option", "setDate", cd);
                                                        }
                                                    }
                                                    else {
                                                        // $("#CheckOut").datepicker("option", "setDate", cd);
                                                        $("#CheckOut").val(chgDt);
                                                    }
                                                }
                                                else {
                                                    // $("#CheckOut").datepicker("option", "setDate", cd);
                                                    $("#CheckOut").val(chgDt);
                                                }
                                                //checkout.minDate = n;
                                                $("#CheckOut").datepicker("option", "minDate", mindx);
                                                //$("#CheckOut").datepicker("show");
                                            }
                                            else { $("#CheckIn").val(idat); $("#CheckOut").val(odat); }
                                        }
                                        else { $("#CheckIn").val(idat); $("#CheckOut").val(odat); }
                                    });



                                });

                                function valdInOutDates() {
                                    var v = $.trim($("#CheckIn").val());
                                    if (checkDate(v)) {
                                        re = /^(\d{1,2})\/(\d{1,2})\/(\d{4})$/;
                                        if (regs = v.match(re)) {
                                            var cs = new Date(parseInt(regs[3]), parseInt(regs[2])-1, parseInt(regs[1]));
                                            var xo = $("#CheckOut").val();
                                            //                    $("#CheckOut").datepicker("option", "minDate", mind);
                                            if (checkDate(xo)) {
                                                if (regss = xo.match(re)) {
                                                    var co = new Date(parseInt(regss[3]), parseInt(regss[2])-1, parseInt(regss[1]));
                                                    if (co <= cs) {

                                                        $("#DestinationAlert").html('Please enter a checkout date which falls after checkin date');
                                                        $("#CheckOut").focus();
                                                        return false;
                                                    }
                                                }
                                                else {
                                                    $("#DestinationAlert").html('Invalid Check Out date');
                                                    $("#CheckOut").focus();
                                                    return false;
                                                }
                                            }
                                            else {
                                                $("#DestinationAlert").html('Invalid Check Out date');
                                                $("#CheckOut").focus();
                                                return false;
                                            }
                                        }
                                        else {
                                            $("#DestinationAlert").html('Invalid Check In date');
                                            $("#CheckIn").focus();
                                            return false;
                                        }
                                    } else {
                                        $("#DestinationAlert").html('Invalid Check In date');
                                        $("#CheckIn").focus();
                                        return false;
                                    }
                                    return true;
                                }
                                function pad(num, size) {
                                    var s = num + "";
                                    while (s.length < size) s = "0" + s;
                                    return s;
                                }
                                function checkDate(field)
                                { var allowBlank = true; var minYear = 2014; var maxYear = (new Date()).getFullYear()+ 1;
                                    // regular expression to match required date format
                                    re = /^(\d{1,2})\/(\d{1,2})\/(\d{4})$/;
                                    if (field != '') {
                                        if (regs = field.match(re)) {
                                            if (regs[1] < 1 || regs[1] > 31)
                                            { return false;}
                                            else if (regs[2] < 1 || regs[2] > 12)
                                            { return false; }
                                            else if (regs[3] < minYear || regs[3] > maxYear)
                                            { return false; }
                                        } else { return false; }
                                    } else { return false; }
                                    return true;
                                }
                                function daydiff(first, second) {
                                    return (second - first) / (1000 * 60 * 60 * 24);
                                }

                                $(function () {

                                    $("#Destination").autocomplete({
                                        minLength: 0,
                                        source: "/Common/GetDestination",
                                        focus: function (event, ui) {
                                            $("#Destination").val(ui.item.value);
                                            return false;
                                        }
                                    })
                                    .autocomplete("instance")._renderItem = function (ul, item) {
                                        ul.addClass("custom");
                                        return $("<li>") //.addClass("custom")
                                        .append("<a>" + item.label + "<br>" + item.desc + "</a>")
                                        .appendTo(ul);
                                    };
                                });

                            </script>
                        </div>
                    }


                    @*Modal popup for customer GST State*@
                    <!-- Modal -->
                    <div class="modal fade" id="choosecustomergststate" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
                        <div class="modal-dialog">
                            <div class="modal-content" style="width: 64%;">
                                <div class="modal-header">
                                    <button type="button" class="close" data-dismiss="modal"><span aria-hidden="true">&times;</span><span class="sr-only">Close</span></button>
                                    <h4 class="modal-title" id="myModalLabel">Customer GST State</h4>
                                </div>
                                <div class="modal-body">
                                    <div class="row">
                                        <div class="col-lg-12">
                                            <form id="subgstform">
                                                <div class="form-group">
                                                    @Html.LabelFor(m => m.SubCustomerGstStateId)<span style="color:red">*</span>
                                                    @Html.DropDownListFor(m => m.SubCustomerGstStateId, Model.SubCustomerGstStateList, new { @class = "form-control input-sm " })
                                                </div>
                                                <div id="GstAddress">
                                                    @Html.Partial("~/Areas/Admin/Views/OfflineBookingGST/_CustomerGstAddress.cshtml", Model)
                                                </div>
                                                <div class="form-group">
                                                    <input type="button" style="float:right;" value="Save" class="btn btn-success" onclick="SaveCustomerGSTState()" />
                                                </div>
                                            </form>
                                        </div>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- Modal -->
                </div>

            </div>
        </div>
    }
    catch (Exception ex)
    {


    }
</div>

<div id="HiddenGstAddress">

</div>

<script type="text/javascript">
    @*$('#SubCustomerGstStateId').change(function() {
        var type= $("#CategoryType").val();
        var status ;
        if(type=='user')
        {
            status=1;
        }
        else{
            status=2;
        }
        $("#CustomerTableType").val(status);
        $.get('@Url.Action("GetGSTAddressByState", "OfflineBookingGST")?Customerid=' + CustomerId,$('#subgstform').serialize(),function (data){
            if(data != null)
            {
                $("#GstAddress").html(data);
            }
        });
    });*@


    $('#GstCheckBox').change(function() {
        if($(this).is(":checked")) {
            $("#CustomerGstRegNo").val('@(StayBazar.Common.Utils.NO_GST)');
            $("#gstcustomerdiv").css("display","none");
        }
        else{
            $("#gstcustomerdiv").css("display","block");
            $("#CustomerGstRegNo").val("");
        }
    });
    $('#PropertyGstRegNoCheckBox').change(function() {
        if($(this).is(":checked")) {
            $("#PropertyGstRegNo").val('@(StayBazar.Common.Utils.NO_GST)');
            $("#PropertyGstRegNoDiv").css("display","none");
        }
        else{
            $("#PropertyGstRegNo").val("");
            $("#PropertyGstRegNoDiv").css("display","block");
        }
    });

    $('.numberboxTaxPerccent').keyup(function(event){
        if($(this).val().substr(0, 1) == ".")
        {
            this.value = this.value.replace('.','0.');
        }
        this.value = this.value.replace(/[^0-9\.]/g, '');
        if ($(this).val() > 100){
            $(this).val('100');
        }
    });

</script>

<script>
    function browsecustomergststatelist()
    {
        $("#choosecustomergststate").modal('show');
        $("#SubCustomerGstStateId").val(0);
        $("#SubCustomerGstRegNo").val('');

        $("#SubCustomerGstStateId").val(0);
        $("#SubCustomerGstRegNo").val(' ');
        $("#SubCustomerCity").val(0);
        $("#SubCustomerAddress").val(' ');
        $("#SubCustomerpinCode").val(' ');
    }
    function SaveCustomerGSTState()
    {
        var SubCustomerGstStateId = $("#SubCustomerGstStateId").val();
        var CustomerGstRegNo = $("#SubCustomerGstRegNo").val();
        $("#CustomerTableType").val($("#FromCustomer").val());

        var CustomerId = $("#FromCustomerId").val();
        if(SubCustomerGstStateId > 0 && $("#SubCustomerGstRegNo").val().trim().length > 0)
        {
            $.get('@Url.Action("SaveCustomerGSTState", "OfflineBookingGST")?Customerid=' + CustomerId,$('#subgstform').serialize(),function (data){
                if(data > 0)
                {
                    $("#SubCustomerGstStateId").val(0);
                    $("#SubCustomerGstRegNo").val(' ');
                    $("#SubCustomerCity").val(0);
                    $("#SubCustomerAddress").val(' ');
                    $("#SubCustomerpinCode").val(' ');
                    $("#choosecustomergststate").modal('hide');

                    LoadCustomerGSTStateList(SubCustomerGstStateId);
                }
            });
        }
        else
        {
            alert("Please enter valid data");
        }
    }

    function LoadCustomerGSTStateList(ActiveStateId)
    {

        @*var OffId = @Model.OfficeBookingID;*@
        if(typeof ActiveStateId === "undefined")
        {
            ActiveStateId=0;
        }

        $.get("/OfflineBookingGST/GetCustomerGSTStateList?Customerid=" + $("#FromCustomerId").val()  +"&Type="+ $("#FromCustomer").val(), function (data) {
            if (data != "") {
                if($('#CustomerGstStateId').val() == -1){$('#CustomerGstStateId').val(0);}
                $('#CustomerGstStateId').empty().append(data);
                $("#CustomerGstStateId").val(ActiveStateId);
                $("#CustomerGstStateId option[value= '" + ActiveStateId + "' ]").attr("selected","selected");

                if(ActiveStateId >0)
                {
                    ChCustomerGstStateId(ActiveStateId);
                }
            }
            else {
                $('#CustomerGstStateId').empty().append('<option selected="selected" value="0">not available...</option>');
            }

            if($('#CustomerGstStateId').val() == 0)
            {
                $("#CustomerGstRegNo").val('');

            }
        });
    }

    function ChCustomerGstStateId(id)
    {
        var FromCustomer= $("#FromCustomer").val();
        var FromCustomerId= $("#FromCustomerId").val();

        $.get("/OfflineBookingGST/ChangeCustomerGstStateId?Customerid=" + FromCustomerId + '&Stateid='  + id +"&status="+FromCustomer, function (data) {
            if (data != "") {

                //$("#CustomerGstRegNo").val(data);
                //load address
                $("#HiddenGstAddress").html(data);
                $("#CustomerGstRegNo").val($("#HiddenSubCustomerGstRegNo").val());
                $("#CustomerCountry").val(1);

                $("#CustomerCity").show();
                $("#other_citycus").hide();
                $("#close_other_citycus").hide();


                gstcusLoadState(1,id);


                $("#CustomerAddress").val($("#HiddenSubCustomerAddress").val());
                $("#CustomerpinCode").val($("#HiddenSubCustomerpinCode").val());
            }
        });
    }


    function gstcusLoadState(Couid,Sid) {
        $.get("/Common/GetState?id=" + Couid, function (data) {
            if (data != "") {
                $('#CustomerState').empty().append(data);
                $("#CustomerState").val(Sid);
                gstcusLoadcity(Sid);
            }
            else {
                $('#CustomerState').empty().append('<option selected="selected" value="0">not available...</option>');
            }
        });
    }
    function gstcusLoadcity(Sid) {
        $.get("/Common/GetCity?id=" + Sid, function (data) {
            if (data != "") {

                $('#CustomerCity').html(data);
                $("#CustomerCity").val($("#HiddenSubCustomerCity").val());
                $("#CustomerCityname").val($("#HiddenSubCustomerCityname").val())

                if ($("#HiddenSubCustomerCity").val() == -1) {
                    $("#CustomerCity").hide();
                    $("#CustomerCityname").val($("#HiddenSubCustomerCityname").val());
                    $("#other_citycus").show();
                    $("#close_other_citycus").show();
                }


            }
            else {
                $('#CustomerCity').html('<option selected="selected" value="0">not available...</option>');
            }
        });
    }

    function ChPropertyGstbyPropertyid(id,type)
    {
        $("#PropertyGstRegNo").val('');
        $.get("/OfflineBookingGST/ChangePropertyGstbyPropertyid?Propertyid=" + id + '&type=' + type, function (data) {
            if (data != "") {
                $("#PropertyGstRegNo").val(data);
            }
        });
    }

    $(function(){
        BookingTypeChange();
        $("#BookingType").change(function(){BookingTypeChange();});
    });
    function BookingTypeChange()
    {
        var btype = $("#BookingType").val();
        if(btype==2)
        {
            $(".tactype").show();
            $(".directtype").hide();
            $(".bktype").show();
        }else{
            if(btype==3)
            {
                $(".tactype").hide();
                $(".directtype").show();
                $(".bktype").show();
            }else
            {
                $(".bktype").hide();
            }
        }
    }

</script>
<script>
     @*Gst address*@
    $('#SubCustomerGstStateId').change(function () {
        $("#SubCustomerCity").show();
        $("#SubCustomerCityname").val("");
        $("#other_gstcitycus").hide();
        $.get("/Common/GetCity?id=" + $('#SubCustomerGstStateId').val(), function (data) {
            if (data != "") {
                $('#SubCustomerCity').empty().append(data);
                $("#SubCustomerCityname").val($("#SubCustomerCity").find('option:selected').text());
                if ($("select#SubCustomerCity option").length == 1) {
                    $("#SubCustomerCity").hide();
                    $("#SubCustomerCityname").val("");
                    $("#other_gstcitycus").show();
                }
            }
            else {
                $('#SubCustomerCity').empty().append('<option selected="selected" value="0">not available...</option>');
            }
        });

    });
    $('#SubCustomerCity').change(function () {
        $("#SubCustomerCityname").val($("#SubCustomerCity").find('option:selected').text());
        if ($(this).val() == -1) {
            $(this).hide();
            $("#SubCustomerCityname").val("");
            $("#other_gstcitycus").show();
            $("#close_other_gstcitycus").show();
        }
    });
    $('#close_other_gstcitycus').click(function () {
        $("#SubCustomerCity").show();
        $("#SubCustomerCityname").val("");
        $("#other_gstcitycus").hide();
        $("#close_other_gstcitycus").hide();
    });

    function gstLoadcity() {
        $.get("/Common/GetCity?id=" + $('#SubCustomerGstStateId').val(), function (data) {
            if (data != "") {
                $('#SubCustomerCity').html(data).append('<option selected="selected" value="0">Select</option>');;
            }
            else {
                $('#SubCustomerCity').html('<option selected="selected" value="0">not available...</option>');
            }
        });
    }


</script>


<script>
    // Booking For
    var direct=@((int)@CLayer.ObjectStatus.OfflineBookingType.Direct);
    if(@Model.CustomerId >0 && @Model.BookingType == direct)
    {
        $("#BookingForChooseBtn").show();
        if(@Model.DirectCity==-1)
        {
            $("#DirectCity").hide();
            $("#bookingforCityTXT").show();
        }
    }
</script>


<script>
    function CheckregbillpropertyValid()
    {
        var btype = $("#BookingType").val();
        if(btype == 1)//Regular
        {
            var PropertyStateId = $("#PropertyState").val();
            var sbbillingentityid= parseInt($("#SBEntity1").val());
            var PropertyCountryId = $("#PropertyCountry").val();
            var PropertySupplierCountryId = $("#PropertySupplierCountry").val();

            $.ajax({
                type: "Get",
                url: "/OfflineBookingGST/GetSbBillingStateid?sbbillingentityid=" + sbbillingentityid + "&PropertyStateId=" + PropertyStateId ,
                success: function (data) {
                    if (data == "True" || data == "true" ) {
                        SalePersonFieldsValidation();
                        //SaveOfflineData();
                    }
                    else
                    {


                        if(PropertyCountryId != 1) //Country not india
                        {
                            if(PropertySupplierCountryId == 1) //Country india
                            {
                                PropertyStateId = $("#PropertySupplierstate").val();
                            }
                        }

                        var statecheck = false;
                        lx = billingIds.length;
                        for(i=0;i<lx;i++)
                        {
                            if(PropertyStateId == billingIds[i])
                            { statecheck=true;}
                        }
                        if(!statecheck)
                        {

                            $('#BillingIdsDIV').modal({
                                backdrop: 'static',
                                keyboard: false
                            })
                      .one('click', '#btnBillingIdsDIVYes', function(e) {

                          SalePersonFieldsValidation();
                      });

                            //    alert("Alert: SB Billing entity state does not exist in Property State.");

                        }else{

                          // karthikms commented on 17-10-2019
                            //if(PropertyCountryId == 1) //Country india
                            //{
                            //    alert("Property State & SB Billing entity state does not match, Please check!");
                            //}
                            //else{

                                if(PropertySupplierCountryId == 1) //Country india
                                {
                                    CheckregbillSupplierValid();
                                }
                                else
                                {
                                    //$('#BillingIdsDIV').modal({
                                    //    backdrop: 'static',
                                    //    keyboard: false
                                    //}).one('click', '#btnBillingIdsDIVYes', function(e) {
                                    //    SalePersonFieldsValidation();
                                    //});
                                    SalePersonFieldsValidation();
                                }
                            //}
                        }
                        //return false;
                    }
                }
            });
        }
        else
        {
            SalePersonFieldsValidation();
            //return true;
        }
    }//Validation 1

    function CheckregbillSupplierValid()
    {

        var btype = $("#BookingType").val();
        if(btype == 1)//Regular
        {
            var PropertySupplierstateId = $("#PropertySupplierstate").val();
            var sbbillingentityid= parseInt($("#SBEntity1").val());

            $.ajax({
                type: "Get",
                url: "/OfflineBookingGST/GetSbBillingStateid?sbbillingentityid=" + sbbillingentityid + "&PropertyStateId=" + PropertySupplierstateId ,
                success: function (data) {
                    if (data == "True" || data == "true" ) {
                        SalePersonFieldsValidation();
                        //SaveOfflineData();
                    }
                    else
                    {
                        var statecheck = false;
                        lx = billingIds.length;
                        for(i=0;i<lx;i++)
                        {
                            if(PropertySupplierstateId == billingIds[i])
                            { statecheck=true;}
                        }
                        if(!statecheck)
                        {

                            $('#BillingIdsDIV').modal({
                                backdrop: 'static',
                                keyboard: false
                            })
                      .one('click', '#btnBillingIdsDIVYes', function(e) {

                          SalePersonFieldsValidation();
                      });

                            //    alert("Alert: SB Billing entity state does not exist in Property State.");

                        }else{
                            alert("Supplier State & SB Billing entity state does not match, Please check!");
                        }
                        //return false;
                    }
                }
            });
        }
        else
        {
            SalePersonFieldsValidation();
            //return true;
        }
    }//Validation 1_2


    function SalePersonFieldsValidation()
    {
        if($("#SalesPersonId").val() > 0)
        {
            CheckCustomergstNumber();
        }
        else
        {
            alert("Sales Person's name is missing !");
        }

    }//Validation2 9
    function CheckCustomergstNumber()
    {
        //

        if($('#UserTypeName').val() == "Corporate")
        {
            if(!$('#GstCheckBox').is(":checked") && $("#CustomerGstRegNo").val() != 'NOT__REGISTERED')
            {

                if($("#CustomerGstRegNo").val() == null){
                    $("#CustomerGstRegNo").val('');
                }
                var gstnum = $("#CustomerGstRegNo").val().trim();
                var state = $('#CustomerState option:selected').text();
                var city ='';
                if($("#CustomerCity").val() == -1)
                {
                    city = $("#CustomerCityname").val();
                }
                else{
                    if($("#CustomerCity").val() > 0)
                    {
                        city =  $('#CustomerCity option:selected').text();
                    }
                }

                var chk = isValidGST(gstnum,state,city);
                if(chk == 0)
                {
                    CheckSuppliergstNumber();
                }
                else
                {
                    if(chk ==1)
                        //Invalid GST Code: state code doesn't match
                        alert("Invalid Customer GST: State code doesn't match"); // for customer replace supplier and put customer
                    else
                        alert("Invalid Customer GST: Wrong format");
                }
            }
            else{
                CheckSuppliergstNumber();
            }
        }
        else
        {
            CheckSuppliergstNumber();
        }
    }//Validation 7
    function CheckSuppliergstNumber()
    {


        //PropertyGstRegNoCheckBox
        if(!$('#PropertyGstRegNoCheckBox').is(":checked") && $("#PropertyGstRegNo").val() != 'NOT__REGISTERED')
        {
            if($("#PropertyGstRegNo").val() == null){
                $("#PropertyGstRegNo").val('');
            }
            var gstnum = $("#PropertyGstRegNo").val();
            var state = $('#PropertyState option:selected').text();
            var city ='';
            if($("#PropertyCity").val() == -1)
            {
                city = $("#PropertyCityname").val();
            }
            else{
                if($("#PropertyCity").val() > 0)
                {
                    city =  $('#PropertyCity option:selected').text();
                }
            }

            var chk = isValidGST(gstnum,state,city);




            var PropertyCountryId = $("#PropertyCountry").val();
            if(PropertyCountryId != 1) //Country not india
            {
                var PropertySupplierCountryId = $("#PropertySupplierCountry").val();

                if(PropertySupplierCountryId == 1) //Country india
                {

                    var Supplierstatename = $('#PropertySupplierstateName').val();
                    var SupplierCityname = $('#PropertySuppliercityname').val();

                    chk = isValidGST(gstnum,Supplierstatename,SupplierCityname);

                    if(chk == 0)
                    {
                        PropertyFieldsValidation();
                    }
                    else
                    {
                        if(chk ==1)
                            //Invalid GST Code: state code doesn't match
                            alert("Invalid Supplier GST: State code doesn't match"); // for customer replace supplier and put customer
                        else
                            alert("Invalid Supplier GST: Wrong format");
                    }

                }
                else
                {
                    PropertyFieldsValidation();
                }
            }
            else
            {
                if(chk == 0)
                {
                    PropertyFieldsValidation();
                }
                else
                {
                    if(chk ==1)
                        //Invalid GST Code: state code doesn't match
                        alert("Invalid Supplier GST: State code doesn't match"); // for customer replace supplier and put customer
                    else
                        alert("Invalid Supplier GST: Wrong format");
                }
            }
        }
        else{
            PropertyFieldsValidation();
        }


    }//Validation 8
    function PropertyFieldsValidation()
    {
        if($("#PropertyName").val() != "" && $("#PropertyName").val() != null &&
           $("#SupplierName").val()!= "" && $("#SupplierName").val()!= null &&
           $("#PropertyEmail").val()!= "" && $("#PropertyEmail").val()!= null &&
           $("#PropertyContactNo").val()!= "" &&  $("#PropertyContactNo").val()!= null &&
           $("#PropertyAddress").val()!= "" && $("#PropertyAddress").val()!= null  &&
           //$("#PropertyPinCode").val()!= "" && $("#PropertyPinCode").val()!= null  &&
           $("#PropertyCountry").val() > 0   &&  $("#PropertyCountry").val()!= null &&
           $("#PropertyState").val() > 0     && $("#PropertyState").val()!= null
          )
        {
            if($("#PropertyCity").val() == -1)
            {
                if($("#PropertyCityname").val()!= "" && $("#PropertyCityname").val()!= null)
                {
                    CustomerFieldsValidation();
                }
                else
                {
                    alert("Please fill the mandatory information under Property Details !");
                    //return false;
                }
            }
            else
            {
                if($("#PropertyCity").val() > 0)
                {
                    CustomerFieldsValidation();
                }
                else{
                    alert("Please fill the mandatory information under Property Details !");
                    //return false;
                }

            }
        }
        else{
            alert("Please fill the mandatory information under Property Details !");
            //return false;
        }
    }//Validation2 8
    function CustomerFieldsValidation()
    {
        if($("#CustomerName").val() != "" && $("#CustomerName").val() != null &&
           $("#CustomerEmail").val()!= "" && $("#CustomerEmail").val()!= null &&
           $("#CustomerMobile").val()!= "" && $("#CustomerMobile").val()!= null &&
           $("#CustomerAddress").val()!= "" &&  $("#CustomerAddress").val()!= null &&
           //$("#CustomerpinCode").val()!= "" && $("#CustomerpinCode").val()!= null  &&
           $("#CustomerCountry").val()>0   &&  $("#CustomerCountry").val()!= null &&
           $("#CustomerState").val()>0     && $("#CustomerState").val()!= null

          )
        {
            //if($('#GstCheckBox').is(':checked'))
            //{
            //    if($("#CustomerGstStateId").val()>0     &&("#CustomerGstStateId").val()!= null &&
            //       $("#CustomerGstRegNo").val()!= "" && $("#CustomerGstRegNo").val()!= null)
            //    {

            //        return true;
            //    }
            //    else{
            //        alert("Please fill the mandatory information under Customer Details !");
            //        return false;
            //    }

            //}
            //else{
            if($("#CustomerCity").val() == -1)
            {
                if($("#CustomerCityname").val()!= "" && $("#CustomerCityname").val()!= null)
                {
                    CheckBookingdateValid();
                }
                else
                {
                    alert("Please fill the mandatory information under Customer Details !");
                    //return false;
                }

            }
            else
            {
                if($("#CustomerCity").val() > 0)
                {
                    CheckBookingdateValid();
                }
                else{
                    alert("Please fill the mandatory information under Customer Details !");
                    //return false;
                }

            }

            //return true;
            // }
        }
        else{
            alert("Please fill the mandatory information under Customer Details !");
            //return false;
        }
    }//Validation 9
    function CheckBookingdateValid()
    {
        var BookingDate =new Date(SplitDate($("#Bookingdate").val()));
        var CurrentDate = new Date()
        if(BookingDate > CurrentDate)
        {
            alert("Booking Date cannot be greater than current date");
            //return false;
        }
        else{
            if(isValidBookingType() == true)
            {
                IfIGGSTExists();

            }
            //return true;
        }

    }//Validation 2





    function IfIGGSTExists()   // igst validation in tac and direct bookings
    {
        var SBEntityid=$('#SBEntity1').val();

        $.ajax({
            type: "Get",
            url: "/OfflineBookingGST/GetBillingStateId?id=" + SBEntityid,
            success: function (data) {
                if(data!=null || data!="")
                {
                    var SBEntity=data;

                    //debugger
                    var a=0;
                    var state=0;
                    var BookingType=$('#BookingType').val();
                    var TAC = @((int)@CLayer.ObjectStatus.OfflineBookingType.TAC); //2
                    var Direct=  @((int)@CLayer.ObjectStatus.OfflineBookingType.Direct); // 3
                    var type="";


                    var PropertyState=$('#PropertyState').val();
                    var CustomerState=$('#CustomerState').val();
                    if(BookingType==TAC)
                    {
                        type = "Property";
                        //karthikms commented on 17-10-2019
                        if(PropertyState==SBEntity)
                        {
                            //SaveOfflineData();
                            //return;
                          state=2;
                        }
                        else{
                            state=1;

                        }
                    }
                    else if(BookingType==Direct)
                    {
                        type = "Customer";
                        //karthikms commented on 17-10-2019
                        //if(CustomerState==SBEntity)
                        //{
                        //    //SaveOfflineData();
                        //    //return;
                        //    state=2;
                        //}
                        //else{
                            state=1;

                        //}
                    }
                    else{
                        SaveOfflineData();
                        return;
                    }

                    if(state==1)
                    {
                        $('div.clsDivGstSplitUpValidation :input.IGSTExist').each(function(){
                            if($(this).val()=="IGST")
                            {
                                a =1;
                            }

                        });

                        if(a==1)
                        {
                            SaveOfflineData();
                            return;
                        }
                        else{
                            alert("When "+type+" is outside billing State, IGST is applicable !")
                            return false;
                        }
                    }
                    //karthikms commented on 17-10-2019
                    if(state==2)
                    {
                       $('div.clsDivGstSplitUpValidation :input.IGSTExist').each(function(){
                            if($(this).val()=="IGST")
                            {
                                a =2;
                            }

                        });


                        if(a==2)
                        {
                            alert("IGST is Not applicable !")
                            return false;

                        }
                        else{
                            SaveOfflineData();
                            return;
                        }
                    }




                }
            }


        })
    }

    /////////////////////////////////////////
    function isValidBookingType()
    {
        var btype = $("#BookingType").val();
        if(btype==0)
        {
            alert("Please choose Type of booking");
            $("#BookingType").focus();
            return false;
        }else
        {
            if(btype==2)
            {
                if($("#BookingTypeTAC").val() == "" || isNaN($("#BookingTypeTAC").val())  ||  parseFloat($("#BookingTypeTAC").val()) <=0)
                {alert("Please enter TAC Amount");
                    $("#BookingTypeTAC").focus();
                    return false;
                }
                if(!$("#BookingTypeGSTIncluded").prop("checked"))
                {       if($("#BookingTypeGST").val() == "" || isNaN($("#BookingTypeGST").val())  ||  parseFloat($("#BookingTypeGST").val()) < 0)
                { alert("Please enter GST %");return false; }
                }
                if($("#BookingTypeHSNCode").val() ==0)
                {alert("Please choose nature of service");return false;}
            }else if(btype==3)
            {
                if( $("#BookingTypePercent").val() == "" || isNaN($("#BookingTypeAmount").val()) || parseFloat($("#BookingTypePercent").val())== 0)
                {
                    if($("#BookingTypeAmount").val() == "" ||  parseFloat($("#BookingTypeAmount").val()) <= 0)
                    {
                        alert("Handling Fee amount or percent required.");
                        $("#BookingTypePercent").focus();
                        return false;
                    }
                    if($("#BookingTypeGST").val() == "" || isNaN($("#BookingTypeGST").val())  ||  parseFloat($("#BookingTypeGST").val()) < 0)
                    { alert("Please enter GST %");return false; }
                    if($("#BookingTypeHSNCode").val() ==0)
                    {alert("Please choose nature of service");return false;}
                }
            }
        }


        return true;
    }
    function SplitDate(date)
    {
        var dates = date.split('/');
        var day = dates[0];
        var month = dates[1];
        var year = dates[2];
        return month + "/" + day + "/" + year
    }


</script>
<script>

    if(@Model.PayeeID>0) {
        //debugger
        $("#chkORC").prop( "checked", true );
        $("#OrcDiv").show();
    }
    else{
        $("#OrcDiv").hide();
    }
</script>

<script>
    $(document).ready(function () {

        //$("#CustomerPaymentCreditPeriod").val("");
        var credit = $("#CustomerPaymentCreditPeriod").val();
        var drpCustomerPayment_Value = $('#CustomerPaymentModeId').val();
        if (drpCustomerPayment_Value != null && drpCustomerPayment_Value != undefined && drpCustomerPayment_Value != undefined) {
            if (drpCustomerPayment_Value == 3) {
                $('#divCustomerPaymentCredit').show();
            }
            else {
                $('#divCustomerPaymentCredit').hide();
                //$("#CustomerPaymentCreditPeriod").attr("placeholder", "0.00");
            }
        }

        $("#CustomerPaymentModeId").change(function () {

            credit = $("#CustomerPaymentCreditPeriod").val();
            var selectedvalue = $('#CustomerPaymentModeId').val();


            if (selectedvalue === "3") {

                $('#divCustomerPaymentCredit').show();
                $("input[id*='CustomerPaymentCreditPeriod']").keydown(function (event) {

                    //var code = event.keyCode || event.which;
                    //alert(code);
                    if (event.shiftKey == true) {
                        event.preventDefault();
                    }

                    if ((event.keyCode >= 48 && event.keyCode <= 57) ||
                        (event.keyCode >= 96 && event.keyCode <= 105) ||
                        event.keyCode == 8 || event.keyCode == 9 || event.keyCode == 37 ||
                        event.keyCode == 39 || event.keyCode == 46 || event.keyCode == 190 || event.keyCode == 110) {


                        var val = $(this).val();
                        if (isNaN(val)) {
                            val = val.replace(/[^0-9\.]/g, '');
                            if (val.split('.').length > 2)
                                val = val.replace(/\.+$/, "");
                        }
                        $(this).val(val);


                    } else {
                        event.preventDefault();
                    }

                    if ($(this).val().indexOf('.') !== -1 && event.keyCode == 190)
                        event.preventDefault();
                    //if a decimal has been added, disable the "."-button

                });
                if (drpCustomerPayment_Value != null && drpCustomerPayment_Value != undefined && drpCustomerPayment_Value != undefined && drpCustomerPayment_Value != 0) {
                    $("#CustomerPaymentCreditPeriod").val(credit);
                }
                else {
                    $("#CustomerPaymentCreditPeriod").attr("placeholder", "0.00");
                }

            }
            else {
                if (credit == 0) {
                    $("#CustomerPaymentCreditPeriod").val("");
                    $("#CustomerPaymentCreditPeriod").attr("placeholder", "0.00");
                }
                else {
                    $("#CustomerPaymentCreditPeriod").val(credit);
                }



                //$("#CustomerPaymentCreditPeriod").val("");
                //$("#CustomerPaymentCreditPeriod").attr("placeholder", "0.00");
                $('#divCustomerPaymentCredit').hide();
            }
        });

        $('#CustomerPaymentCreditPeriod').keypress(function (e) {
            var a = [];
            var k = e.which;

            var KeystoInclude = [0, 8, 31, 46, 190];
            for (i = 0; i < KeystoInclude.length; i++) {
                a.push(KeystoInclude[i]);
            }
            for (i = 48; i < 58; i++) {
                a.push(i);
            }
            var numValue = $(this).val();
            if (e.which == 46) {
                if ((numValue) && (numValue.indexOf('.') >= 0))
                    e.preventDefault();
            }
            if (!(a.indexOf(k) >= 0))
                e.preventDefault();
        });
        $('#CustomerPaymentModeCreditPeriod').blur(function (e) {
            var dec = parseFloat($(this).val(), 10).toFixed(1);
            $(this).val(dec);
        })
    });
</script>

<script>

    var gstStateNames = ['JAMMU & KASHMIR',
        'JAMMU AND KASHMIR',
        'HIMACHAL PRADESH',
        'PUNJAB',
        'CHANDIGARH',
        'UTTARAKHAND',
        'HARYANA',
        'DELHI',
        'RAJASTHAN',
        'UTTAR PRADESH',
        'BIHAR',
        'SIKKIM',
        'ARUNACHAL PRADESH',
        'NAGALAND',
        'MANIPUR',
        'MIZORAM',
        'TRIPURA',
        'MEGHALAYA',
        'ASSAM',
        'WEST BENGAL',
        'JHARKHAND',
        'ODISHA',
        'CHATTISGARH',
        'MADHYA PRADESH',
        'GUJARAT',
        'DAMAN AND DIU',
        'DADRA AND NAGAR HAVELI',
        'MAHARASHTRA',
        'ANDHRA PRADESH', //(BEFORE DIVISION)
        'KARNATAKA',
        'GOA',
        'LAKSHWADEEP',
        'KERALA',
        'TAMIL NADU',
        'PUDUCHERRY',
        'ANDAMAN AND NICOBAR ISLANDS',
        'TELANGANA',
        'ANDHRA PRADESH']; //(NEW)
    var gstStateCodes = ['01', '01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12', '13', '14', '15', '16', '17',
        '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37'];

    function isValidGST(gstNum, stateName, cityName) {
        // 0 - success 1 - state code issue 2- format issue
        if (gstNum.length != 15) { return 2; }
        var l = gstStateCodes.length;
        var stateCode = gstNum.substr(0, 2);

        //verify statecode
        for (i = 0; i < l; i++) {
            if (stateCode == gstStateCodes[i]) {
                if (stateName.toUpperCase() == gstStateNames[i]) {
                    break;
                }
                else {
                    if (cityName.toUpperCase() == gstStateNames[i]) {
                        break;
                    }
                    else
                        return 1;
                }
            }
        }

        //verify format
        var word = gstNum.substr(2, 5);
        var r = RegExp("^[a-zA-Z]+$");
        if (!r.test(word))
            return 2;


        word = gstNum.substr(7, 4);
        r = RegExp("^[0-9]*$");
        if (!r.test(word))
            return 2;


        word = gstNum.substr(11, 1);
        r = RegExp("^[a-zA-Z]+$");
        if (!r.test(word))
            return 2;

        return 0;
    }

</script>

<script>
    function creditdaysValidation() {
        debugger;
        var paymode = $("#CustomerPaymentModeId").val();
        var credit = $("#CustomerPaymentCreditPeriod").val();
        if (paymode != null && paymode != undefined && paymode != undefined) {
            if (paymode == "3") {
                if (credit == "0.00" || credit == "" || credit == "0" || credit == null || credit == undefined) {

                    alert("Credit Days cannot be empty or zero");
                    return false;
                }
                else {
                    return true;
                }
            }
            else {
                return true;
            }

        }


    }
</script>


<script>
    function CheckValidationEnabled()
    {
        if($("#OfficeBookingID").val() > 0)
        {
            var CheckDate = new Date(2017, 7, 31);
            var BookingDate = new Date(@CheckBookingdate.Year,(@CheckBookingdate.Month - 1),@CheckBookingdate.Day);
            if(BookingDate > CheckDate)
            {
                return true;
            }
            else
            {
                return false;
            }
        }
        else
        {
            return true;
        }

    }
</script>
