@model IEnumerable<CLayer.OfflineBooking>
@{
    Layout = null;
    long i = 0;
    decimal tt = 0;
    decimal m = 0;


    long totalnights = 0;

    double sgst, cgst, igst;
    double tsgst, tcgst, tigst;
    double tbgst, togst;
    int bookingType = 0;

    double osgst, ocgst, oigst;
    double otsgst, otcgst, otigst;

    double AmountBeforeServiceTax = 0;
    double totalAmountBeforeTax = 0;
    double totalAmountAfterTax = 0;

}<?xml version="1.0" ?>
<ss:Workbook xmlns:ss="urn:schemas-microsoft-com:office:spreadsheet">
    <ss:Styles>
        <ss:Style ss:ID="1">
            <ss:Font ss:Bold="1" / >
        </ss:Style>
        <ss:Style ss:ID="DateLiteral">
            <NumberFormat ss:Format="0"/ >
        </ss:Style>
    </ss:Styles>
    <ss:Worksheet ss:Name="Offline Payment Report">
        <ss:Table>
            <ss:Row ss:StyleID="1">
                <ss:Cell><ss:Data ss:Type ="String">SlNo</ss:Data></ss:Cell>
                <ss:Cell><ss:Data ss:Type ="String">RequestDate</ss:Data></ss:Cell>
                <ss:Cell><ss:Data ss:Type ="String">BookingID</ss:Data></ss:Cell>
                <ss:Cell><ss:Data ss:Type ="String">CustomerName</ss:Data></ss:Cell>
                <ss:Cell><ss:Data ss:Type ="String">CustomerCity</ss:Data></ss:Cell>
                <ss:Cell><ss:Data ss:Type ="String">CustomerE-mail</ss:Data></ss:Cell>
                <ss:Cell><ss:Data ss:Type ="String">GuestName</ss:Data></ss:Cell>
                <ss:Cell><ss:Data ss:Type ="String">CheckIn</ss:Data></ss:Cell>
                <ss:Cell><ss:Data ss:Type ="String">CheckOut/th></ss:Data></ss:Cell>
                <ss:Cell><ss:Data ss:Type ="String">TotalnoofPax</ss:Data></ss:Cell>
                <ss:Cell><ss:Data ss:Type ="String">TotalRoomNights</ss:Data></ss:Cell>
                <ss:Cell><ss:Data ss:Type ="String">TotalcustomerpayableincudingGST</ss:Data></ss:Cell>
                <ss:Cell><ss:Data ss:Type ="String">CustomerPaymentMode</ss:Data></ss:Cell>
                <ss:Cell><ss:Data ss:Type ="String">PropertyName</ss:Data></ss:Cell>
                <ss:Cell><ss:Data ss:Type ="String">PropertyCity</ss:Data></ss:Cell>
                <ss:Cell><ss:Data ss:Type ="String">TotalSuppliervalue</ss:Data></ss:Cell>
                <ss:Cell><ss:Data ss:Type ="String">PaymentScheduleDate-1</ss:Data></ss:Cell>
                <ss:Cell><ss:Data ss:Type ="String">PaymentScheduleAmount-1</ss:Data></ss:Cell>
                <ss:Cell><ss:Data ss:Type ="String">PaymentScheduleDate-2</ss:Data></ss:Cell>
                <ss:Cell><ss:Data ss:Type ="String">PaymentScheduleAmount-2</ss:Data></ss:Cell>
                <ss:Cell><ss:Data ss:Type ="String">PaymentScheduleDate-3</ss:Data></ss:Cell>
                <ss:Cell><ss:Data ss:Type ="String">PaymentScheduleAmount-3</ss:Data></ss:Cell>
                <ss:Cell><ss:Data ss:Type ="String">BankName</ss:Data></ss:Cell>
                <ss:Cell><ss:Data ss:Type ="String">BranchName</ss:Data></ss:Cell>
                <ss:Cell><ss:Data ss:Type ="String">BeneficiaryName</ss:Data></ss:Cell>
                <ss:Cell><ss:Data ss:Type ="String">AccountNo</ss:Data></ss:Cell>
                <ss:Cell><ss:Data ss:Type ="String">AccountType</ss:Data></ss:Cell>
                <ss:Cell><ss:Data ss:Type ="String">IFSCCode</ss:Data></ss:Cell>
                <ss:Cell><ss:Data ss:Type ="String">PropertyE-mailID</ss:Data></ss:Cell>
                <ss:Cell><ss:Data ss:Type ="String">SalesPerson</ss:Data></ss:Cell>
                <ss:Cell><ss:Data ss:Type ="String">PaymentRequester</ss:Data></ss:Cell>
                <ss:Cell><ss:Data ss:Type ="String">Region</ss:Data></ss:Cell>

            </ss:Row>
            @foreach (CLayer.OfflineBooking pr in Model)
            {
                i = i + 1;
                //if (pr.Noofnight > 0)
                //{
                //    totalnights = pr.NoOfRooms * pr.Noofnight;
                //}
                //else
                //{
                //    totalnights = pr.NoOfRooms;
                //}
                totalnights = pr.TotalNights;
                m = totalnights * pr.AvgDailyRateBefreStaxForSalePrice;
                tt = pr.AvgDailyRateBefreStaxForSalePrice * totalnights;

                bookingType = pr.BookingTypeInt;


                DateTime checkin = pr.CheckIn_date;
                DateTime checkout = pr.CheckOut_date;
                TimeSpan ts = checkout - checkin;
                int differenceInDays = ts.Days;

                long NoOfPaxAdultS = pr.NoOfPaxAdult;

                long NoOfPaxChild = pr.NoOfPaxChild;
                long NOofPax = (NoOfPaxAdultS + NoOfPaxChild);

                //Customer Value -- amount without tax
                if (bookingType == (int)CLayer.ObjectStatus.OfflineBookingType.Regular)
                {

                    AmountBeforeServiceTax = (double)((pr.AvgDailyRateBefreStaxForSalePrice * totalnights)) + pr.VSalePriceBeforeTax;
                    sgst = pr.SGST;
                    cgst = pr.CGST;
                    igst = pr.IGST;

                }
                else
                {
                    AmountBeforeServiceTax = pr.DirectAmount + pr.VSalePriceBeforeTax;
                    sgst = pr.btSGST;
                    cgst = pr.btCGST;
                    igst = pr.btIGST;

                }
                tsgst = AmountBeforeServiceTax * sgst * 0.01;
                tcgst = AmountBeforeServiceTax * cgst * 0.01;
                tigst = AmountBeforeServiceTax * igst * 0.01;
                tbgst = tsgst + tcgst + tigst + pr.vSaleGST;

                double Otherservicesamount = Math.Round((double)pr.BuyPriceforotherservicesForSalePrice, 2);
                ocgst = pr.oCGST;
                osgst = pr.oSGST;
                oigst = pr.oIGST;

                otcgst = Otherservicesamount * ocgst * 0.01;
                otsgst = Otherservicesamount * osgst * 0.01;
                otigst = Otherservicesamount * oigst * 0.01;

                togst = otsgst + otcgst + otigst;


                totalAmountAfterTax = AmountBeforeServiceTax + Otherservicesamount + togst + tbgst;
                totalAmountBeforeTax = AmountBeforeServiceTax + Otherservicesamount;

                var SupplierPaymentDate1 = pr.PaymentScheduleDate1.ToString(System.Globalization.CultureInfo.InvariantCulture).Contains("1900") && !pr.PaymentScheduleDate1.ToString(System.Globalization.CultureInfo.InvariantCulture).Contains("0001") ? pr.PaymentScheduleDate1.ToShortDateString() : string.Empty;
                var SupplierPaymentDate2 = pr.PaymentScheduleDate2.ToString(System.Globalization.CultureInfo.InvariantCulture).Contains("1900") && !pr.PaymentScheduleDate2.ToString(System.Globalization.CultureInfo.InvariantCulture).Contains("0001") ? pr.PaymentScheduleDate2.ToShortDateString() : string.Empty;
                var SupplierPaymentDate3 = pr.PaymentScheduleDate3.ToString(System.Globalization.CultureInfo.InvariantCulture).Contains("1900") && !pr.PaymentScheduleDate3.ToString(System.Globalization.CultureInfo.InvariantCulture).Contains("0001") ? pr.PaymentScheduleDate3.ToShortDateString() : string.Empty;

                <ss:Row>
                    <ss:Cell><ss:Data ss:Type="String">@i<!--Sl no--></ss:Data></ss:Cell>
                    <ss:Cell><ss:Data ss:Type="String">@DateTime.Now.ToShortDateString() <!--Request Id--></ss:Data></ss:Cell>
                    <ss:Cell><ss:Data ss:Type="String">@pr.ConfirmationNumber<!--Booking Id-->    </ss:Data></ss:Cell>
                    <ss:Cell><ss:Data ss:Type="String">@pr.FirstName<!--Customer Name--></ss:Data></ss:Cell>
                    <ss:Cell><ss:Data ss:Type="String">@pr.CustomerStatename <!--Customer City-->        </ss:Data></ss:Cell>
                    <ss:Cell><ss:Data ss:Type="String">@pr.CustomerEmail <!--Customer Email-->     </ss:Data></ss:Cell>
                    <ss:Cell><ss:Data ss:Type="String">@pr.Guestname <!--Guest Name-->  </ss:Data></ss:Cell>
                    <ss:Cell><ss:Data ss:Type="String">@pr.CheckIn_date.ToShortDateString() <!--check in--></ss:Data></ss:Cell>
                    <ss:Cell><ss:Data ss:Type="String">@pr.CheckOut_date.ToShortDateString() <!--check out--></ss:Data></ss:Cell>
                    <ss:Cell><ss:Data ss:Type="String">@(pr.NoOfPaxAdult + pr.NoOfPaxChild) <!--Total no of pax--></ss:Data></ss:Cell>
                    <ss:Cell><ss:Data ss:Type="String">@totalnights<!--Total room night--></ss:Data></ss:Cell>
                    <ss:Cell><ss:Data ss:Type="String">@Math.Round(pr.TotalSalePrice , 2)<!--total customer payable including gst--></ss:Data></ss:Cell>
                    <ss:Cell><ss:Data ss:Type="String">@pr.CustomerPayment<!--Customer Payment Mode--></ss:Data></ss:Cell>
                    <ss:Cell><ss:Data ss:Type="String">@pr.PropertyName <!--Property name--></ss:Data></ss:Cell>
                    <ss:Cell><ss:Data ss:Type="String">@pr.PropertyCityname <!--Property city--> </ss:Data></ss:Cell>
                    <ss:Cell><ss:Data ss:Type="String">@Math.Round(pr.TotalBuyPrice,2) <!--Total supplier value--> </ss:Data></ss:Cell>
                    @if (!pr.PaymentScheduleDate1.ToString(System.Globalization.CultureInfo.InvariantCulture).Contains("0001"))
                    {
                    <ss:Cell><ss:Data ss:Type="String">@pr.PaymentScheduleDate1.ToShortDateString() <!--Payment schedule date 1--></ss:Data></ss:Cell>
                    <ss:Cell><ss:Data ss:Type="String">@Math.Round(pr.PaymentScheduleAmount1, 2)<!--Payment schedule amount1--></ss:Data></ss:Cell>
                    }
                    else
                    {
                        <ss:Cell><ss:Data ss:Type="String">@string.Empty</ss:Data></ss:Cell>
                        <ss:Cell><ss:Data ss:Type="String">@string.Empty</ss:Data></ss:Cell>
                    }
                    @if (!pr.PaymentScheduleDate2.ToString(System.Globalization.CultureInfo.InvariantCulture).Contains("0001"))
                    {
                        <ss:Cell><ss:Data ss:Type="String">@pr.PaymentScheduleDate2.ToShortDateString() <!--Payment schedule date 1--></ss:Data></ss:Cell>
                        <ss:Cell><ss:Data ss:Type="String">@Math.Round(pr.PaymentScheduleAmount2, 2)<!--Payment schedule amount1--></ss:Data></ss:Cell>
                    }
                    else
                    {
                        <ss:Cell><ss:Data ss:Type="String">@string.Empty</ss:Data></ss:Cell>
                        <ss:Cell><ss:Data ss:Type="String">@string.Empty</ss:Data></ss:Cell>
                    }
                    @if (!pr.PaymentScheduleDate3.ToString(System.Globalization.CultureInfo.InvariantCulture).Contains("0001"))
                    {
                        <ss:Cell><ss:Data ss:Type="String">@pr.PaymentScheduleDate3.ToShortDateString() <!--Payment schedule date 1--></ss:Data></ss:Cell>
                        <ss:Cell><ss:Data ss:Type="String">@Math.Round(pr.PaymentScheduleAmount3, 2)<!--Payment schedule amount1--></ss:Data></ss:Cell>
                    }
                    else
                    {
                        <ss:Cell><ss:Data ss:Type="String">@string.Empty</ss:Data></ss:Cell>
                        <ss:Cell><ss:Data ss:Type="String">@string.Empty</ss:Data></ss:Cell>
                    }



                    <ss:Cell><ss:Data ss:Type="String">@pr.BankName</ss:Data></ss:Cell>
                    <ss:Cell><ss:Data ss:Type="String">@pr.BranchName</ss:Data></ss:Cell>
                    <ss:Cell><ss:Data ss:Type="String">@pr.BeneficiaryName</ss:Data></ss:Cell>
                    <ss:Cell><ss:Data ss:Type="String">@pr.AccountNo</ss:Data></ss:Cell>
                    <ss:Cell><ss:Data ss:Type="String">@pr.AccountType</ss:Data></ss:Cell>
                    <ss:Cell><ss:Data ss:Type="String">@pr.IFSCcode</ss:Data></ss:Cell>
                    <ss:Cell><ss:Data ss:Type="String">@pr.PropertyEmail</ss:Data></ss:Cell>
                    <ss:Cell><ss:Data ss:Type="String">@pr.SalesPerson</ss:Data></ss:Cell>
                    <ss:Cell><ss:Data ss:Type="String">@pr.SalesPerson</ss:Data></ss:Cell>
                    <ss:Cell><ss:Data ss:Type="String">@pr.SalesRegion</ss:Data></ss:Cell>
         

            </ss:Row>
            }
        </ss:Table>
    </ss:Worksheet>
</ss:Workbook>