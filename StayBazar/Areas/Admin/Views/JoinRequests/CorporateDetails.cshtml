@model StayBazar.Areas.Admin.Models.UserDetailModel
@{
    ViewBag.Title = "Corporate | " + Model.FirstName + " " + Model.LastName;
    if (Model.Status == (int)CLayer.ObjectStatus.StatusType.Deleted)
    {
        ViewBag.Title += " [deleted]";
    }
    

}
<hr />
<div class="col-lg-12">
    <div class="col-lg-8">
        <span class="h2">
            <a href="/Admin/JoinRequests/Corporate">Join Requests</a>
            / @Model.Name
        </span>
    </div>
    <div class="col-lg-4">
        <div class="btn-group">
            @if (Model.RequestStatus == (int)CLayer.ObjectStatus.StatusType.Read ||
        Model.RequestStatus == (int)CLayer.ObjectStatus.StatusType.NotVerified ||
        Model.RequestStatus == (int)CLayer.ObjectStatus.StatusType.Unread)
            {
                <a href="/Admin/JoinRequests/Accept/@Model.UserId" class="btn btn-default" onclick="return confirm('Are you sure you want to mark this request as accepted?')">Accept</a>
    <a href="/Admin/JoinRequests/Reject/@Model.UserId" class="btn btn-danger" onclick="return confirm('Are you sure you want to mark this request as rejected?')">Reject</a>
            }
            else
            {
            <span class="h3"><span class="label label-danger">@(((CLayer.ObjectStatus.StatusType)Model.RequestStatus).ToString())</span></span>
            }
        </div>
        @if (Model.RequestStatus == (int)CLayer.ObjectStatus.StatusType.Read ||
        Model.RequestStatus == (int)CLayer.ObjectStatus.StatusType.NotVerified ||
        Model.RequestStatus == (int)CLayer.ObjectStatus.StatusType.Unread)
        {
            <a href="/Admin/JoinRequests/Markasunread/@Model.UserId" class="btn btn-default" onclick="return confirm('Are you sure you want to mark this request as unread?')">Mark as Unread</a>
        }
    </div>
</div>
<br />
<hr />
<div class="col-lg-12">
    <ul class="nav nav-tabs">
        <li class="active"><a href="#detials" data-toggle="tab">Details</a></li>
        <li><a href="#documents" data-toggle="tab">Documents</a></li>
    </ul>
    <div class="tab-content">
        <div class="tab-pane active" id="detials">
            <div class="row">
                @if (ViewBag.Message != null)
                {
                <div class="alert alert-danger">
                    @ViewBag.Message.
                </div>
                }
                @using (Html.BeginForm("CorporateUpdate", "JoinRequests", FormMethod.Post, new { role = "form" }))
                {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                @Html.HiddenFor(m => m.UserId)
                @Html.HiddenFor(m => m.Sex)
                @Html.HiddenFor(m => m.Status)
                @Html.HiddenFor(m => m.Email)
                @Html.HiddenFor(m => m.AddressId)
                @Html.HiddenFor(m => m.AddressType)
                @Html.HiddenFor(m => m.SalutationId)
                @Html.HiddenFor(m => m.DateOfBirth)
                @Html.HiddenFor(m => m.BillingAddressType)
                @Html.HiddenFor(m => m.BillingAddressId)
                <div class="col-lg-4 incontainer">
                    <div class="form-group">
                        @Html.LabelFor(m => m.Name)
                        @Html.TextBoxFor(m => m.Name, new { @tabindex = "1", @class = "form-control", @readonly = "readonly" })
                        @Html.ValidationMessageFor(m => m.Name)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.FullName)<span style="color:red">*</span>
                        @Html.TextBoxFor(m => m.FirstName, new { @tabindex = "2", @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.FirstName)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Address)<span style="color:red">*</span>
                        @Html.TextAreaFor(m => m.Address, new { @tabindex = "6", @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Address)
                    </div>
                    @{ CLayer.B2B obj11 = BLayer.B2B.Get(Model.UserId);
                     Model.ContactDesignation = obj11.ContactDesignation;
                    }
                    <div class="form-group">
                        @Html.LabelFor(m => m.ContactDesignation)
                        @Html.TextBoxFor(m => m.ContactDesignation, new { @tabindex = "21", @class = "form-control input-sm" })
                    </div>   
                </div>
                <div class="col-lg-4 incontainer">
                    <div class="form-group">
                        @Html.LabelFor(m => m.CountryId)
                        @Html.DropDownListFor(m => m.CountryId, Model.CountryList, new { @tabindex = "7", @class = "form-control" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.State)
                        @Html.DropDownListFor(m => m.State, Model.StateList, new { @tabindex = "8", @class = "form-control" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.City) &nbsp;
                        <a href="#" id="close_other_city" class="lnk" style="display:none;"><span class="glyphicon glyphicon-remove"></span>choose from the list</a>
                        @Html.DropDownListFor(m => m.CityId, Model.CityList, new { @tabindex = "9", @class = "form-control" })
                        <div id="other_city" style="display:none;">
                            @Html.TextBoxFor(m => m.City, new { @class = "form-control" })
                            <input type="hidden" value="@Model.City" id="hdnCity" />
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.ZipCode)<span style="color:red">*</span>
                        @Html.TextBoxFor(m => m.ZipCode, new { @tabindex = "10", @class = "form-control", @onkeypress = "return isINNumbers(event)" })
                        @Html.ValidationMessageFor(m => m.ZipCode)
                    </div>

                </div>
                <div class="col-lg-4 incontainer">
                    <div class="form-group hidden">
                        @Html.LabelFor(m => m.Phone)
                        @Html.TextBoxFor(m => m.Phone, new { @tabindex = "10", @class = "form-control", @onkeypress = "return isINNumbers(event)" })
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Mobile)<span style="color:red">*</span>
                        @Html.TextBoxFor(m => m.Mobile, new { @tabindex = "11", @class = "form-control", @onkeypress = "return isINNumbers(event)" })
                        @Html.ValidationMessageFor(m => m.Mobile)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Email)
                        @Html.TextBoxFor(m => m.Email, new { @tabindex = "11", @class = "form-control", @readonly = "readonly" })
                    </div>
                    <div class="form-group">
                        Registration date: @Model.CreatedDate.ToShortDateString()

                    </div>
                </div>
                <div class="col-md-12">
                    <div class="row">

                        <div class="col-md-5">
                            <h3>Billing Address [Optional]</h3>
                            @Html.CheckBoxFor(m => m.IsClicked, new { onclick = "Addrsame()" })
                            @*<input type="checkbox" id="IsClicked" checked="checked" onclick="Addrsame()" name="IsClicked" />*@
                            Same address as the main address
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-4 incontainer">
                            <div class="form-group">
                                @Html.LabelFor(m => m.BillingAddress)
                                @Html.TextAreaFor(m => m.BillingAddress, new { @tabindex = "13", @class = "form-control input-sm" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.BillingCountryId)
                                @Html.DropDownListFor(m => m.BillingCountryId, Model.BillingCountryList, new { @tabindex = "14", @class = "form-control input-sm" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.BillingState)
                                @Html.DropDownListFor(m => m.BillingState, Model.BillingStateList, new { @tabindex = "15", @class = "form-control input-sm" })
                            </div>
                        </div>


                        <div class="col-lg-4 incontainer">
                            <div class="form-group">
                                @Html.LabelFor(m => m.BillingCityId) &nbsp;
                                <a href="#" id="close_other_billing_city" class="lnk" style="display:none;"><span class="glyphicon glyphicon-remove"></span>choose from the list</a>
                                @Html.DropDownListFor(m => m.BillingCityId, Model.BillingCityList, new { @tabindex = "16", @class = "form-control input-sm" })
                                <div id="other_billing_city" style="display:none;">
                                    @Html.TextBoxFor(m => m.BillingCity, new { @class = "form-control input-sm" })
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.BillingZipCode)
                                @Html.TextBoxFor(m => m.BillingZipCode, new { @tabindex = "7", @class = "form-control input-sm", @MaxLength = "12", @onkeypress = "return isINNumbers(event)" })
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-11">
                    <div class="form-group text-right">
                        <button type="submit" class="btn redbg whitetext border-radius0">Save</button>                       
                        @*<a href="/Admin/JoinRequests/Corporate" class="btn greybg whitetext border-radius0">Cancel</a>*@
                    </div>
                </div>
                }
            </div>
        </div>
        <div class="tab-pane" id="documents">

            @Html.Partial("~/Areas/Admin/Views/JoinRequests/UserDocuments.cshtml", new StayBazar.Areas.Admin.Models.UserDocumentsModel() { UserId = Model.UserId, UserType = (int)CLayer.Role.Roles.Corporate })
        </div>
        @*<div class="tab-pane" id="transactions">
            @if (Model.UserId != null)
            {
                StayBazar.Areas.Admin.Models.TransactionListModel b = new StayBazar.Areas.Admin.Models.TransactionListModel();
                b.Bookinglist = BLayer.Transaction.GetUserId(Model.UserId, 0, 25);
                Html.RenderPartial("~/Areas/Admin/Views/Common/_TransactionList.cshtml", b);
            }
        </div>*@
        @*<div class="tab-pane" id="others">
            <div class="row">
                @if (Model.Status != (int)CLayer.ObjectStatus.StatusType.Deleted)
                {
                    Html.RenderPartial("~/Areas/Admin/Views/Status/_Status.cshtml", new StayBazar.Areas.Admin.Models.StatusModel() { UserId = Model.UserId, Status = Model.Status });
                }
                <div id="maxstaff" class="h3 panel panel-body padding5px">
                    <div class="col-md-3">
                        Max. Staff&nbsp;<span id="maxstaffsuccess" class="success h5 hided padding5px">Saved</span>
                        <div class="input-group">
                            <input type="text" id="txtMaxStaff" class="form-control" value="@Model.MaxStaff" />
                            <span class="input-group-btn">
                                <button id="maxstaffsave" class="btn btn-default">Save</button>
                            </span>
                        </div>
                    </div>
                </div>


                <div id="BillingAddress" class="panel panel-body padding5px">
                    <div class="col-md-3">
                        @{CLayer.Address addre = BLayer.Address.GetOnUserId(Model.UserId, (int)CLayer.Address.AddressTypes.Primary);}
                        @if (addre != null)
                        {
                        <h3> Billing Address</h3>
                        @addre.AddressText<br />
                        @addre.Country<br />
                        @addre.State<br />
                        @addre.City
                        }
                    </div>
                </div>
                <h3>Recent Logins</h3>
                <hr />
                @if (Model.LastLoginOn >= Model.CreatedDate)
                {<text> Last Logged On:@Model.LastLoginOn</text>}
                else
                {<text> Not yet logged in</text>}
            </div>

        </div>*@
    </div>
</div>
<br />
<script type="text/javascript">

    function Addrsame() {
        var enb = !$('#IsClicked').prop('checked');

        if (enb = "true") {
            $('#BillingAddress').prop("disabled", false);
            $("#BillingCountryId").prop("disabled", false);
            $("#BillingState").prop("disabled", false);
            $("#BillingCityId").prop("disabled", false);
            $("#BillingZipCode").prop("disabled", false);
        }
        if ($('#IsClicked').prop('checked') == true) {
            $('#BillingAddress').prop("disabled", true);
            $("#BillingCountryId").prop("disabled", true);
            $("#BillingState").prop("disabled", true);
            $("#BillingCityId").prop("disabled", true);
            $("#BillingZipCode").prop("disabled", true);
        }
    }
    Addrsame();

    $(function () {
        $('#DateOfBirth').datepicker(
             {
                 dateFormat: "dd/mm/yy"
             });


        //now.setDate(now.getDate() + 7);

        //$('#ToDate').datepicker(
        //    {
        //        /*           minDate: 1,
        //                   defaultDate: now,
        //                   numberOfMonths: 1,*/
        //        dateFormat: "dd/mm/yy"
        //    });


        //$("#DateOfBirth").datepicker({
        //    changeMonth: true,
        //    changeYear: true,
        //    yearRange: "-80:+0"
        //});
    });
</script>
<script type="text/javascript">
    $(function () {


        if ($('#City').val() != null) {
            $("#CityId").hide();
            $("#other_city").show();
            if ($("select#CityId option").length > 1) {
                $("#close_other_city").show();
            }
        }
        if ($('#CityId').val() < 1) {
            $("#CityId").hide();
            $("#other_city").show();
            if ($("select#CityId option").length > 1) {
                $("#close_other_city").show();
            }
        }

        $('#CountryId').change(function () {
            $.get("/Common/GetState?id=" + $('#CountryId').val(), function (data) {
                if (data != "")
                    $('#State').html(data).append('<option selected="selected" value="0">Select</option>');
                else
                    $('#State').empty().append('<option selected="selected" value="0">not available...</option>');
                CityLoad();
            });
        });
        $('#State').change(function () {
            $("#CityId").show();
            $("#City").val("");
            $("#other_city").hide();
            $("#close_other_city").hide();
            $.get("/Common/GetCity?id=" + $('#State').val(), function (data) {
                if (data != "") {
                    $('#CityId').empty().append(data);
                    if ($("select#CityId option").length == 1) {
                        $("#CityId").hide();
                        $("#City").val("");
                        $("#other_city").show();
                    }
                }
                else {
                    $('#CityId').empty().append('<option selected="selected" value="0">not available...</option>');
                }
            });

        });
        $('#CityId').change(function () {
            if ($(this).val() == 1) {
                $(this).hide();
                $("#City").val($("#hdnCity").val());
                $("#other_city").show();
                $("#close_other_city").show();
            }
        });
        $('#close_other_city').click(function () {
            $("#CityId").show();
            $("#City").val("");
            $("#other_city").hide();
            $("#close_other_city").hide();
        });
        $("#maxstaffsave").click(function () {
            if ($("#txtMaxStaff").val() == "") {
                $("#txtMaxStaff").val("0");
            }
            var url = '@Url.Action("SetMaxStaff", "Corporate")';
            $.post(url, { b2bId: $("#UserId").val(), maxstaff: $("#txtMaxStaff").val() }, function (data) {
                $("#maxstaffsuccess").show().fadeOut(2000);
            });
        });
    });


    function CityLoad() {
        $.get("/Common/GetCity?id=" + $('#State').val(), function (data) {
            if (data != "") {
                $('#CityId').empty().append(data);
                if ($("select#CityId option").length == 1) {
                    $("#CityId").hide();
                    $("#City").val("");
                    $("#other_city").show();
                }
            }
            else {
                $('#CityId').empty().append('<option selected="selected" value="0">not available...</option>');
            }
        });
    }
    //billing


    $('#BillingCountryId').change(function () {
        $.get("/Common/GetState?id=" + $('#BillingCountryId').val(), function (data) {
            if (data != "") {
                // $('#BillingState').empty().append('<option selected="selected" value="-1">Other</option>');
                $('#BillingState').html(data).append('<option selected="selected" value="-1">Select</option>');
            }
            else {
                $('#BillingState').empty().append('<option selected="selected" value="0">not available...</option>');
            }
            BillingCityLoad();
        });
    });
    $('#BillingState').change(function () {
        $("#BillingCityId").show();
        $("#BillingCity").val("");
        $("#other_billing_city").hide();
        BillingCityLoad();
    });
    $('#BillingCityId').change(function () {
        if ($(this).val() == -1) {
            $(this).hide();
            $("#BillingCity").val("");
            $("#other_billing_city").show();
            $("#close_other_billing_city").show();
        }
    });
    $('#close_other_billing_city').click(function () {
        $("#BillingCityId").show();
        $("#BillingCity").val("");
        $("#other_billing_city").hide();
        $("#close_other_billing_city").hide();
    });
    function BillingstateLoad() {
        $.get("/Common/GetState?id=" + $('#BillingCountryId').val(), function (data) {
            if (data != "") {
                $('#BillingState').empty().append(data);
            }
            else {
                $('#BillingState').empty().append('<option selected="selected" value="0">not available...</option>');
            }
        });
    }
    //function
    function BillingCityLoad() {
        $.get("/Common/GetCity?id=" + $('#BillingState').val(), function (data) {
            if (data != "") {
                $('#BillingCityId').html(data).append('<option selected="selected" value="0">Select</option>');
                if ($("select#BillingCityId option").length == 1) {
                    $("#BillingCityId").hide();
                    $("#BillingCity").val("");
                    $("#other_billing_city").show();
                }
            }
            else {
                $('#BillingCityId').empty().append('<option selected="selected" value="0">not available...</option>');
            }
        });
    }
    //billing

    //Pagination for Booking List Corporate
    function showPager(num) {
        alert('here is it ' + num);
        $("#currentPage").val(num);
        var url = '@Url.Action("Pager","Corporate")';
        $.post(url, $("#frmPagers").serialize(), function (data) {
            $("#List").html(data);
        });
    }

</script>
