@model StayBazar.Models.SearchModel
@using Microsoft.AspNet.Identity
@{
    ViewBag.Title = "Search";
    string city, location;
    city = "";
    location = "";
    city = BLayer.Property.GetCity(Model.SearchCoordinates.Destination);
    string email = User.Identity.GetUserName();
    int roleId = BLayer.User.GetRole(email);
    if (city == "")
    {
        List<string> locs = BLayer.Property.GetLocation(Model.SearchCoordinates.Destination);
        if (locs.Count == 2)
        {
            city = locs[0];
            location = locs[1];
        }
    }
    ViewBag.destination = Model.SearchCoordinates.Destination;
    StayBazar.Models.SimpleSearchModel sm = Model.SearchCoordinates;
    string no_image = System.Configuration.ConfigurationManager.AppSettings.Get("NoImageLnk");
    string param = "&adults=" + sm.Adults.ToString() + "&destination=" + sm.Destination.ToLower().ToString() + "&checkIn=" + sm.CheckIn.ToShortDateString() + "&checkout=" + sm.CheckOut.ToShortDateString() + "&children=" + sm.Children.ToString() + "&staytype=" + sm.StayType.ToString() + "&bedrooms=" + sm.Bedrooms.ToString() + "&rangebudgetmax=" + sm.rangeBudgetMax.ToString() + "&rangebudgetmin=" + sm.rangeBudgetMin.ToString() + "&starratingrange=" + sm.starRatingRange.ToString() + "&beds=" + sm.beds.ToString() + "&distanceInKm=" + sm.distanceInKm.ToString();

    long userid = 0;
    long.TryParse(User.Identity.GetUserId(), out userid);

    long MaximumEntitlement = BLayer.User.GetMaximumEntitlement(userid);

    ViewBag.BreadCrumb = " <p style='margin-top: -29px; margin-left: 38px;'> > </p> <div id='breads' style='margin-top: -30px; margin-left: 50px;'> <div itemscope itemtype='http://data-vocabulary.org/Breadcrumb'> <a href=''  itemprop='url'  class=' whitetext breadhvr' > <span class=' whitetext breadhvr'  itemprop='title'>Search</span></a>  </div> </div>";

}


<!--fsdfsdfsdfsfsdfsdfsdfsdf-->
@{
    List<CLayer.Currency> currencies = BLayer.Currency.GetForListing();
    System.Text.StringBuilder curcodes = new System.Text.StringBuilder();
    System.Text.StringBuilder curarray = new System.Text.StringBuilder();
    foreach (CLayer.Currency item in currencies)
    {
        curcodes.Append(",");
        curcodes.Append(item.Title);

        curarray.Append("['");
        curarray.Append(item.Title);
        curarray.Append("','");
        curarray.Append(item.Symbol);
        curarray.Append("','");
        curarray.Append(item.ConversionRate);
        curarray.Append("'],");
    }
    if (curarray.Length > 0)
    {
        curarray.Remove(curarray.Length - 1, 1);
    }
    string defaultCurCode = "";
    if (Request.Cookies.Get("CurCode") != null)
    { defaultCurCode = Request.Cookies.Get("CurCode").Value; }
    string fname = "";
    bool IsForStaticPage = false;
    if (ViewBag.IsForStaticPage != null)
    { IsForStaticPage = (bool)ViewBag.IsForStaticPage; }

}





@*@Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/bootstrap")
    @Styles.Render("~/Content/bootcss")*@

@*<link href="~/Content/jquery.dpNumberPicker-holoLight-1.0.1.css" rel="stylesheet" />
    <script src="~/Scripts/jquery.dpNumberPicker-1.0.1.js" type="text/javascript"></script>
    <script src="~/Scripts/bootstrap-formhelpers.js" type="text/javascript"></script>
    <script src="~/Scripts/default.js" type="text/javascript"></script>
    <script src="~/Scripts/placeholder.js" type="text/javascript"></script>*@
@*<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css">*@
@*<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.9.0/slick.css" integrity="sha256-3h45mwconzsKjTUULjY+EoEkoRhXcOIU4l5YAw2tSOU=" crossorigin="anonymous" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.9.0/slick-theme.min.css" integrity="sha256-4hqlsNP9KM6+2eA8VUT0kk4RsMRTeS7QGHIM+MZ5sLY=" crossorigin="anonymous" />*@



<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-migrate/3.1.0/jquery-migrate.min.js" integrity="sha256-91c9XEM8yFH2Mn9fn8yQaNRvJsEruL7Hctr6JiIY7Uw=" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"></script>


@*<script type="application/ld+json">
        {
        "@@context": "http://schema.org",
        "@@type": "WebSite",
        "url": "https://www.staybazar.com/",
        "name" : "Staybazar",

        "potentialAction":
        {
        "@@type": "SearchAction",
        "target": "https://www.staybazar.com/search/sitewide?destination={search_term_string}",
        "query-input": "required name=search_term_string"
        }
        }
    </script>


    <script src="~/Scripts/bootstrap-formhelpers.js" type="text/javascript"></script>
    <script src="~/Scripts/default.js" type="text/javascript"></script>
    <script src="~/Scripts/placeholder.js" type="text/javascript"></script>*@


<!--fsdfsdfsdfsfsdfsdfsdfsdf-->



<link rel="stylesheet" href="~/RahulSample/css/bootstrap.min.css">
<link rel="stylesheet" href="~/RahulSample/css/font-awesome.min.css">
<link href='http://fonts.googleapis.com/css?family=Lato:400,700' rel='stylesheet' type='text/css'>
<link rel="stylesheet" href="~/RahulSample/css/animate.min.css">

<!-- Current Page Styles -->
<link rel="stylesheet" type="text/css" href="~/RahulSample/components/revolution_slider/css/settings.css" media="screen" />
<link rel="stylesheet" type="text/css" href="~/RahulSample/components/revolution_slider/css/style.css" media="screen" />
<link rel="stylesheet" type="text/css" href="~/RahulSample/components/jquery.bxslider/jquery.bxslider.css" media="screen" />
<link rel="stylesheet" type="text/css" href="~/RahulSample/components/flexslider/flexslider.css" media="screen" />

<!-- Main Style -->
<link id="main-style" rel="stylesheet" href="~/RahulSample/css/style.css">

<!-- Updated Styles -->
<link rel="stylesheet" href="~/RahulSample/css/updates.css">

<!-- Custom Styles -->
<link rel="stylesheet" href="~/RahulSample/css/custom.css">

<!-- Responsive Styles -->
<link rel="stylesheet" href="~/RahulSample/css/responsive.css">

@if (roleId == 6 || roleId == 1 || roleId == 5)
{
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

@section scripts{
    <script>

        dataLayer = [{
            'cityName': '@city',
            'locationName': '@location',
        }];
    </script>
    @*<script src="~/Scripts/jquery.bootpag.min.js"></script>*@
    @*<link href="~/Content/styles.css" rel="stylesheet" />*@
    @*@Styles.Render("~/Content/css")*@
    @*@Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/bundles/jqueryui")
        @Scripts.Render("~/bundles/jqueryval")*@
    @*@Scripts.Render("~/bundles/bootstrap")*@
    @*@Styles.Render("~/Content/bootcss")*@

    @*<link href="~/Content/owl.theme.css" rel="stylesheet" />*@
    @*<link href="~/Content/jquery.dpNumberPicker-holoLight-1.0.1.css" rel="stylesheet" />
        <script src="~/Scripts/jquery.dpNumberPicker-1.0.1.js" type="text/javascript"></script>*@
}

@*<script>

        var sss = '<p> <a class="whitetext breadhvr" href="@Url.Action("index", "home")">Home</a> > Search </p>';
        $("#breadcrumbs").html(sss);

    </script>*@
<style>
    .ui-autocomplete {
        max-width: 330px;
    }

    .ubtn-group {
        display: inline-block;
    }

    .SetEntitlement {
        display: inline;
    }

    .RemoveEntitlement {
        display: none;
    }

    .RemoveBedroomsIcon {
        opacity: 0;
    }
</style>
<link href="~/Content/styles.css" rel="stylesheet" />
<link href="~/Content/loader.css" rel="stylesheet" />



@*<div class="wrapper parallax plx-3" data-speed="4" style="display:none">
        <div class="overlay"></div>
        <div class="content"></div>
    </div>*@
<div id="page-wrapper">
    <section id="content">
        <div class="container">
            <div id="main">
                <div class="row">

                    <div class="col-sm-4 col-md-3">
                        @* <h4 class="search-results-title"><i class="soap-icon-search"></i><b>1,984</b> results found.</h4>*@
                        <div class="toggle-container filters-container">
                            <div class="panel style1 arrow-right">
                                @Html.Partial("~/Views/Search/_ResultFilter.cshtml")
                            </div>

                            <div class="panel style1 arrow-right">
                                <h4 class="panel-title">
                                    <a data-toggle="collapse" href="#rating-filter" class="collapsed">User Rating</a>
                                </h4>
                                <div id="rating-filter" class="panel-collapse collapse filters-container">
                                    <div class="panel-content">
                                        <div id="rating" class="five-stars-container editable-rating"></div>
                                        <br />
                                        <small>2458 REVIEWS</small>
                                    </div>
                                </div>
                            </div>

                            @*<div class="panel style1 arrow-right">
                                <h4 class="panel-title">
                                    <a data-toggle="collapse" href="#accomodation-type-filter" class="collapsed">Accomodation Type</a>
                                </h4>
                                <div id="accomodation-type-filter" class="panel-collapse collapse">
                                    <div class="panel-content">
                                        <ul class="check-square filters-option">
                                            <li><a href="#">All<small>(722)</small></a></li>
                                            <li><a href="#">Hotel<small>(982)</small></a></li>
                                            <li><a href="#">Resort<small>(127)</small></a></li>
                                            <li class="active"><a href="#">Bed &amp; Breakfast<small>(222)</small></a></li>
                                            <li><a href="#">Condo<small>(158)</small></a></li>
                                            <li><a href="#">Residence<small>(439)</small></a></li>
                                            <li><a href="#">Guest House<small>(52)</small></a></li>
                                        </ul>
                                        <a class="button btn-mini">MORE</a>
                                    </div>
                                </div>
                            </div>*@

                            @*<div class="panel style1 arrow-right">
                                <h4 class="panel-title">
                                    <a data-toggle="collapse" href="#amenities-filter" class="collapsed">Amenities</a>
                                </h4>
                                <div id="amenities-filter" class="panel-collapse collapse">
                                    <div class="panel-content">
                                        <ul class="check-square filters-option">
                                            <li><a href="#">Bathroom<small>(722)</small></a></li>
                                            <li><a href="#">Cable tv<small>(982)</small></a></li>
                                            <li class="active"><a href="#">air conditioning<small>(127)</small></a></li>
                                            <li class="active"><a href="#">mini bar<small>(222)</small></a></li>
                                            <li><a href="#">wi - fi<small>(158)</small></a></li>
                                            <li><a href="#">pets allowed<small>(439)</small></a></li>
                                            <li><a href="#">room service<small>(52)</small></a></li>
                                        </ul>
                                        <a class="button btn-mini">MORE</a>
                                    </div>
                                </div>
                            </div>*@

                            @*<div class="panel style1 arrow-right">
                                <h4 class="panel-title">
                                    <a data-toggle="collapse" href="#language-filter" class="collapsed">Host Language</a>
                                </h4>
                                <div id="language-filter" class="panel-collapse collapse">
                                    <div class="panel-content">
                                        <ul class="check-square filters-option">
                                            <li><a href="#">English<small>(722)</small></a></li>
                                            <li><a href="#">Español<small>(982)</small></a></li>
                                            <li class="active"><a href="#">Português<small>(127)</small></a></li>
                                            <li class="active"><a href="#">Français<small>(222)</small></a></li>
                                            <li><a href="#">Suomi<small>(158)</small></a></li>
                                            <li><a href="#">Italiano<small>(439)</small></a></li>
                                            <li><a href="#">Sign Language<small>(52)</small></a></li>
                                        </ul>
                                        <a class="button btn-mini">MORE</a>
                                    </div>
                                </div>
                            </div>*@

                            <div class="panel style1 arrow-right">
                                @Html.Partial("~/Views/Search/_Search.cshtml")
                            </div>
                        </div>
                        <div class="travelo-box book-with-us-box">
                            <h4>Why Book with us?</h4>
                            <ul>
                                <li>
                                    <i class="soap-icon-hotel-1 circle"></i>
                                    <h5 class="title"><a href="#">135,00+ Hotels</a></h5>
                                    @*<p></p>*@
                                </li>
                                <li>
                                    <i class="soap-icon-savings circle"></i>
                                    <h5 class="title"><a href="#">Low Rates &amp; Savings</a></h5>
                                    @*<p>Nunc cursus libero pur congue arut nimspnty.</p>*@
                                </li>
                                <li>
                                    <i class="soap-icon-support circle"></i>
                                    <h5 class="title"><a href="#">Excellent Support</a></h5>
                                    @*<p>Nunc cursus libero pur congue arut nimspnty.</p>*@
                                </li>
                            </ul>
                        </div>
                    </div>
                    @*<div class="col-md-4 advsearch pad0">

                        <div class="col-xs-12">
                            @Html.Partial("~/Views/Search/_ResultFilter.cshtml")
                        </div>
                        <!-- Ads section -->
                        <div class="col-xs-12 col-md-12" style="display:none">
                            <div id="ads" class="owl-carousel">
                                <div class="ads">
                                    <a href="#" target="_blank">
                                        <img src="~/images/properties/prop-image.jpg" />
                                    </a>
                                </div>
                                <div class="ads">
                                    <a href="#" target="_blank">
                                        <img src="~/images/properties/prop-image.jpg" />
                                    </a>
                                </div>
                            </div>
                        </div>
                        <!-- Ads section end -->
                    </div>*@
                    <div class="col-sm-8 col-md-9">
                        <div class="sort-by-section clearfix">
                            <h4 class="sort-by-title block-sm">Sort results by:</h4>
                            <ul class="sort-bar clearfix block-sm">
                                <li class="sort-by-name"><a class="sort-by-container" href="#"><span>name</span></a></li>
                                <li class="sort-by-price"><a class="sort-by-container" href="#"><span>price</span></a></li>
                                <li class="clearer visible-sms"></li>
                                <li class="sort-by-rating"><a class="sort-by-container" href="#"><span>rating</span></a></li>
                                <li class="sort-by-popularity"><a class="sort-by-container" href="#"><span>popularity</span></a></li>
                            </ul>

                            @*<ul class="swap-tiles clearfix block-sm">
                                <li class="swap-list active">
                                    <a href="hotel-list-view.html"><i class="soap-icon-list"></i></a>
                                </li>
                                <li class="swap-grid">
                                    <a href="hotel-grid-view.html"><i class="soap-icon-grid"></i></a>
                                </li>
                                <li class="swap-block">
                                    <a href="hotel-block-view.html"><i class="soap-icon-block"></i></a>
                                </li>
                            </ul>*@
                        </div>
                        <div id="resultlisting">
                            @*<div id="loading">
                                <div class="center_load">
                                    <img src="~/images/loading.gif" width="30" height="30" />
                                </div>
                            </div*@
                            @*<div class="col-md-12 selectionctr fullwidth pull-left" id="loadingheader" style="display:none;">
                                <div class="whitebg fullwidth pull-left border-radius lightgreybg padding10px" style="height:81px!important">
                                    <p class="col-md-12"></p><p id="pTitle" style="color:#E7E7E7;"><span id="spTitle" style="font-weight:bold;display:none"></span></p><div class="col-md-8 filter" id="filterbox"></div> <ul class="nav nav-tabs col-md-4 searchview nav-pills text-center border-radius whitebg" style="display:none">
                                        <li class="active" style="display:none">                        <a href="#home" data-toggle="tab">                            <i class="glyphicon glyphicon glyphicon-list"></i>List View</a></li>
                                        <li style="display:none">
                                            <a href="#profile" id="mapview" data-toggle="tab">
                                                <i class="glyphicon glyphicon-map-marker"></i>Map View
                                            </a>
                                        </li>
                                    </ul>
                                </div>
                            </div>*@

                            <div class="col-md-12 pad2 loader-main" id="resultlistLoading" style="display:none;padding-top:40px!important ">
                                <div class="loader-box">
                                    <span class="loader"><span class="loader-inner"></span></span>
                                </div>
                            </div>






                        </div>
                        <!--@Html.Partial("~/Views/Search/_Result.cshtml", Model.Results)-->
                    </div>



                    @*<div>
                    <input name="hdLoadRecords" id="hdLoadRecords" type="hidden" />
                    <input name="hdLoadMoreRecords" id="hdLoadMoreRecords" type="hidden" />
                    <input name="hdMainRecords" id="hdMainRecords" type="hidden" value="0" />
                    </div>*@






                    @*<div class="col-md-5 padding5px styleselect2ctr" id="dvNoEntitlement" style="display:none">
                    <button type="button" class="redbg whitetext"  id="btndvNoEntitlement"  style="text-align:center" data-toggle="tooltip" title="DISPLAY ALL, Including above my entitlement">Show all</button>
                    </div>*@
                    <br clear="all" />
                </div>
            </div>
        </div>
        @Html.Partial("~/Views/Widget/_SearchMostPopular.cshtml")
    </section>

</div>
<div class="container ctrpad">
    <div class="row">
        <!--  Most popular section -->
        @* @Html.Partial("~/Views/Widget/_SearchMostPopular.cshtml")*@
        <!--  Most popular section End -->
        <!-- Testimonials Section -->
        @*@Html.Partial("~/Views/Testimonials/_widget.cshtml")*@
        <!-- Testimonials Section End-->
    </div>
</div>

<style>
    #loading {
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        position: initial;
        display: block;
        opacity: 0.7;
        background-color: #fff;
        z-index: 99;
        text-align: center;
    }

    #loading-image {
        position: absolute;
        top: 100px;
        left: 240px;
        z-index: 100;
    }
</style>
<script language="javascript" type="text/javascript">
    var SortedOutPutResult = [];
    var SortedOutPutResultEntitlement = [];
    $(window).load(function () {
        // $('#loading').hide();
    });
</script>
<script type='text/javascript'>
    // Scroll parallax elements
    function scrollParallaxElements() {

        $('.parallax').each(function () {
            var $this = $(this);
            @*//$this.css('background-position', '80% -' + (($(window).height() + $this.height() - Math.max(0, Math.min($(window).height() + $this.height(), $this.offset().top + $this.height() - $(window).scrollTop()))) / $this.data('speed')) + 'px');*@
            $this.css('background-position', 'center');
        });
    }
    // Initial scroll parallax elements
    scrollParallaxElements();

    // Perform operations upon scrolling the window
    $(window).scroll(function () {
        // Scroll parallax elements
        scrollParallaxElements();

    });
</script>
<script type='text/javascript'>
    $().ready(function () {

        $(document.body).addClass('body-no-scroll');

        $('.trunc').jTruncate({
            length: 120,
            minTrail: 0,
            moreText: "",
            lessText: "",
            moreAni: "fast",
            lessAni: 1000,
            ellipsisText: "",
        });

        $("#HotelName").on('input', function () {
            //  alert("Change detected!");
            //debugger;
            var Hotelname = $("#HotelName").val();
            if (Hotelname == undefined) {
                Hotelname = "";
            }
            if (Hotelname == "") {
                selected = [];
                $('#dvStarRatings input:checked').each(function () {
                    selected.push($(this).attr('value'));
                });
                LocationsSelected = [];
                if (LocationCount > 10) {
                    $('#dvLocationsMore input:checked').each(function () {
                        LocationsSelected.push($(this).attr('value'));
                    });
                }
                else {
                    $('#dvLocations input:checked').each(function () {
                        LocationsSelected.push($(this).attr('value'));
                    });
                }
                var sorteddata = FilterbyStarRating(selected, LocationsSelected);
            }

        });

    });
    function FilterHotelNames() {
        selected = [];
        $('#dvStarRatings input:checked').each(function () {
            selected.push($(this).attr('value'));
        });
        LocationsSelected = [];
        if (LocationCount > 10) {
            $('#dvLocationsMore input:checked').each(function () {
                LocationsSelected.push($(this).attr('value'));
            });
        }
        else {
            $('#dvLocations input:checked').each(function () {
                LocationsSelected.push($(this).attr('value'));
            });
        }
        var sorteddata = FilterbyStarRating(selected, LocationsSelected);
    }
</script>
<script type='text/javascript'>
    $(window).resize(function () {
        imgadj();
    });

    $(function () { imgadj(); });

    function imgadj() {

        $(".img-thumb").each(function () {
            var refH = $(this).height();
            var refW = $(this).width();
            var refRatio = refW / refH;
            var imgH = $(this).children("img").height();
            var imgW = $(this).children("img").width();

            if ((imgW / imgH) < refRatio) {
                $(this).addClass("portrait");
            } else {
                $(this).addClass("landscape");
            }
        })
    }
</script>
<script type='text/javascript'>
    /*  var totalpages = 35;
      $('.pagination').twbsPagination({
          totalPages: totalpages,
          visiblePages: 5,
          href: 'javascript:void(0);',
          hrefVariable: '{{number}}',
          first: '',
          prev: '<i class="fa fa-caret-left"></i>',
          next: '<i class="fa fa-caret-right"></i>',
          last: '',
          onPageClick: function (event, page) {
              $('.page-number').text('Page ' + page + ' of ' + totalpages);
          }
      });*/
    var StarRatingValue;
    var selected = [];
    var LocationsSelected = [];
    var LocationCount = 0;
    function LocSearch1()
    {
        var s = "";
        $(".Locationchk").each(function () {
            if ($(this).prop("checked") == true) {
                if (s != "") {
                    s = s + ",";
                }

                s = s + $(this).val();
            }
        });
        $("#lcnchk").val(s);

        var Locaselcted = $("#lcnchk").val();

        $("#Location").val(Locaselcted);
        SearchPager(1);
    }
    function LocSearch()
    {
        $("#Location").val("");
        SearchPager(1);
    }
    function SearchPager(idx)
    {
        $('#CurrentPage').val(idx);
        @*$('@Url.Action("Index","Search")', $("#searchform").serialize(), function (data) {
            $("#resultlisting").html(data);
        });*@
     //   $.post('@(Url.Action("ApplyFilter","Search"))', $("#searchform").serialize(), function (data) { $("#resultlisting").html(data); });
    }
    function sortOrderChange()
    {
      //  debugger;
        $('#CurrentPage').val(1);
        $("#OrderBy").val($("#dlSortOrder").val());

        console.log(SortedOutPutResult.Results);

   //   //debugger;;
        var orderby = $("#dlSortOrder").val();
        var sortedData = SortedOutPutResult.Results;
        switch(orderby)
        {

            case "1":
                SortBy="DistanceInKm";
                SortDirection = "asc";
                sortedData = sort(sortedData, [{APIType: 'asc' }, { DistanceInKm: 'asc' }]);
                break;
            case "2":
                SortBy="Amount";
                SortDirection = "asc";
                sortedData = sort(sortedData, [{APIType: 'asc' }, { Amount: 'asc' }]);
                break;
            case "3":
                SortBy="Amount";
                SortDirection = "desc";
                sortedData = sort(sortedData, [{APIType: 'asc' }, { Amount: 'desc' }]);
                break;
            default:
                SortBy="Amount";
                SortDirection = "asc";
                sortedData = sort(sortedData, [{APIType: 'asc' }, { Amount: 'asc' }]);
                break;
        }
        console.log(sortedData);
        //var sortedData = SortedOutPutResult.sort(orderByProperty('InventoryAPIType', SortBy));

        StartPageNumber=1;

        var AdvancedPages = (totalrecords % NoofRecordsPerPage) > 0 ? 1 : 0;
        var noofpages = parseInt((totalrecords / NoofRecordsPerPage)) + AdvancedPages;
        if(StartPageNumber==noofpages)
        {
            // NoofRecordsPerPage= parseInt((totalrecords % NoofRecordsPerPage));
            $('#btnLoadMore').hide();
        }
        if(totalrecords<=NoofRecordsPerPage)
        {
            $('#btnLoadMore').hide();
        }
        if (ResultList.Results.length <= NoofRecordsPerPage)
        {

            $('#btnLoadMore').hide();
        }
        else {
            $('#btnLoadMore').show();

        }
       // var OutPutResult=$('#dvResults').html();

        var OutPutList = GenerateResultStringSorted(sortedData, paramCriteria);



        $('#dvResults').html(OutPutList);


    }
    function ShowAllHotels() {
        //debugger;
        $('#CurrentPage').val(1);
        $("#OrderBy").val($("#dlSortOrder").val());
        $("#hdMainRecords").val("1");

        console.log(MainResultList.Results);
        for (var i = 0; i <= 5; i++) {
            SetRateCount(i);
        }
        if (MainResultList.Results.length > 0) {
            findMinMax(MainResultList.Results);
            //       //debugger;;
            SetLocations(MainResultList.Results);

        }

        //   //debugger;;
        var orderby = $("#dlSortOrder").val();
        var sortedData = MainResultList.Results;
        switch (orderby) {

            case "1":
                SortBy = "DistanceInKm";
                SortDirection = "asc";
                sortedData = sort(sortedData, [{ APIType: 'asc' }, { DistanceInKm: 'asc' }]);
                break;
            case "2":
                SortBy = "Amount";
                SortDirection = "asc";
                sortedData = sort(sortedData, [{ APIType: 'asc' }, { Amount: 'asc' }]);
                break;
            case "3":
                SortBy = "Amount";
                SortDirection = "desc";
                sortedData = sort(sortedData, [{ APIType: 'asc' }, { Amount: 'desc' }]);
                break;
            default:
                SortBy = "Amount";
                SortDirection = "asc";
                sortedData = sort(sortedData, [{ APIType: 'asc' }, { Amount: 'asc' }]);
                break;
        }
        console.log(sortedData);
        //var sortedData = SortedOutPutResult.sort(orderByProperty('InventoryAPIType', SortBy));

        StartPageNumber = 1;
        totalrecords = MainResultList.Results.length;

        var AdvancedPages = (totalrecords % NoofRecordsPerPage) > 0 ? 1 : 0;
        var noofpages = parseInt((totalrecords / NoofRecordsPerPage)) + AdvancedPages;
        if (StartPageNumber == noofpages) {
            // NoofRecordsPerPage= parseInt((totalrecords % NoofRecordsPerPage));
            $('#btnLoadMore').hide();
        }
        if (totalrecords <= NoofRecordsPerPage) {
            $('#btnLoadMore').hide();
        }
        if (MainResultList.Results.length <= NoofRecordsPerPage) {

            $('#btnLoadMore').hide();
        }
        else {
            $('#btnLoadMore').show();

        }
        // var OutPutResult=$('#dvResults').html();

        var OutPutList = GenerateResultStringSorted(sortedData, paramCriteria);



        $('#dvResults').html(OutPutList);
        $("#spTitle").text(totalrecords);
        if (IsMaximumDailyEntitlement == true) {
            $("#spEntitlement").text('(Only properties within your daily entitlement are listed below.)')
        }
        else {
            $("#spEntitlement").text('');
        }



    }


    function sortOrderChangeEntitlement() {
       // debugger;
        $('#CurrentPage').val(1);
        $("#OrderBy").val($("#dlSortOrder").val());

        var inputs = $("#hdLoadRecords");
        for (var i = 0, len = inputs.length; i < len; i++) {
            if (inputs[i].type === "hidden") {
                SortedOutPutResultEntitlement.Results.push(inputs[i].value);
            }
        }

        console.log(SortedOutPutResultEntitlement.Results);

        //   //debugger;;
        var orderby = $("#dlSortOrder").val();
        var sortedData = SortedOutPutResultEntitlement.Results;
        switch (orderby) {

            case "1":
                SortBy = "DistanceInKm";
                SortDirection = "asc";
                sortedData = sort(sortedData, [{ APIType: 'asc' }, { DistanceInKm: 'asc' }]);
                break;
            case "2":
                SortBy = "Amount";
                SortDirection = "asc";
                sortedData = sort(sortedData, [{ APIType: 'asc' }, { Amount: 'asc' }]);
                break;
            case "3":
                SortBy = "Amount";
                SortDirection = "desc";
                sortedData = sort(sortedData, [{ APIType: 'asc' }, { Amount: 'desc' }]);
                break;
            default:
                SortBy = "Amount";
                SortDirection = "asc";
                sortedData = sort(sortedData, [{ APIType: 'asc' }, { Amount: 'asc' }]);
                break;
        }
        console.log(sortedData);
        //var sortedData = SortedOutPutResult.sort(orderByProperty('InventoryAPIType', SortBy));

        StartPageNumber = 1;

        var AdvancedPages = (totalrecords % NoofRecordsPerPage) > 0 ? 1 : 0;
        var noofpages = parseInt((totalrecords / NoofRecordsPerPage)) + AdvancedPages;
        if (StartPageNumber == noofpages) {
            // NoofRecordsPerPage= parseInt((totalrecords % NoofRecordsPerPage));
            $('#btnLoadMore').hide();
        }
        if (totalrecords <= NoofRecordsPerPage) {
            $('#btnLoadMore').hide();
        }
        if (ResultList.Results.length <= NoofRecordsPerPage) {

            $('#btnLoadMore').hide();
        }
        else {
            $('#btnLoadMore').show();

        }
        // var OutPutResult=$('#dvResults').html();

     //   debugger;

        var OutPutList = GenerateResultStringSorted(sortedData, paramCriteria);



        $('#dvResults').html(OutPutList);


    }

    function FilterbyStarRating(fno,lfno) {

       //debugger;;
        IsFilter = true;

        $('#CurrentPage').val(1);
        $("#OrderBy").val($("#dlSortOrder").val());


        console.log(ResultList.Results);
        console.log(SortedOutPutResult.Results);
        var StarSortedOutPutResult = [];
        StarSortedOutPutResult.Results = [];

        //price range selection
        if ((rateMax > 0) && (rateMin >= 0))
        {
            FinalHotels = myfilter(SortedOutPutResult.Results, function (Hotels) {
                return (((Hotels.Amount >= rateMin) && (Hotels.Amount <= rateMax)));
            });
           StarSortedOutPutResult.Results = [];
            for (var i in FinalHotels) {
             StarSortedOutPutResult.Results.push(FinalHotels[i]);
            }
        }

        if (fno.length>0)
        {
            if ((rateMax > 0) && (rateMin >= 0)) {
                FinalHotels = myfilter(StarSortedOutPutResult.Results, function (Hotels) {
                    return (((Hotels.StarRate == fno[0]) || (Hotels.StarRate == fno[1]) || (Hotels.StarRate == fno[2]) || (Hotels.StarRate == fno[3]) || (Hotels.StarRate == fno[4])||(Hotels.StarRate == fno[5])));
                });
                StarSortedOutPutResult.Results = [];
                for (var i in FinalHotels) {
                    StarSortedOutPutResult.Results.push(FinalHotels[i]);
                }
                totalrecords = StarSortedOutPutResult.Results.length;
                sortedData  = StarSortedOutPutResult.Results;

            }
            else {
                for (var i in SortedOutPutResult.Results) {
                    StarSortedOutPutResult.Results.push(SortedOutPutResult.Results[i]);
                }
                FinalHotels = myfilter(StarSortedOutPutResult.Results, function (Hotels) {
                    return (((Hotels.StarRate == fno[0]) || (Hotels.StarRate == fno[1]) || (Hotels.StarRate == fno[2]) || (Hotels.StarRate == fno[3]) || (Hotels.StarRate == fno[4]) || (Hotels.StarRate == fno[5])));
                });
                StarSortedOutPutResult.Results = [];
                for (var i in FinalHotels) {
                    StarSortedOutPutResult.Results.push(FinalHotels[i]);
                }
                totalrecords = StarSortedOutPutResult.Results.length;
                sortedData = StarSortedOutPutResult.Results;

            }
        }
        else {
            if ((rateMax > 0) && (rateMin >= 0)) {
                    if (StarSortedOutPutResult.Results.length == 0)
                    {
                        FinalHotels = myfilter(SortedOutPutResult.Results, function (Hotels) {
                            return (((Hotels.Amount >= rateMin) && (Hotels.Amount <= rateMax)));
                        });
                    }
                    else {
                        FinalHotels = myfilter(StarSortedOutPutResult.Results, function (Hotels) {
                            return (((Hotels.Amount >= rateMin) && (Hotels.Amount <= rateMax)));
                        });
                    }

                    StarSortedOutPutResult.Results = [];
                    for (var i in FinalHotels) {
                        StarSortedOutPutResult.Results.push(FinalHotels[i]);
                    }
                    totalrecords = StarSortedOutPutResult.Results.length;
                    sortedData = StarSortedOutPutResult.Results;

                }
                else {
                    for (var i in SortedOutPutResult.Results) {
                        StarSortedOutPutResult.Results.push(SortedOutPutResult.Results[i]);
                    }
                    totalrecords = StarSortedOutPutResult.Results.length;
                    sortedData = StarSortedOutPutResult.Results;


                }
        }
    //    //debugger;;
        if (lfno !=undefined)
        {
            if (lfno.length > 0) {
                if (StarSortedOutPutResult.Results.length == 0) {
                    //FinalHotels = myfilter(SortedOutPutResult.Results, function (Hotels) {
                    //    return (($.inArray(Hotel.LocationName, LocationsSelected)));
                    //});
                    FinalHotels = SortedOutPutResult.Results.filter(f => LocationsSelected.includes(f.LocationName));

                }
                else {
                    //FinalHotels = myfilter(StarSortedOutPutResult.Results, function (Hotels) {
                    //    return (($.inArray(Hotel.LocationName, LocationsSelected)));
                    //});
                    FinalHotels = StarSortedOutPutResult.Results.filter(f => LocationsSelected.includes(f.LocationName));
                }
                StarSortedOutPutResult.Results = [];
                for (var i in FinalHotels) {
                    StarSortedOutPutResult.Results.push(FinalHotels[i]);
                }
                totalrecords = StarSortedOutPutResult.Results.length;
                sortedData = StarSortedOutPutResult.Results;
            }
        }

        //debugger;
        var Hotelname = $("#HotelName").val();
        if (Hotelname != undefined)
        {
            if (Hotelname.length > 0)
            {
                //FinalHotels = SortedOutPutResult.Results.filter(f =>f.Title==Hotelname)
                //StarSortedOutPutResult.Results = [];
                //for (var i in FinalHotels) {

                //    StarSortedOutPutResult.Results.push(FinalHotels[i]);
                //}

                FinalHotels = SortedOutPutResult.Results;//.filter(f => f.Title == Hotelname)
                StarSortedOutPutResult.Results = [];
                for (var i in FinalHotels) {
                    var pos = FinalHotels[i].Title.toString().toLowerCase().indexOf(Hotelname.toLowerCase());
                    if (pos >= 0)
                    {
                        StarSortedOutPutResult.Results.push(FinalHotels[i]);
                    }
                 //   StarSortedOutPutResult.Results.push(FinalHotels[i]);
                }

                totalrecords = StarSortedOutPutResult.Results.length;
                sortedData = StarSortedOutPutResult.Results;

            }
        }


 ///       //debugger;;




        //ResultList.Results = [];
        //for (var i in sortedData) {
        //    ResultList.Results.push(sortedData[i]);
        //}

        var orderby = $("#dlSortOrder").val();

        switch (orderby) {

            case "1":
                SortBy = "DistanceInKm";
                SortDirection = "asc";
                sortedData = sort(sortedData, [{ APIType: 'asc' }, { DistanceInKm: 'asc' }]);
                break;
            case "2":
                SortBy = "Amount";
                SortDirection = "asc";
                sortedData = sort(sortedData, [{ APIType: 'asc' }, { Amount: 'asc' }]);
                break;
            case "3":
                SortBy = "Amount";
                SortDirection = "desc";
                sortedData = sort(sortedData, [{ APIType: 'asc' }, { Amount: 'desc' }]);
                break;
            default:
                SortBy = "Amount";
                SortDirection = "asc";
                sortedData = sort(sortedData, [{ APIType: 'asc' }, { Amount: 'asc' }]);
                break;
        }
        console.log(sortedData);
        //var sortedData = SortedOutPutResult.sort(orderByProperty('InventoryAPIType', SortBy));


        StartPageNumber = 1;



        var AdvancedPages = (totalrecords % NoofRecordsPerPage) > 0 ? 1 : 0;
        var noofpages = parseInt((totalrecords / NoofRecordsPerPage)) + AdvancedPages;
        if (StartPageNumber == noofpages) {
            // NoofRecordsPerPage= parseInt((totalrecords % NoofRecordsPerPage));
            $('#btnLoadMore').hide();
        }
        if (totalrecords <= NoofRecordsPerPage) {
            $('#btnLoadMore').hide();
        }
        else {
            $('#btnLoadMore').show();
        }


        var OutPutList = GenerateResultStringSorted(sortedData, paramCriteria);

        var pLocation = $("#Destination").val();

     //   $("#pTitle").text(totalrecords + ' Properties found in ' + SortedOutPutResult.Destination);
        $("#pTitle").html('<span id="spTitle" style="font-weight:bold">' + totalrecords + '</span> Properties found in ' + pLocation);
        $('#dvResults').html("");
        $('#dvResults').html(OutPutList);

        FilterResult = sortedData;

        return sortedData;

    }

    function FilterbyStarRatingMore(fno, lfno) {

      debugger;
        IsFilter = true;

        $('#CurrentPage').val(1);
        $("#OrderBy").val($("#dlSortOrder").val());


        console.log(ResultList.Results);
        console.log(SortedOutPutResult.Results);


        if ($("#hdMainRecords").val()=="1")
        {
            SortedOutPutResult.Results = MainResultList.Results;
        }
        var StarSortedOutPutResult = [];
        StarSortedOutPutResult.Results = [];

        //price range selection
        if ((rateMax > 0) && (rateMin >= 0)) {
            FinalHotels = myfilter(SortedOutPutResult.Results, function (Hotels) {
                return (((Hotels.Amount >= rateMin) && (Hotels.Amount <= rateMax)));
            });
            StarSortedOutPutResult.Results = [];
            for (var i in FinalHotels) {
                StarSortedOutPutResult.Results.push(FinalHotels[i]);
            }
        }

        if (fno.length > 0) {
            if ((rateMax > 0) && (rateMin >= 0)) {
                FinalHotels = myfilter(StarSortedOutPutResult.Results, function (Hotels) {
                    return (((Hotels.StarRate == fno[0]) || (Hotels.StarRate == fno[1]) || (Hotels.StarRate == fno[2]) || (Hotels.StarRate == fno[3]) || (Hotels.StarRate == fno[4]) || (Hotels.StarRate == fno[5])));
                });
                StarSortedOutPutResult.Results = [];
                for (var i in FinalHotels) {
                    StarSortedOutPutResult.Results.push(FinalHotels[i]);
                }
                totalrecords = StarSortedOutPutResult.Results.length;
                sortedData = StarSortedOutPutResult.Results;

            }
            else {
                for (var i in SortedOutPutResult.Results) {
                    StarSortedOutPutResult.Results.push(SortedOutPutResult.Results[i]);
                }
                FinalHotels = myfilter(StarSortedOutPutResult.Results, function (Hotels) {
                    return (((Hotels.StarRate == fno[0]) || (Hotels.StarRate == fno[1]) || (Hotels.StarRate == fno[2]) || (Hotels.StarRate == fno[3]) || (Hotels.StarRate == fno[4]) || (Hotels.StarRate == fno[5])));
                });
                StarSortedOutPutResult.Results = [];
                for (var i in FinalHotels) {
                    StarSortedOutPutResult.Results.push(FinalHotels[i]);
                }
                totalrecords = StarSortedOutPutResult.Results.length;
                sortedData = StarSortedOutPutResult.Results;

            }
        }
        else {
            if ((rateMax > 0) && (rateMin >= 0)) {
                if (StarSortedOutPutResult.Results.length == 0) {
                    FinalHotels = myfilter(SortedOutPutResult.Results, function (Hotels) {
                        return (((Hotels.Amount >= rateMin) && (Hotels.Amount <= rateMax)));
                    });
                }
                else {
                    FinalHotels = myfilter(StarSortedOutPutResult.Results, function (Hotels) {
                        return (((Hotels.Amount >= rateMin) && (Hotels.Amount <= rateMax)));
                    });
                }

                StarSortedOutPutResult.Results = [];
                for (var i in FinalHotels) {
                    StarSortedOutPutResult.Results.push(FinalHotels[i]);
                }
                totalrecords = StarSortedOutPutResult.Results.length;
                sortedData = StarSortedOutPutResult.Results;

            }
            else {
                for (var i in SortedOutPutResult.Results) {
                    StarSortedOutPutResult.Results.push(SortedOutPutResult.Results[i]);
                }
                totalrecords = StarSortedOutPutResult.Results.length;
                sortedData = StarSortedOutPutResult.Results;


            }
        }
        //    //debugger;;
        if (lfno != undefined) {
            if (lfno.length > 0) {
                if (StarSortedOutPutResult.Results.length == 0) {
                    //FinalHotels = myfilter(SortedOutPutResult.Results, function (Hotels) {
                    //    return (($.inArray(Hotel.LocationName, LocationsSelected)));
                    //});
                    FinalHotels = SortedOutPutResult.Results.filter(f => LocationsSelected.includes(f.LocationName));
                }
                else {
                    //FinalHotels = myfilter(StarSortedOutPutResult.Results, function (Hotels) {
                    //    return (($.inArray(Hotel.LocationName, LocationsSelected)));
                    //});
                    FinalHotels = StarSortedOutPutResult.Results.filter(f => LocationsSelected.includes(f.LocationName));
                }
                StarSortedOutPutResult.Results = [];
                for (var i in FinalHotels) {
                    StarSortedOutPutResult.Results.push(FinalHotels[i]);
                }
                totalrecords = StarSortedOutPutResult.Results.length;
                sortedData = StarSortedOutPutResult.Results;
            }
        }


        ///       //debugger;;

        //debugger;
        var Hotelname = $("#HotelName").val();
        if (Hotelname != undefined) {
            if (Hotelname.length > 0) {
                //FinalHotels = SortedOutPutResult.Results.filter(f =>f.Title==Hotelname)
                //StarSortedOutPutResult.Results = [];
                //for (var i in FinalHotels) {

                //    StarSortedOutPutResult.Results.push(FinalHotels[i]);
                //}

                FinalHotels = SortedOutPutResult.Results;//.filter(f => f.Title == Hotelname)
                StarSortedOutPutResult.Results = [];
                for (var i in FinalHotels) {
                    var pos = FinalHotels[i].Title.toString().toLowerCase().indexOf(Hotelname.toLowerCase());
                    if (pos >= 0) {
                        StarSortedOutPutResult.Results.push(FinalHotels[i]);
                    }
                    //   StarSortedOutPutResult.Results.push(FinalHotels[i]);
                }

                totalrecords = StarSortedOutPutResult.Results.length;
                sortedData = StarSortedOutPutResult.Results;

            }
        }



        //ResultList.Results = [];
        //for (var i in sortedData) {
        //    ResultList.Results.push(sortedData[i]);
        //}

        var orderby = $("#dlSortOrder").val();

        switch (orderby) {

            case "1":
                SortBy = "DistanceInKm";
                SortDirection = "asc";
                sortedData = sort(sortedData, [{ APIType: 'asc' }, { DistanceInKm: 'asc' }]);
                break;
            case "2":
                SortBy = "Amount";
                SortDirection = "asc";
                sortedData = sort(sortedData, [{ APIType: 'asc' }, { Amount: 'asc' }]);
                break;
            case "3":
                SortBy = "Amount";
                SortDirection = "desc";
                sortedData = sort(sortedData, [{ APIType: 'asc' }, { Amount: 'desc' }]);
                break;
            default:
                SortBy = "Amount";
                SortDirection = "asc";
                sortedData = sort(sortedData, [{ APIType: 'asc' }, { Amount: 'asc' }]);
                break;
        }
        console.log(sortedData);
        //var sortedData = SortedOutPutResult.sort(orderByProperty('InventoryAPIType', SortBy));


        //StartPageNumber = 1;



        //var AdvancedPages = (totalrecords % NoofRecordsPerPage) > 0 ? 1 : 0;
        //var noofpages = parseInt((totalrecords / NoofRecordsPerPage)) + AdvancedPages;
        //if (StartPageNumber == noofpages) {
        //    // NoofRecordsPerPage= parseInt((totalrecords % NoofRecordsPerPage));
        //    $('#btnLoadMore').hide();
        //}
        //if (totalrecords <= NoofRecordsPerPage) {
        //    $('#btnLoadMore').hide();
        //}
        //else {
        //    $('#btnLoadMore').show();
        //}


        //var OutPutList = GenerateResultStringSorted(sortedData, paramCriteria);


        //$("#pTitle").text(totalrecords + ' Properties found in ' + SortedOutPutResult.Destination);
        //$('#dvResults').html("");
        //$('#dvResults').html(OutPutList);

        FilterResult = sortedData;

        return sortedData;

    }


    function myfilter(array, test) {
        var passedTest = [];
        for (var i = 0; i < array.length; i++) {
            if (test(array[i]))
                passedTest.push(array[i]);
        }

        return passedTest;
    }
    $(function () {
        $(".amnts").click(function () {
            $("#features").val("");
            $(".amnts").each(function () {
                if ($(this).prop("checked")) { $("#features").val("" + $(this).val() + ","); }
            });
            SearchPager(1);
        });
    });
    function SetRateCount(fno) {
   //debugger;;
        console.log(ResultList.Results);
        console.log(SortedOutPutResult.Results);

         var Uid =@userid;
 var Entitlementdata = '@this.Request.QueryString["Entitlement"]';
 if ((Uid > 0) && (IsMaximumDailyEntitlement == true) && (Entitlementdata!=1))
        {

     if (SortedOutPutResult.Results.length > 0)
            {
                $("#hdMainRecords").val("0");

         MaximumDailyEntitlement = @MaximumEntitlement;// SortedOutPutResult.Results[0].MaximumDailyEntitlement > 0 ? SortedOutPutResult.Results[0].MaximumDailyEntitlement : 0;
                if (MaximumDailyEntitlement > 0) {
                    SortedOutPutResult.Results = SortedOutPutResult.Results.filter(f => f.Amount <= MaximumDailyEntitlement);

                    totalrecords = SortedOutPutResult.Results.length;

                }
            }
 }
 else {
     SortedOutPutResult.Results = MainResultList.Results;
 }




        var StarSortedOutPutResultCount = [];
        StarSortedOutPutResultCount.Results = [];






            switch (fno)
            {
                case 1:
                    for (var i in SortedOutPutResult.Results) {
                        StarSortedOutPutResultCount.Results.push(SortedOutPutResult.Results[i]);
                    }
                    FinalHotels = myfilter(StarSortedOutPutResultCount.Results, function (Hotels) {
                        return ((Hotels.StarRate == fno));
                    });
                    $('#RatingCount1').text(FinalHotels.length);
                    if (FinalHotels.length == 0) {
                        $("#dlSortOrder").hide();
                    }
                    else {
                        $("#dlSortOrder").show();
                    }

                    break;
                case 2:
                    for (var i in SortedOutPutResult.Results) {
                        StarSortedOutPutResultCount.Results.push(SortedOutPutResult.Results[i]);
                    }
                    FinalHotels = myfilter(StarSortedOutPutResultCount.Results, function (Hotels) {
                        return ((Hotels.StarRate == fno));
                    });
                    $('#RatingCount2').text(FinalHotels.length);
                    if (FinalHotels.length == 0) {
                        $("#dlSortOrder").hide();
                    }
                    else {
                        $("#dlSortOrder").show();
                    }
                    break;
                case 3:
                    for (var i in SortedOutPutResult.Results) {
                        StarSortedOutPutResultCount.Results.push(SortedOutPutResult.Results[i]);
                    }
                    FinalHotels = myfilter(StarSortedOutPutResultCount.Results, function (Hotels) {
                        return ((Hotels.StarRate == fno));
                    });
                    $('#RatingCount3').text(FinalHotels.length);
                    if (FinalHotels.length == 0) {
                        $("#dlSortOrder").hide();
                    }
                    else {
                        $("#dlSortOrder").show();
                    }
                    break;
                case 4:
                    for (var i in SortedOutPutResult.Results) {
                        StarSortedOutPutResultCount.Results.push(SortedOutPutResult.Results[i]);
                    }
                    FinalHotels = myfilter(StarSortedOutPutResultCount.Results, function (Hotels) {
                        return ((Hotels.StarRate == fno));
                    });
                    $('#RatingCount4').text(FinalHotels.length);
                    if (FinalHotels.length == 0) {
                        $("#dlSortOrder").hide();
                    }
                    else {
                        $("#dlSortOrder").show();
                    }
                    break;
                case 5:
                    for (var i in SortedOutPutResult.Results) {
                        StarSortedOutPutResultCount.Results.push(SortedOutPutResult.Results[i]);
                    }
                    FinalHotels = myfilter(StarSortedOutPutResultCount.Results, function (Hotels) {
                        return ((Hotels.StarRate == fno));
                    });
                    $('#RatingCount5').text(FinalHotels.length);
                    if (FinalHotels.length == 0) {
                        $("#dlSortOrder").hide();
                    }
                    else {
                        $("#dlSortOrder").show();
                    }
                    break;
                case 0:
                    for (var i in SortedOutPutResult.Results) {
                        StarSortedOutPutResultCount.Results.push(SortedOutPutResult.Results[i]);
                    }
                    FinalHotels = myfilter(StarSortedOutPutResultCount.Results, function (Hotels) {
                        return ((Hotels.StarRate == fno));
                    });
                    $('#RatingCount0').text(FinalHotels.length);
                    if (FinalHotels.length == 0) {
                        $("#dlSortOrder").hide();
                    }
                    else {
                        $("#dlSortOrder").show();
                    }
                    break;
              }



         //   totalrecords = StarSortedOutPutResult.Results.length;

    }
</script>
@*
    <script type='text/javascript'>

        $("#mapview").one("click", function () {
            $.getScript("http://maps.google.com/maps/api/js?sensor=false&callback=MapApiLoaded");
        });
        function MapApiLoaded() {

            var richmarker_url = "Scripts/richmarker-compiled.js";
            $.getScript(richmarker_url, function () {

                var map;
                var bounds = new google.maps.LatLngBounds();
                var mapOptions = {
                    mapTypeId: google.maps.MapTypeId.ROADMAP,
                };

                // Display a map on the page
                map = new google.maps.Map($('.map_canvas').get(0), mapOptions);

                // Multiple Markers

                var markers = [
                           //[Title/Name, Address, Latitude, Longitude, URL to listing, Price, Star Rating]
                           ['The Lemon Grass', '18th Cross Road, Koramangala', 51.5034128, -0.11952, 'index.html', 5300, 2],
                           ['Palace of Westminster', 'Chinnappa Road, Bengaluru', 51.49951, -0.124749, 'search.html', 2300, 5]
                ];


                // Display multiple markers on a map
                var marker, i;

                // Loop through our array of markers & place each one on the map
                for (i = 0; i < markers.length; i++) {
                    var position = new google.maps.LatLng(markers[i][2], markers[i][3]),
                        star;
                    bounds.extend(position);

                    switch (markers[i][6]) {
                        case 1:
                            star = '<i class="glyphicon glyphicon-star st-active"></i>' +
                                '<i class="glyphicon glyphicon-star"></i>' +
                                '<i class="glyphicon glyphicon-star"></i>' +
                                '<i class="glyphicon glyphicon-star"></i>' +
                                '<i class="glyphicon glyphicon-star"></i>';
                            break;
                        case 2:
                            star = '<i class="glyphicon glyphicon-star st-active"></i>' +
                                '<i class="glyphicon glyphicon-star st-active"></i>' +
                                '<i class="glyphicon glyphicon-star"></i>' +
                                '<i class="glyphicon glyphicon-star"></i>' +
                                '<i class="glyphicon glyphicon-star"></i>';
                            break;
                        case 3:
                            star = '<i class="glyphicon glyphicon-star st-active"></i>' +
                                '<i class="glyphicon glyphicon-star st-active"></i>' +
                                '<i class="glyphicon glyphicon-star st-active"></i>' +
                                '<i class="glyphicon glyphicon-star"></i>' +
                                '<i class="glyphicon glyphicon-star"></i>';
                            break;
                        case 4:
                            star = '<i class="glyphicon glyphicon-star st-active"></i>' +
                                '<i class="glyphicon glyphicon-star st-active"></i>' +
                                '<i class="glyphicon glyphicon-star st-active"></i>' +
                                '<i class="glyphicon glyphicon-star"></i>' +
                                '<i class="glyphicon glyphicon-star"></i>';
                            break;
                        case 5:
                            star = '<i class="glyphicon glyphicon-star st-active"></i>' +
                                '<i class="glyphicon glyphicon-star st-active"></i>' +
                                '<i class="glyphicon glyphicon-star st-active"></i>' +
                                '<i class="glyphicon glyphicon-star st-active"></i>' +
                                '<i class="glyphicon glyphicon-star st-active"></i>';
                            break;
                        default:
                            star = '<i class="glyphicon glyphicon-star"></i>' +
                                '<i class="glyphicon glyphicon-star"></i>' +
                                '<i class="glyphicon glyphicon-star"></i>' +
                                '<i class="glyphicon glyphicon-star"></i>' +
                                '<i class="glyphicon glyphicon-star"></i>';
                    }

                    marker = new RichMarker({
                        position: position,
                        map: map,
                        title: markers[i][0],
                        content: '<div class="marker text-center">' +
                            '<a href="' + markers[i][4] + '" target="_blank" class="border-radius">' +
                            '<div class="tilt"><div class="whitetext number">' + (i + 1) + '</div></div>' +
                            '<div class="whitetext price"><i class="fa fa-rupee"></i>' + markers[i][5] + '</div>' +
                            '<span class="star">' + star + '</span>' +
                            '<div class="info_content">' +
                            '<h4>' + markers[i][0] + '</h4>' +
                            '<p>' + markers[i][1] + '</p>' +
                            '</div>' +
                            '</a>' +
                            '<div class="indicator"></div>' +
                            '</div>',
                        shadow: false
                    });

                    // Automatically center the map fitting all markers on the screen
                    map.fitBounds(bounds);
                }

                // Override our map zoom level once our fitBounds function runs (Make sure it only runs once)
                var boundsListener = google.maps.event.addListener((map), 'bounds_changed', function (event) {
                    this.setZoom(14);
                    google.maps.event.removeListener(boundsListener);
                });

                // Enable the visual refresh
                google.maps.visualRefresh = true;
            });
        }
    </script> *@
<script type='text/javascript'>
    var rateMax = 0;
    var rateMin = 0;

    $(function () {
        // MapApiLoaded();
        $('#pricerange').slider({
            formater: function (value) {
                //  $("#pricerangelbl").val(' Rs. ' + value + ' ');

                return ' Rs. ' + value + ' ';


            }
        }).on("slideStop", function () {
            var ranges = $('#pricerange').val().split(",");

            $("#rangeBudgetMax").val(ranges[1]);
            $("#rangeBudgetMin").val(ranges[0]);

            $("#pricerangelbl").html("(" + ranges[0] + "-" + ranges[1] + ")");
            makeFilterBoxes();

            rateMax = ranges[1];

            rateMin = getActualMax(ranges[0]);

            var sortedData =FilterbyStarRating(selected,LocationsSelected);


        });
        $('#distancekm').slider({
            formater: function (value) {
                return value + ' KM';
            }
        }).on("slideStop", function () {
            $("#distanceInKm").val($('#distancekm').val());
            $("#Distancekmlbl").html("(" + $('#distancekm').val()+' KM)');
            makeFilterBoxes();
        });

        $('#star_slider').slider({
            formater: function (value) {
                return value;
            }
        }).on("slideStop", function () {
            $("#starRatingRange").val($('#star_slider').val());
            $("#Starratinglbl").html("(" + $('#star_slider').val() + ")");
            makeFilterBoxes();
        });
    //    resetFilters();

        $('#pricerange').slider('setValue', [500, 8000]);
        $('#distancekm').slider('setValue', 15);
        $('#star_slider').slider('setValue', 4);
    });
    function makeFilterBoxes()
    {
        showFilterBoxes();
        $("#CurrentPage").val(1);
   //     //debugger;;
      //  $.post('@(Url.Action("ApplyFilter","Search"))', $("#searchform").serialize(), function (data) { $("#resultlisting").html(data); });
    }
    function showFilterBoxes()
    {
        var htl = "";
        var temps = "";
        $("#filterbox").html("");
        temps = $("#rangeBudgetMax").val();
        if (temps != "0" && temps != "") {
            htl = htl + "<a href='#' onclick='resetFilter(1)' class='whitetext greybg border-radius'>Price Range<i class='fa fa-times redtext'></i></a> ";
        }
        temps = $("#distanceInKm").val();
        if (temps != "0" && temps != "") {
            htl = htl + "<a href='#' onclick='resetFilter(2)' class='whitetext greybg border-radius'>Distance<i class='fa fa-times redtext'></i></a> ";
        }
        temps = $("#starRatingRange").val();
        if (temps != "0" && temps != "") {
            htl = htl + "<a href='#' onclick='resetFilter(3)' class='whitetext greybg border-radius'>Star Rating<i class='fa fa-times redtext'></i></a> ";
        }
        temps = $("#beds").val();
        if (temps != "0" && temps != "") {
            htl = htl + "<a href='#' onclick='resetFilter(4)' class='whitetext greybg border-radius RemoveBedroomsIcon' >Bedrooms<i class='fa fa-times redtext RemoveBedroomsIcon'></i></a> ";
         }
        temps = $("#features").val();
        if (temps != "") {
            htl = htl + "<a href='#' onclick='resetFilter(5)' class='whitetext greybg border-radius'>Features<i class='fa fa-times redtext'></i></a> ";
        }
        $("#filterbox").html(htl);
    }
    function resetFilter(type) {
        switch(type)
        {
            case 1:
                resetPriceRange();
                break;
            case 2:
                resetKMRange();
                break;
            case 3:
                resetStarRating();
                break;
            case 5:
                resetAmenities();
                break;
            case 4:
                resetRooms();
                break;
        }
        makeFilterBoxes();
    }
    function getBooking(propid) {
        $("#PropertyId").val(propid);
        frm = document.getElementById("searchform");
        //   form.target = '_blank';
        frm.action = '@Url.Action("Property","Property")';
        frm.submit();
    }
    function findMinMax(arr) {

        let min = arr[0].Amount, max = arr[0].Amount;

        for (let i = 1, len = arr.length; i < len; i++) {
            let v = arr[i].Amount;
            min = (v < min) ? v : min;
            max = (v > max) ? v : max;
        }
        rateMin = min;
        rateMax = getActualMax(max);

        $("#rangeBudgetMax").val(rateMax);
        $("#rangeBudgetMin").val(rateMin);
        $("#pricerange").attr("data-slider-min",rateMin);
        $("#pricerange").attr("data-slider-max",rateMax);

        $("#iPriceRangeMin").text(rateMin);
        $("#iPriceRangeMax").text(rateMax);

        return [min, max];
    }

    function getActualMax(maxAmount)
    {
        //debugger;
        var eamount = 0;
   //     alert(MainResultList.Results[0].MaximumDailyEntitlement);
        if (MainResultList.Results[0].MaximumDailyEntitlement > 0)
        { eamount = MainResultList.Results[0].MaximumDailyEntitlement; }
        if (IsMaximumDailyEntitlement && maxAmount > eamount && eamount != 0)
        {
            return eamount;
        }
        return maxAmount;
    }

</script>
<script type='text/javascript'>
    var IsPaging=false;
    var totalrecords=0;
    var PagerParam='';
    var paramCriteria='';
    var MainRows=0;
    var AmadeusRows=0;
    var StartPageNumber=1;
    var NoofRecordsPerPage=200;
    var FinalResult = {};
    var ResultList = new Object();
    var gdsxhr;
    var gdsxhrMore;
    var localxhr;
    var searchama = false;
    var searchamaMore = false;
    var searchlocal = false;
    var IsFilter = false;
    var SortedList = [];
    var FilterResult = [];
    var GDSSearchCount = 1;
    var IsMaximumDailyEntitlement = true;
    var SortStringHeader = '';

    var MainResultList = new Object();

    $(document).ready(function () {

        $("#dvResults").html("");
        LoadHotels();




        //if(IsPaging==true)
        //{
        //    PagedHotelResults();
        //}

        $("#btndvNoEntitlement").click(function (e) {
   //         debugger;
            IsMaximumDailyEntitlement = false;

          //  var result1 = GenerateResultString(SortedOutPutResult, paramCriteria);
            $("#dvResults").html('');
      //      $("#dvNoEntitlement").css("display", "none");
            $("#btndvNoEntitlement").hide();

                $("#dvNoEntitlement").removeClass("SetEntitlement");
                $("#dvNoEntitlement").addClass("RemoveEntitlement");

         //  sortOrderChange();
         //       ShowAllHotels();
        //    var url = "/search/Index" + "?Destination=" + $("#Destination").val() + "&CheckIn=" + $("#CheckIn").val() + "&CheckOut=" + $("#CheckOut").val() + "&Adults=" + $("#Adults").val() + "&Children=" + $("#Children").val() + "&BedRooms=" + $("#BedRooms").val() + "&StayType=" + $("#StayType").val() +"&Entitlement=1";
        //    window.location.href = url;

        });


        $('.Pager').click(function(e) {
            //alert(1);
        });

        $("#dlSortOrder").change(function(){


        });
    });

    function ShowAll()
    {
        //debugger;
        resetFilters();
        IsMaximumDailyEntitlement = false;

        //  var result1 = GenerateResultString(SortedOutPutResult, paramCriteria);
        $("#dvResults").html('');
        //      $("#dvNoEntitlement").css("display", "none");
        $("#btndvNoEntitlement").hide();

        $("#dvNoEntitlement").removeClass("SetEntitlement");
        $("#dvNoEntitlement").addClass("RemoveEntitlement");
        ShowAllHotels();
        //  sortOrderChange();
    //    var url =window.location.origin+ "/search/Index" + "?Destination=" + $("#Destination").val() + "&CheckIn=" + $("#CheckIn").val() + "&CheckOut=" + $("#CheckOut").val() + "&Adults=" + $("#Adults").val() + "&Children=" + $("#Children").val() + "&BedRooms=" + $("#BedRooms").val() + "&StayType=" + $("#StayType").val() + "&Entitlement=1";
      //  window.location.href = url;
    }
    function SetLoadMore()
    {
      debugger;
      //  StopHotelLoading();

        selected = [];
        $('#dvStarRatings input:checked').each(function () {
            selected.push($(this).attr('value'));
        });
        LocationsSelected = [];
        if (LocationCount > 10) {
            $('#dvLocationsMore input:checked').each(function () {
                LocationsSelected.push($(this).attr('value'));
            });
        }
        else {
            $('#dvLocations input:checked').each(function () {
                LocationsSelected.push($(this).attr('value'));
            });
        }


       var sortedData = FilterbyStarRatingMore(selected,LocationsSelected);
        var OutPutResult1 =[];
          OutPutResult1.Results = [];
            for (var i in sortedData) {
                OutPutResult1.Results.push(sortedData[i]);
            }
        var totalrecords = OutPutResult1.Results.length;
            StartPageNumber = StartPageNumber + 1;

            var AdvancedPages = (totalrecords % NoofRecordsPerPage) > 0 ? 1 : 0;
            var noofpages = parseInt((totalrecords / NoofRecordsPerPage)) + AdvancedPages;
            if (StartPageNumber == noofpages) {
                // NoofRecordsPerPage= parseInt((totalrecords % NoofRecordsPerPage));
                $('#btnLoadMore').hide();
            }
            var OutPutResult = $('#dvResults').html();


          //  var OutPutList = OutPutResult + GenerateResultString(ResultList, paramCriteria);
            var OutPutList = OutPutResult + GenerateResultString(OutPutResult1, paramCriteria);
            $('#dvResults').html(OutPutList);


    }
    function onlyUnique(value, index, self) {
        return self.indexOf(value) === index;
    }
    function SetLocations(pArray)
    {
    //    //debugger;;

         var sampleTags = new Array();
         var arrayList =[];
         for (var i = 0; i < pArray.length; i++)
         {
             if (pArray[i].LocationName != "")
             {
                 arrayList.push(pArray[i].LocationName);
             }

         }
       //  arrayList = arrayList.unique
         //var uniqueNames = [];
         //$.each(arrayList, function (i, el) {
         //    if ($.inArray(el, uniqueNames) === -1) uniqueNames.push(el);
         //});
         var uniqueNames = arrayList.filter(onlyUnique);
         uniqueNames = uniqueNames.sort();
         LocationCount = uniqueNames.length;

        var subvar = '';
        var myvar = '<dl>';
        myvar = myvar+'<dt></dt>';
        var slno = 1;
        for (var i = 0; i < uniqueNames.length; i++) {
            var id = 'fb' + slno;

            subvar = subvar +'<dd class="styledcheckbox">';
            subvar = subvar + '<input class="css-checkbox Locationchk" type="checkbox" data-internal-id="' + id + '"  id="' + id + '" name="' + id + '" value="' + uniqueNames[i] + '" onclick="javascript:chkStar(1);" />';
              subvar = subvar + '<label for="' + id +'" class="css-label">' + uniqueNames[i]+'</label>';
              subvar = subvar + '</dd>';
              slno++;
        }
        myvar = myvar + subvar + '<dt></dt>';
        myvar = myvar + '</dl>';
        if (uniqueNames.length > 10)
        {
            $('#dvLocationsMoreMain').show();
            $('#dvLocationsMain').hide();
            $('#dvLocationsMore').html("");
            $('#dvLocationsMore').html(myvar);

        }
        else {
            $('#dvLocationsMain').show();
            $('#dvLocationsMoreMain').hide();
            $('#dvLocations').html("");
            $('#dvLocations').html(myvar);

        }


    }
    function LoadHotels()
    {
        $("#loadingheader").fadeIn(4000);
   //     $("#loadingheader").height(80);
        $("#resultlistLoading").fadeIn(4000);
        var MainResult;
        var SearchResult = '';

        var pAdults=@ViewBag.Adults;
        var pDestination='@ViewBag.Destination';
        var pBedRooms=@ViewBag.Bedrooms;
        var pCheckIn='@ViewBag.CheckIn';
        var pCheckOut='@ViewBag.CheckOut';
        var pChildren=@ViewBag.Children;
        var pStayType=@ViewBag.StayType;
        var pRangeBudgetMaximum=@sm.rangeBudgetMax.ToString();
        var pstarRatingRange=@sm.starRatingRange.ToString();
        var pBeds=@sm.beds;
        var pDistanceinKm =@sm.distanceInKm;

        //var url = "/Search/Index" + "?Destination=" + $("#Destination").val() + "&CheckIn=" + $("#CheckIn").val() + "&CheckOut=" + $("#CheckOut").val() + "&Adults=" + $("#Adults").val() + "&Children=" + $("#Children").val() + "&BedRooms=" + $("#BedRooms").val() + "&StayType=" + $("#StayType").val();
        //window.location.href = url;

         paramCriteria = "&adults=" + pAdults + "&destination=" + pDestination + "&checkIn=" + pCheckIn + "&checkout=" + pCheckOut + "&children=" + pChildren + "&staytype=" + pStayType + "&bedrooms=" + pBedRooms + "&rangebudgetmax=" + pstarRatingRange + "&rangebudgetmin=" + pRangeBudgetMaximum + "&starratingrange=" + pstarRatingRange + "&beds=" + pBeds + "&distanceInKm=" + pDistanceinKm;


        var AmadusResult = {};
        var HotelResult = {};
        //var FinalResult = {};
        var Timer;

        var jsons = new Array();


        var amadeusResultCallback = false;
        var MainResultCallback = false;
        //var MainRows=0;
        //var AmadeusRows=0;
        if (searchlocal && localxhr != null) { localxhr.abort(); }
            searchlocal = true;

        localxhr= $.ajax({
            type: "GET",
            url: "/search/Index1",
            data: { Destination: pDestination, CheckIn: pCheckIn, CheckOut: pCheckOut, Adults: pAdults, Children: pChildren, BedRooms: pBedRooms },
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                MainRows=result.Results.MaxCount;

                HotelResult = result.Results.Results;
                var SortBy;
                var SortDirection;
                switch($("#dlSortOrder").val())
                {

                    case 1:
                        SortBy="DistanceInKm";
                        SortDirection="Ascending"
                        break;
                    case 2:
                        SortBy="Amount";
                        SortDirection="Descending"
                        break;
                    case 3:
                        SortBy="Amount";
                        SortDirection="Ascending"
                        break;
                    default:
                        SortBy="Amount";
                        SortDirection="Ascending"
                        break;

                }


                HotelResult=SortData(HotelResult,SortBy,SortDirection);

                jsons.push(HotelResult);
                MainResultCallback = true;
                if ((amadeusResultCallback == true) && (MainResultCallback == true)) {
                    FinalResult = JSON.parse(JSON.stringify(jsons))


                }
                searchlocal = false;

            },
            error: function (response) {
                MainResultCallback = false;
                event.preventDefault();

            }
        })

        if (searchama && gdsxhr != null) { gdsxhr.abort(); }
        searchama = true;

        gdsxhr=$.ajax({
            type: "GET",
            url: "/search/GetAmadeusHotels",
            data: { Destination: pDestination, CheckIn: pCheckIn, CheckOut: pCheckOut, Adults: pAdults, Children: pChildren, BedRooms: pBedRooms },
            contentType: "application/text;charset=utf-8",
            dataType: "json",
            success: function (result) {
                AmadusResult = result.Results.Results;

                AmadusResult=SortData(AmadusResult,"Amount","Ascending");
                var x=result;
                AmadeusRows= result.Results.MaxCount;

                json1 = AmadusResult;
                json2 = HotelResult;

                var jsonlist = [];
                for (var i in AmadusResult) {
                    jsonlist.push(AmadusResult[i]);
                    //alert(jsonlist.push(AmadusResult[i]))
                }
                for (var i in HotelResult) {
                    jsonlist.push(HotelResult[i]);
                }

                amadeusResultCallback = true;
                if ((amadeusResultCallback == true) && (MainResultCallback == true)) {
                    FinalResult = jsonlist;

                 //   alert(JSON.stringify(FinalResult));

                    //var ResultList = new Object();
                    ResultList.Results=[];
                    for (var i in FinalResult) {
                        ResultList.Results.push(FinalResult[i]);
                    }
                    ResultList.CurrentPageIndex=1;
                    ResultList.Destination=pDestination;
                    ResultList.IsSearched=true;
                    ResultList.MaxCount=AmadeusRows+MainRows;
                    totalrecords = ResultList.Results.length;


                //    //debugger;;
                    SortedOutPutResult = ResultList;
                    MainResultList.Results = [];

                    for (var i in ResultList.Results) {
                        MainResultList.Results.push(ResultList.Results[i]);
                        //debugger;
                        //alert(ResultList.Results[i].HotelID)

                    }
                 //   debugger;
                    // Construct html over here

                    for (var i = 0; i <= 5; i++) {
                        SetRateCount(i);
                    }
                    if (ResultList.Results.length > 0) {
                        findMinMax(ResultList.Results);
                        //       //debugger;;
                        SetLocations(ResultList.Results);

                    }



                    $("#hdLoadRecords").val(JSON.stringify(ResultList.Results));

                    var OutPutHeader=GenerateResultHeader(ResultList);
                    var OutPutPagerHeader=GeneratePagerHeader(ResultList);
                  //  var OutPutSortString=GenerateSortString();
                 //   debugger;

                    //karthikms comment on 21-11-2019
                    //var OutputHtmlString='<div class="col-xs-12 col-md-12 tab-content searchviewctr">';
                    var OutputHtmlString = '<div>';
                    //karthikms comment on 21-11-2019
                    //OutputHtmlString = OutputHtmlString + '<div class="col-xs-12 col-md-12 tab-pane fade in active" id="home">';
                    OutputHtmlString = OutputHtmlString + '<div>';

                    var OutPut = GenerateResultString(ResultList, paramCriteria);
                    var OutPutSortString = SortStringHeader;

                    OutputHtmlString=OutPutHeader+OutputHtmlString+OutPutPagerHeader+OutPutSortString;


                    //karthikms comment on 21-11-2019
                    //var OutPutList = OutputHtmlString + '<div class="listsctr"><div id="dvResults">' + OutPut +'</div></div>';
                    var OutPutList = OutputHtmlString + '<div><div id="dvResults">' + OutPut + '</div></div>';


                    var OutPutPageFooter=GeneratePagerFooter(ResultList);
                    var OutPutLoadMore=GenerateLoadMore();

                    var Footer='<div class="col-md-12 tab-pane fade" id="profile"><div class="map_canvas" style="display:none"></div></div></div>';

                    OutPutList = OutPutList + OutPutPageFooter + Footer;



                    $("#loadingheader").fadeOut(1000);
                    $("#resultlistLoading").fadeOut(1000);

                    $('#loading').hide();
                    $(document.body).removeClass('body-no-scroll');
            //        debugger;
                    $('#resultlisting').html(OutPutList);
                    $("#spTitle").text(totalrecords);
                    if (IsMaximumDailyEntitlement == true)
                    {
                        $("#spEntitlement").text('(Only properties within your daily entitlement are listed below.)')
                    }
                    else
                    {
                        $("#spEntitlement").text('');
                    }

                    IsPaging=true;

                    if(totalrecords<=NoofRecordsPerPage)
                    {
                        $('#btnLoadMore').hide();
                    }

                    //debugger;;
                    //search more hotels
                    var SessionID = result.Results.SessionID;
                    //alert(result.Results.SessionID);
                    var SecurityToken = result.Results.SecurityToken;
                    var SequenceNumber = result.Results.SequenceNumber;
                    var Moreindicator = result.Results.Moreindicator;
                    if (Moreindicator != undefined)
                    {
                        if (Moreindicator != "") {
                            LoadMoreHotels(Moreindicator, SessionID, SequenceNumber, SecurityToken);
                        }
                    }


                   // search more hotels end

                }
                searchama = false;
            },
            error: function (response) {
                amadeusResultCallback = true;
                event.preventDefault();
            }
        });
    }
    function PagedHotelResults()
    {

        var ResultList = new Object();
        ResultList.Results=[];
        for (var i in FinalResult) {
            ResultList.Results.push(FinalResult[i]);
        }
        ResultList.CurrentPageIndex=1;
        ResultList.Destination='@ViewBag.Destination';
        ResultList.IsSearched=true;
        ResultList.MaxCount=AmadeusRows+MainRows;

        // Construct html over here

        var OutPutHeader=GenerateResultHeader(ResultList);
        var OutPutPagerHeader=GeneratePagerHeader(ResultList);
        var OutPutSortString=GenerateSortString();

        var OutputHtmlString='';//<div class="col-xs-12 col-md-12 tab-content searchviewctr">';
        OutputHtmlString='<div class="col-xs-12 col-md-12 tab-pane fade in active" id="home">';
        OutputHtmlString=OutputHtmlString+OutPutPagerHeader+OutPutSortString;

        var totalrecords = ResultList.Results.length;
        var noofrecords = 15;
        var AdvancedPages = (totalrecords % noofrecords) > 0 ? 1 : 0;
        var noofpages = parseInt((totalrecords / noofrecords)) + AdvancedPages;
        var pagennum=1;

        if(totalrecords>noofrecords)
        {
            a = $('.Pager').bootpag({
                total:noofpages
            }).on("page", function (event, num) {
                pagennum=num;
                var OutPutList=GenerateResultHtml(ResultList,paramCriteria,totalrecords,pagennum,noofrecords)

                $("#dvResults").html('');
                $("#dvResults").html(OutPutList);
                event.preventDefault();

                $(this).bootpag({ total: noofpages, maxVisible: noofpages });
            });
        }

    }
    function LoadHotelResults(Pagenumber)
    {

        var ResultList = new Object();
        ResultList.Results=[];
        for (var i in FinalResult) {
            ResultList.Results.push(FinalResult[i]);
        }
        ResultList.CurrentPageIndex=1;
        ResultList.Destination='@ViewBag.Destination';
        ResultList.IsSearched=true;
        ResultList.MaxCount=AmadeusRows+MainRows;


        var totalrecords = ResultList.Results.length;
        var noofrecords = 15;
        var AdvancedPages = (totalrecords % noofrecords) > 0 ? 1 : 0;
        var noofpages = parseInt((totalrecords / noofrecords)) + AdvancedPages;

        if(totalrecords>noofrecords)
        {

            var OutPutList=GenerateResultHtml(ResultList,paramCriteria,totalrecords,Pagenumber,noofrecords)

                $("#dvResults").html('');
                $("#dvResults").html(OutPutList);
                event.preventDefault();
        }
        else{

        }

    }
    function SortData(JsonList,sortby,sortdirection) {

        var array = JsonList;
        var Sorted1 = array.sort(GetSortOrder(sortby)); //Pass the attribute to be sorted on
        if(sortdirection=="Descending")
        {
            Sorted1 = Sorted1.reverse();
        }

        return Sorted1;
    }
    function RemoveDuplicates(JsonList) {
        var objColl = JsonList; //JSON.parse("JSON string");
        var collection = [];

        $.each(json_all, function (index, value) {
            if ($.inArray(value.Title, arr) == -1) { //check if id value not exits than add it
                arr.push(value.Title);//push id value in arr
                collection.push(value); //put object in collection to access it's all values
            }
        });
        return collection;
    }
    function GetSortOrder(prop) {
        return function (a, b) {
            if (a[prop] > b[prop]) {
                return 1;
            } else if (a[prop] < b[prop]) {
                return -1;
            }
            return 0;
        }
    }
    function GenerateSortString()
    {
        var myvar = '<div class="col-md-5 pad0 styleselect2ctr" >' +
            '<span class="ubtn-group">' +
            '  <div  id="dvNoEntitlement" class="RemoveEntitlement"><button type="button" class="redbg whitetext"  id="btndvNoEntitlement"  style="text-align:center;height: 32px;" data-toggle="tooltip" title="Display all, Including my entitlement" onclick="ShowAll()">Show all</button></div>' +
'                    <select class="styleselect2" id="dlSortOrder" onchange="sortOrderChange()">'+
'                        <option selected="selected" value="2">Price Low to High</option>'+
'                        <option value="3">Price High to Low</option>'+

''+
'                    </select>'+
           ' </span>' +
'                    <select class="styleselect2 hidden" id="srchcur" onchange="seraConv()">'+
'                        <option value="USD">USD</option>'+
'                        <option value="EUR">EUR</option>'+
'                        <option value="GBP">GBP</option>'+
'                    </select>'+
''+
'                </div>';

        return myvar;
    }
    function GenerateSortStringWithEntitlement() {
        var myvar = '<div class="col-md-5 pad0 styleselect2ctr" >' +
            '<span class="ubtn-group">' +
            '  <div  id="dvNoEntitlement" class="SetEntitlement"><button type="button" class="redbg whitetext"  id="btndvNoEntitlement"  style="text-align:center;height: 32px;" data-toggle="tooltip" title="Display all, Including above my entitlement" onclick="ShowAll()">Show all</button></div>' +
            '                    <select class="styleselect2" id="dlSortOrder" onchange="sortOrderChange()">' +
            '                        <option selected="selected" value="2">Price Low to High</option>' +
            '                        <option value="3">Price High to Low</option>' +

            '' +
            '                    </select>' +
            ' </span>' +
            '                    <select class="styleselect2 hidden" id="srchcur" onchange="seraConv()">' +
            '                        <option value="USD">USD</option>' +
            '                        <option value="EUR">EUR</option>' +
            '                        <option value="GBP">GBP</option>' +
            '                    </select>' +
            '' +
            '                </div>';

        return myvar;
    }
    function GenerateResultHeader(ResultItem)
    {
        //alert(totalrecords);
        ////debugger;;
        var city = ResultItem.Destination;
        totalrecords = ResultItem.Results.length;
        var myvar ='<h4 class="search-results-title"><i class="soap-icon-search"></i><b>' + totalrecords + '</b> results found in ' + city + ' </h4>';
//        var myvar = '<div class="col-md-12 selectionctr fullwidth pull-left">'+
//'            <div class="whitebg fullwidth pull-left border-radius lightgreybg padding10px" >'+
//'                <p class="col-md-12">'+
//            '                </p><p id="pTitle"><span id="spTitle" style="font-weight:bold">' + totalrecords + '</span> Properties found in ' + city +'</p><span id="spEntitlement"></span><div class="col-md-8 filter" id="filterbox"></div>'+
//'                <ul class="nav nav-tabs col-md-4 searchview nav-pills text-center border-radius whitebg" style="display:none">'+
//'                    <li class="active" style="display:none">'+
//'                        <a href="#home" data-toggle="tab">'+
//'                            <i class="glyphicon glyphicon glyphicon-list"></i>List View'+
//'                        </a>'+
//'                    </li>'+
//'                    <li style="display:none">'+
//'                        <a href="#profile" id="mapview" data-toggle="tab">'+
//'                            <i class="glyphicon glyphicon-map-marker"></i>Map View'+
//'                        </a>'+
//'                    </li>'+
//'                </ul>'+
//'            </div>'+
//'        </div>';
        return myvar;

    }
    function GeneratePagerHeader(ResultItem)
    {
        var myvar='<div class="col-md-7 pad0" id="dvPagingHeader"><p class="PagerHeader Pager"></p></div>';
        //var myvar = '<div class="col-md-7 pad0" >'+
        //''+
        //'                    <ul class="pagination"><li class="disabled"><a href="#">«</a></li><li class="active"><a href="#" onclick="SearchPager(1)">1</a></li><li><a href="#" onclick="SearchPager(2)">2</a></li><li><a href="#" onclick="SearchPager(3)">3</a></li><li><a href="#" onclick="SearchPager(4)">4</a></li><li><a href="#" onclick="SearchPager(5)">5</a></li><li><a href="#" onclick="SearchPager(6)">6</a></li><li><a href="#" onclick="SearchPager(7)">7</a></li><li><a href="#" onclick="SearchPager(2)">»</a></li></ul>'+
        //'                </div>';

        return myvar;
    }
    function GeneratePagerFooter(ResultFooter)
    {
        //var myvar = '<div class="col-md-12" id="dvPagingFooter"><p> <button type="button" id="btnLoadMore" onclick="SetLoadMore()">Load more.. </button></p></div>';
        var myvar='<div class="col-md-12 pad0 text-center" id="dvPagingFooter"><p class="PagerHeader Pager"> <button type="button" class="redbg whitetext"  id="btnLoadMore" onclick="SetLoadMore()">Load more.. </button></p></div>';
//        var myvar = '<div class="col-md-12 pad0 paginator">'+
//''+
//'                    <ul class="pagination"><li class="disabled"><a href="#">«</a></li><li class="active"><a href="#" onclick="SearchPager(1)">1</a></li><li><a href="#" onclick="SearchPager(2)">2</a></li><li><a href="#" onclick="SearchPager(3)">3</a></li><li><a href="#" onclick="SearchPager(4)">4</a></li><li><a href="#" onclick="SearchPager(5)">5</a></li><li><a href="#" onclick="SearchPager(6)">6</a></li><li><a href="#" onclick="SearchPager(7)">7</a></li><li><a href="#" onclick="SearchPager(2)">»</a></li></ul>'+
        //'                </div>';

        return myvar;
    }
    function GenerateLoadMore()
    {

        var LoadMore='<div class="col-md-12 pad0"><div class="col-xs-6 col-md-6 text-right pad0" id="dvLoadMore"><button type="button" class="redbg whitetext"  id="btnLoadMore" >Load more..</button></div></div>';
        return LoadMore;
    }

    function GenerateResultString(ResultItem,param)
    {

     //  debugger;;
        //FinalHotels = myfilter(ResultItem.Results, function (Hotels) {
        //    return ((Hotels.Amount >= 10000));
        //});
        //ResultItem.Results = [];
        //for (var i in FinalHotels) {
        //    ResultItem.Results.push(FinalHotels[i]);
        //}
        //totalrecords = ResultItem.Results.length;



        var Uid =@userid;
        var Entitlementdata = '@this.Request.QueryString["Entitlement"]';

     //   $("#hdMainRecords").val(JSON.stringify(ResultItem.Results));

        //MainResultList.Results = [];
        //for (var i in ResultItem.Results) {
        //    MainResultList.Results.push(ResultItem.Results[i]);
        //}

      //  SortedOutPutResultEntitlement = ResultItem;
        if ((Uid > 0) && (IsMaximumDailyEntitlement == true) && (Entitlementdata!=1))
        {

            if (ResultItem.Results.length > 0)
            {
                $("#hdMainRecords").val("0");

                MaximumDailyEntitlement = @MaximumEntitlement; //ResultItem.Results[0].MaximumDailyEntitlement > 0 ? ResultItem.Results[0].MaximumDailyEntitlement : 0;
                if (MaximumDailyEntitlement > 0) {
                    ResultList.Results = ResultList.Results.filter(f => f.Amount <= MaximumDailyEntitlement);

                    totalrecords = ResultList.Results.length;
                    $("#spTitle").text(totalrecords);
                    //   ResultList.Results.MaxCount = totalrecords;
                   // if (totalrecords > 0) {

                            $("#dvNoEntitlement").toggleClass("RemoveEntitlement",false);
                            $("#dvNoEntitlement").toggleClass("SetEntitlement",true);
                         //   $("#dvNoEntitlement").show();
                            SortStringHeader = GenerateSortStringWithEntitlement();

                    //}
                    //else {

                    //  $("#dvNoEntitlement").toggleClass("SetEntitlement",false);
                    //  $("#dvNoEntitlement").toggleClass("RemoveEntitlement", true);
                    //  SortStringHeader = GenerateSortString();

                    // //   $("#dvNoEntitlement").hide();
                    //    $("#spEntitlement").text('');
                    //}
                }
            }


        }
        else
        {
            IsMaximumDailyEntitlement = false;
            MaximumDailyEntitlement = 0;
      //      $("#dvNoEntitlement").css("display", "none");
            $("#dvNoEntitlement").toggleClass("SetEntitlement", false);
            $("#dvNoEntitlement").toggleClass("RemoveEntitlement", true);
            SortStringHeader = GenerateSortString();
      //      $("#dvNoEntitlement").hide();

            $("#spEntitlement").text('');
        }

   //     ResultList.Results = SortData(ResultList.Results, "EntitlementOrder", "Descending");
        ResultList.Results = sortfinal(ResultList.Results, [{ InventoryAPIType: 'desc' }, { Amount: 'asc' }]);




        var ResultString='';
        var sparam = param;
  //      //debugger;;
        if (ResultItem.Results.length > 0)
        {
            var GDSCurrencyCode = ResultItem.Results[0].GDSCurrencyCode;
            var GDSRateConversion = ResultItem.Results[0].GDSRateConversion;

            sparam = sparam + "&gdscurrencycode=" + GDSCurrencyCode + "&gdsrateconversion=" + GDSRateConversion;

        }




        var blankimage = "/Images/no-image.jpg";
        var start = ((StartPageNumber-1) * NoofRecordsPerPage)+1;
        var end = (start + NoofRecordsPerPage)-1;
        if (end > totalrecords)
            end = (start + (totalrecords % NoofRecordsPerPage))-1;

        start=start-1;
        end = end - 1;
        var testimgsrc = "/Files/Property/testgdsimg.jpg";

        for (var i=start;i<=end;i++)
           //for (var i=0;i<ResultItem.Results.length;i++)
        {


            var Title = ResultItem.Results[i].Title;
            var imgFile = ResultItem.Results[i].ImageFile;
            var imgExists = ResultItem.Results[i].IsImageExists;
            var InventoryAPIType = ResultItem.Results[i].InventoryAPIType;
            var StarRate = ResultItem.Results[i].StarRate;
           var Rating = ResultItem.Results[i].StarRating;
            var HotelID = ResultItem.Results[i].HotelID;
            var APIType = ResultItem.Results[i].InventoryAPIType;
            var RateCardDetailedId = ResultItem.Results[i].RateCardDetailedId;
            var TaxPercentage = ResultItem.Results[i].TaxPercentage;
            var GSTSlab = ResultItem.Results[i].GSTSlab;
            var StateId = ResultItem.Results[i].StateId;
            var CityId = ResultItem.Results[i].CityId;
            var AccommodationTpeID = ResultItem.Results[i].AccommodationTpeID;
            var StayCategoryID = ResultItem.Results[i].StayCategoryID;
            var Amount = ResultItem.Results[i].Amount;
            var AmountWithTax = ResultItem.Results[i].AmountWithTax;
            var price = ResultItem.Results[i].price;
            var ResultIndex = ResultItem.Results[i].ResultIndex;
            var TraceID = ResultItem.Results[i].TraceID;
            //var ErrorCode = ResultItem.Results[i].ErrorCode;
            var Description = ResultItem.Results[i].Description;
            var InventoryAPIType = ResultItem.Results[i].InventoryAPIType;
            //var SessionID = ResultItem.Results[i].SessionID;
            //alert(result.Results.SessionID);

            if ((Rating == null) || (Rating == undefined)) {
                Rating = "";
            }

               Title=Title.replace("<","").replace(">","");
            //sparam = sparam + '&HotelID=' + HotelID + '&AccommodationTpeID=' + AccommodationTpeID + '&StayCategoryID=' + StayCategoryID + '&Amount=' + Amount + '&AmountWithTax=' + AmountWithTax + '&ResultIndex=' + ResultIndex + '&TraceID=' + TraceID + '&Description=' + Description;
            sparam = sparam + '&APIType=' + APIType ;/*+ APIType + '&RateCardDetailedId=' + RateCardDetailedId + '&TaxPercentage=' + TaxPercentage + '&GSTSlab=' + GSTSlab + '&StateId=' + StateId + '&CityId=' + CityId + '&price=' + price  ;*/
            ////alert(sparam);
            var PropertyIDParam = '/property/property?propertyid=' + ResultItem.Results[i].PropertyId + '&title=' + ResultItem.Results[i].Title +
            '&HotelID=' + ResultItem.Results[i].HotelID + '&AccommodationTpeID=' + ResultItem.Results[i].AccommodationTpeID + '&StayCategoryID=' + ResultItem.Results[i].StayCategoryID + '&Amount=' + ResultItem.Results[i].Amount + '&AmountWithTax=' + ResultItem.Results[i].AmountWithTax + '&ResultIndex=' + ResultItem.Results[i].ResultIndex + '&TraceID=' + ResultItem.Results[i].TraceID + '&Description=' + ResultItem.Results[i].Description
                + '&RateCardDetailedId=' + ResultItem.Results[i].RateCardDetailedId + '&TaxPercentage=' + ResultItem.Results[i].TaxPercentage + '&GSTSlab=' + ResultItem.Results[i].GSTSlab + '&StateId=' + ResultItem.Results[i].StateId + '&CityId=' + ResultItem.Results[i].CityId + '&price=' + ResultItem.Results[i].price + '&InventoryAPIType=' + ResultItem.Results[i].InventoryAPIType + sparam;
           //ResultString=ResultString+'<div class=\"col-md-12 listingbox\">\n' ;
           //ResultString=ResultString+'    <div class=\"listing\">\n' ;
           //ResultString=ResultString+'        <div class=\"col-md-4 pad0\">\n' ;
           //ResultString=ResultString+'            <a target=\'_blank\' href=\"'+PropertyIDParam+'\" onclick=\"\">\n' ;
           //ResultString=ResultString+'                <div class=\"img-thumb landscape\">\n' ;
           //if ((imgFile == "Empty") || (imgFile == undefined) || (imgFile == ""))
           //{
           //    ResultString =ResultString+'<img src=\"'+blankimage+'\" alt=\"'+ Title +'"\"/>\n' ;
           //}
           //else{
           //    var imgsrc =  "/Files/Property/" + ResultItem.Results[i].PropertyId + "/" + ResultItem.Results[i].ImageFile;
           //    if (InventoryAPIType == 4 || InventoryAPIType == 5)
           //    {
           //        imgsrc = "";
           //        imgsrc = ResultItem.Results[i].ImageFile;
           //    //    imgsrc = testimgsrc;


           //    }
           //    if ((imgFile == "") || (imgFile == blankimage) || (imgExists==false))
           //    {
           //        imgsrc = blankimage;
           //    }

           //    ResultString =ResultString+'<img src=\"'+imgsrc+'\" alt=\"'+ Title +'serviced apartment in  '+ResultItem.Results[i].Location +' '+ ResultItem.Results[i].City +'"\"/>\n' ;
           //}

           //ResultString=ResultString+'                </div>\n' ;
           //ResultString=ResultString+'            </a>\n' ;
           //ResultString=ResultString+'            <a href=#\"/property/index/'+ResultItem.Results[i].PropertyId+'\">\n' ;
           //ResultString=ResultString+'                <div class=\"price\">\n' ;
           var Amount =Math.round(ResultItem.Results[i].Amount);
     //      ResultString=ResultString+'<i class=\"fa cxprice fa-rupee\"></i><span class=\"cxcurele\"> '+ Amount +'</span>\n' ;
     //      ResultString=ResultString+'<p class=\"onwards whitetext\">onwards</p>\n' ;
     //      ResultString=ResultString+'                </div>\n' ;
     //      ResultString=ResultString+'            </a>\n' ;
     //      ResultString=ResultString+'        </div>\n' ;
     //      ResultString=ResultString+'        <div class=\"col-md-6 listingctr\">\n' ;
     ////      ResultString = ResultString + '            <span class=\"name\"><a onclick=\"getBooking(' + ResultItem.Results[i].PropertyId + ')\" class=\"mt\" target=\'_blank\' href=\"' + PropertyIDParam + '\">' + Title + '</a></span>\n';
     //      ResultString = ResultString + '            <span class=\"name\"><a  class=\"mt\" target=\'_blank\' href=\"' + PropertyIDParam + '\">' + Title + '</a></span>';
     //      if (Rating !="")
     //      {
     //          ResultString = ResultString + Rating + '\n';
     //      }
     //      else {
     //          ResultString = ResultString + '\n';
     //      }

     //      ResultString=ResultString+'            <div class=\"clear\">'+ResultItem.Results[i].Location+'</div>\n' ;
     //      ResultString=ResultString+'            <div class=\"mapnreview\">\n' ;
     //      ResultString=ResultString+'                <a target=\'_blank\' href=\"'+PropertyIDParam+'\" class=\"redtext\">\n' ;
     //      ResultString=ResultString+'<i class=\"glyphicon glyphicon-map-marker blacktext\"></i>Show on map\n' ;
     //      ResultString=ResultString+'                </a>\n' ;
     //      ResultString = ResultString +'                <a  target=\'_blank\' href=\"'+PropertyIDParam+'\" class=\"redtext review\">\n' ;
     //      ResultString=ResultString+'<i class=\"glyphicon glyphicon-user blacktext\"></i>Read reviews\n' ;
     //      ResultString=ResultString+'                </a>\n' ;
     //      if(ResultItem.Results[i].IsDistanceFromCity==true){
     //          ResultString=ResultString+'  <text>&nbsp;<a class=\"maxpinfo\" href="#" data-toggle="popover" data-placement="left"  data-content="If you are searching with  property name, distance shown is from nearest main city"><span class=\"glyphicon glyphicon-info-sign\"></span></a></text>\n';
     //      }
     //      ResultString=ResultString+'            </div>\n' ;
     //      ResultString=ResultString+'            <div>\n' ;
     //      ResultString=ResultString+'                <span class=\"trunc\">\n' ;
     //      ResultString=ResultString+''+ ResultItem.Results[i].Description +'\n' ;
     //      ResultString=ResultString+'<span class=\"truncate_ellipsis\"></span><span class=\"truncate_more\" style=\"display: none;\">       </span>\n' ;
     //      ResultString=ResultString+'                </span>\n' ;
     //      ResultString = ResultString + '                <a href=\"' + PropertyIDParam +'\" class=\"redtext\" target=\'_blank\'>more...</a>\n' ;
     //      ResultString=ResultString+'            </div>\n' ;
     //      ResultString=ResultString+'        </div>\n' ;
     //      ResultString=ResultString+'        <div class=\"col-md-2 morebook\">\n' ;
     //      var Km=0;
     //      if (ResultItem.Results[i].Distance >= 0) {
     //          if (ResultItem.Results[i].Distance > 0)
     //          { km =  ResultItem.Results[i].Distance / 100;
     //          } else { km = 0; }
     //          if (km > 0)
     //          {
     //              ResultString = ResultString + '            <div class=\"km bold\">' + km + '</div>\n';
     //          }

     //      }
     //      ResultString = ResultString +'            <a target=\"_blank\" href=\"'+PropertyIDParam+'\" onclick=\"\">\n' ;
     //      ResultString=ResultString+'                <img src=\"/images/more.jpg\" alt=\"More details\">\n' ;
     //      ResultString=ResultString+'            </a>\n' ;
     //      ResultString = ResultString +'            <a target=\"_blank\" href=\"'+PropertyIDParam+'\">\n' ;
     //      ResultString=ResultString+'                <img src=\"/images/booknow.jpg\" alt=\"Book now\">\n' ;
     //      ResultString=ResultString+'            </a>\n' ;
     //      ResultString=ResultString+'        </div>\n' ;
     //      ResultString=ResultString+'    </div>\n' ;
     //      ResultString=ResultString+'</div>' ;
     //       ResultString = ResultString.replace("<b>", "").replace("</b>", "");
            //ResultString = ResultString + '<section id="content">';
            ResultString = ResultString + '<div class="container">';
            ResultString = ResultString + '<div id="main">';
            ResultString = ResultString + '<div class="row">';
            ResultString = ResultString + '<div class="col-sm-8 col-md-9">';
            ResultString = ResultString + '<div class="hotel-list listing-style3 hotel">';
            ResultString = ResultString + '<article class="box">';
            ResultString = ResultString + '<figure class="col-sm-5 col-md-4">';
            ResultString = ResultString + '<a title="" href=\"/RahulTemplate/ajax/slideshow-popup.html\" class="hover-effect popup-gallery">';
            if ((imgFile == "Empty") || (imgFile == undefined) || (imgFile == "")) {
                ResultString = ResultString + '<img width="270" height="160" src=\"' + blankimage + '\" alt=\"' + Title + '"\"/>\n';
            }
            else {
                var imgsrc = "/Files/Property/" + ResultItem.Results[i].PropertyId + "/" + ResultItem.Results[i].ImageFile;
                if (InventoryAPIType == 4 || InventoryAPIType == 5) {
                    imgsrc = "";
                    imgsrc = ResultItem.Results[i].ImageFile;
                    //    imgsrc = testimgsrc;


                }
                if ((imgFile == "") || (imgFile == blankimage) || (imgExists == false)) {
                    imgsrc = blankimage;
                }

                ResultString = ResultString + '<img width="270" height="160" src=\"' + imgsrc + '\" alt=\"' + Title + 'serviced apartment in  ' + ResultItem.Results[i].Location + ' ' + ResultItem.Results[i].City + '"\"/>\n';
            }


            //ResultString = ResultString + '<img width="270" height="160" alt="" src=\"/RahulTemplate/images/ginger-vapi-hotel-th.jpg\">';
            ResultString = ResultString + '</a>';
            ResultString = ResultString + '</figure>';
            ResultString = ResultString + '<div class="details col-sm-7 col-md-8">';
            ResultString = ResultString + '<div>';
            ResultString = ResultString + '<div>';
            ResultString = ResultString + ' <h4 class="box-title">' + Title + '<small><i class="soap-icon-departure yellow-color"></i>' + ResultItem.Results[i].City + '</small></h4>';
            ResultString = ResultString + '<div class="amenities">';
            ResultString = ResultString + '<i class="soap-icon-wifi circle"></i>';
            ResultString = ResultString + '<i class="soap-icon-fitnessfacility circle"></i>';
            ResultString = ResultString + '<i class="soap-icon-fork circle"></i>';
            ResultString = ResultString + '<i class="soap-icon-television circle"></i>';
            ResultString = ResultString + '</div>';
            ResultString = ResultString + '</div>';
            ResultString = ResultString + '<div>';
            ResultString = ResultString + '<div class="five-stars-container">';
            ResultString = ResultString + ' <span class="five-stars" style="width: 80%;"></span>';
            ResultString = ResultString + '</div>';
            ResultString = ResultString + '<span class="review">270 reviews</span>';
            ResultString = ResultString + '</div>';
            ResultString = ResultString + '</div>';
            ResultString = ResultString + '<div>';
            ResultString = ResultString + '<p><small>' + ResultItem.Results[i].Description + '</small></p>';
            ResultString = ResultString + '<div>';
            ResultString = ResultString + '<span class="price"><small>AVG/NIGHT</small>&#8377 ' + Amount + '</span>';
            ResultString = ResultString + '<a class="button btn-small full-width text-center" target=\"_blank\" title="" href=\"' + PropertyIDParam + '\">Book Now</a>';
            ResultString = ResultString + '</div>';
            ResultString = ResultString + '</div>';
            ResultString = ResultString + '</div>';
            ResultString = ResultString + '</article>';
            ResultString = ResultString + '</div>';
            ResultString = ResultString + '</div>';
            ResultString = ResultString + '</div>';
            ResultString = ResultString + '</div>';
            ResultString = ResultString + '</div>';
            //ResultString = ResultString + '</section>';
        }
        $("#spTitle").text(totalrecords);
      //  $('#dvResults').html(ResultString);
        return ResultString;
    }
    function GenerateResultStringSorted(ResultItem, param) {

   //     debugger;

        var ResultString = '';
        var sparam = param;

           var Uid =@userid;
        var Entitlementdata = '@this.Request.QueryString["Entitlement"]';

     //   $("#hdMainRecords").val(JSON.stringify(ResultItem.Results));

        //MainResultList.Results = [];
        //for (var i in ResultItem.Results) {
        //    MainResultList.Results.push(ResultItem.Results[i]);
        //}

  //      debugger;
      //  SortedOutPutResultEntitlement = ResultItem;
        if ((Uid > 0) && (IsMaximumDailyEntitlement == true) && (Entitlementdata!=1))
        {

            if (ResultItem.length > 0)
            {
                $("#hdMainRecords").val("0");

                MaximumDailyEntitlement =@MaximumEntitlement;// ResultItem[0].MaximumDailyEntitlement > 0 ? ResultItem[0].MaximumDailyEntitlement : 0;
                if (MaximumDailyEntitlement > 0) {
                    ResultItem = ResultItem.filter(f => f.Amount <= MaximumDailyEntitlement);

                    totalrecords = ResultItem.length;
                    $("#spTitle").text(totalrecords);
                    //   ResultList.Results.MaxCount = totalrecords;
                  //  if (totalrecords > 0) {

                            $("#dvNoEntitlement").toggleClass("RemoveEntitlement",false);
                            $("#dvNoEntitlement").toggleClass("SetEntitlement",true);
                         //   $("#dvNoEntitlement").show();
                            SortStringHeader = GenerateSortStringWithEntitlement();

                    //}
                    //else {

                    //  $("#dvNoEntitlement").toggleClass("SetEntitlement",false);
                    //  $("#dvNoEntitlement").toggleClass("RemoveEntitlement", true);
                    //  SortStringHeader = GenerateSortString();

                    // //   $("#dvNoEntitlement").hide();
                    //    $("#spEntitlement").text('');
                    //}
                }
            }


        }
        else
        {
            IsMaximumDailyEntitlement = false;
            MaximumDailyEntitlement = 0;
      //      $("#dvNoEntitlement").css("display", "none");
            $("#dvNoEntitlement").toggleClass("SetEntitlement", false);
            $("#dvNoEntitlement").toggleClass("RemoveEntitlement", true);
            SortStringHeader = GenerateSortString();
      //      $("#dvNoEntitlement").hide();

            $("#spEntitlement").text('');
        }
     //   ResultItem = SortData(ResultItem, "EntitlementOrder", "Descending");


        if (ResultItem.length > 0) {
            var GDSCurrencyCode = ResultItem[0].GDSCurrencyCode;
            var GDSRateConversion = ResultItem[0].GDSRateConversion;

            sparam = sparam + "&gdscurrencycode=" + GDSCurrencyCode + "&gdsrateconversion=" + GDSRateConversion;

        }

        //var start=StartPageNumber-1;
        //var end=(StartPageNumber*NoofRecordsPerPage)-1;
        var blankimage = "/Images/no-image.jpg";
        var start = ((StartPageNumber - 1) * NoofRecordsPerPage) + 1;
        var end = (start + NoofRecordsPerPage) - 1;
        if (end > totalrecords)
            end = (start + (totalrecords % NoofRecordsPerPage)) - 1;

        start = start - 1;
        end = end - 1;

        for (var i = start; i <= end; i++)
        // for (var i=0;i<ResultItem.length;i++)
        {

            var Title = ResultItem[i].Title;
            var imgFile = ResultItem[i].ImageFile;
            var imgExists = ResultItem[i].IsImageExists;
            var InventoryAPIType = ResultItem[i].InventoryAPIType;
            var StarRate = ResultItem[i].StarRate;
            var Rating = ResultItem[i].StarRating;
            var HotelID = ResultItem[i].HotelID;
            if ((Rating == null) || (Rating==undefined))
            {
                Rating = "";
            }

            Title = Title.replace("<", "").replace(">", "");
            sparam = sparam + '&title=' + ResultItem.Results[i].Title + '&HotelID=' + HotelID;
            sparam = sparam + '&APIType' + InventoryAPIType;
            var PropertyIDParam = '/property/property?propertyid=' + ResultItem[i].PropertyId + sparam;
            ResultString = ResultString + '<div class=\"col-md-12 listingbox\">\n';
            ResultString = ResultString + '    <div class=\"listing\">\n';
            ResultString = ResultString + '        <div class=\"col-md-4 pad0\">\n';
            ResultString = ResultString + '            <a target=\'_blank\' href=\"' + PropertyIDParam + '\" onclick=\"\">\n';
            ResultString = ResultString + '                <div class=\"img-thumb landscape\">\n';
            if ((imgFile == "Empty") || (imgFile == undefined) || (imgFile == "")) {
                ResultString = ResultString + '<img src=\"' + blankimage + '\" alt=\"' + Title + '"\"/>\n';
            }
            else {
                var imgsrc = "/Files/Property/" + ResultItem[i].PropertyId + "/" + ResultItem[i].ImageFile;
                if (InventoryAPIType == 4 || InventoryAPIType == 5) {
                    imgsrc = "";
                    imgsrc = ResultItem[i].ImageFile;
                }
                if ((imgFile == "") || (imgFile == blankimage) || (imgExists == false)) {
                    imgsrc = blankimage;
                }

                ResultString = ResultString + '<img src=\"' + imgsrc + '\" alt=\"' + Title + 'serviced apartment in  ' + ResultItem[i].Location + ' ' + ResultItem[i].City + '"\"/>\n';
            }

            ResultString = ResultString + '                </div>\n';
            ResultString = ResultString + '            </a>\n';
            ResultString = ResultString + '            <a href=\"/property/index/' + ResultItem[i].PropertyId + '\">\n';
            ResultString = ResultString + '                <div class=\"price\">\n';
            var Amount = Math.round(ResultItem[i].Amount);
            ResultString = ResultString + '<i class=\"fa cxprice fa-rupee\"></i><span class=\"cxcurele\"> ' + Amount + '</span>\n';
            ResultString = ResultString + '<p class=\"onwards whitetext\">onwards</p>\n';
            ResultString = ResultString + '                </div>\n';
            ResultString = ResultString + '            </a>\n';
            ResultString = ResultString + '        </div>\n';
            ResultString = ResultString + '        <div class=\"col-md-6 listingctr\">\n';
       //     ResultString = ResultString + '            <span class=\"name\"><a onclick=\"getBooking(' + ResultItem[i].PropertyId + ')\" class=\"mt\" target=\'_blank\' href=\"' + PropertyIDParam + '\">' + Title + '</a></span>\n';

            ResultString = ResultString + '            <span class=\"name\"><a class=\"mt\" target=\'_blank\' href=\"' + PropertyIDParam + '\">' + Title + '</a></span>';
            if (Rating !='') {
                ResultString = ResultString + Rating + '\n';
            }
            else {
                ResultString = ResultString + '\n';
            }
            ResultString = ResultString + '            <div class=\"clear\">'+ ResultItem[i].Location +'</div>\n';
            ResultString = ResultString + '            <div class=\"mapnreview\">\n';
            ResultString = ResultString + '                <a target=\'_blank\' href=\"' + PropertyIDParam + '\" class=\"redtext\">\n';
            ResultString = ResultString + '<i class=\"glyphicon glyphicon-map-marker blacktext\"></i>Show on map\n';
            ResultString = ResultString + '                </a>\n';
            ResultString = ResultString + '                <a target=\'_blank\' href=\"' + PropertyIDParam + '\" class=\"redtext review\">\n';
            ResultString = ResultString + '<i class=\"glyphicon glyphicon-user blacktext\"></i>Read reviews\n';
            ResultString = ResultString + '                </a>\n';
            if (ResultItem[i].IsDistanceFromCity == true) {
                ResultString = ResultString + '  <text>&nbsp;<a class=\"maxpinfo\" href="#" data-toggle="popover" data-placement="left"  data-content="If you are searching with  property name, distance shown is from nearest main city"><span class=\"glyphicon glyphicon-info-sign\"></span></a></text>\n';
            }
            ResultString = ResultString + '            </div>\n';
            ResultString = ResultString + '            <div>\n';
            ResultString = ResultString + '                <span class=\"trunc\">\n';
            ResultString = ResultString + '' + ResultItem[i].Description + '\n';
            ResultString = ResultString + '<span class=\"truncate_ellipsis\"></span><span class=\"truncate_more\" style=\"display: none;\">       </span>\n';
            ResultString = ResultString + '                </span>\n';
            ResultString = ResultString + '                <a href=\"' + PropertyIDParam + '\" class=\"redtext\" target=\'_blank\'>more...</a>\n';
            ResultString = ResultString + '            </div>\n';
            ResultString = ResultString + '        </div>\n';
            ResultString = ResultString + '        <div class=\"col-md-2 morebook\">\n';
            var Km = 0;
            if (ResultItem[i].Distance >= 0) {
                if (ResultItem[i].Distance > 0) {
                    km = ResultItem[i].Distance / 100;
                } else { km = 0; }
                if (km > 0) {
                    ResultString = ResultString + '            <div class=\"km bold\">' + km + '</div>\n';
                }
            }
            ResultString = ResultString + '            <a target=\"_blank\" href=\"' + PropertyIDParam + '\" onclick=\"\">\n';
            ResultString = ResultString + '                <img src=\"/images/more.jpg\" alt=\"More details\">\n';
            ResultString = ResultString + '            </a>\n';
            ResultString = ResultString + '            <a target=\"_blank\" href=\"' + PropertyIDParam + '\">\n';
            ResultString = ResultString + '                <img src=\"/images/booknow.jpg\" alt=\"Book now\">\n';
            ResultString = ResultString + '            </a>\n';
            ResultString = ResultString + '        </div>\n';
            ResultString = ResultString + '    </div>\n';
            ResultString = ResultString + '</div>';
            //ResultString = ResultString + '<section id="">';
            //ResultString = ResultString + '<div class="container">';
            //ResultString = ResultString + '<div id="main">';
            //ResultString = ResultString + '<div class="row">';
            //ResultString = ResultString + '<div class="col-sm-8 col-md-9">';
            //ResultString = ResultString + '<div class="hotel-list listing-style3 hotel">';
            //ResultString = ResultString + '<article class="box">';
            //ResultString = ResultString + '<figure class="col-sm-5 col-md-4">';
            //ResultString = ResultString + '<a title="" href=\"/RahulTemplate/ajax/slideshow-popup.html\" class="hover-effect popup-gallery">';
            //ResultString = ResultString + '<img width="270" height="160" alt="" src=\"/RahulTemplate/images/ginger-vapi-hotel-th.jpg\">';
            //ResultString = ResultString + '</a>';
            //ResultString = ResultString + '</figure>';
            //ResultString = ResultString + '<div class="details col-sm-7 col-md-8">';
            //ResultString = ResultString + '<div>';
            //ResultString = ResultString + '<div>';
            //ResultString = ResultString + ' <h4 class="box-title">' + Title + '<small><i class="soap-icon-departure yellow-color"></i>' + ResultItem.Results[i].Location + '</small></h4>';
            //ResultString = ResultString + '<div class="amenities">';
            //ResultString = ResultString + '<i class="soap-icon-wifi circle"></i>';
            //ResultString = ResultString + '<i class="soap-icon-fitnessfacility circle"></i>';
            //ResultString = ResultString + '<i class="soap-icon-fork circle"></i>';
            //ResultString = ResultString + '<i class="soap-icon-television circle"></i>';
            //ResultString = ResultString + '</div>';
            //ResultString = ResultString + '</div>';
            //ResultString = ResultString + '<div>';
            //ResultString = ResultString + '<div class="five-stars-container">';
            //ResultString = ResultString + ' <span class="five-stars" style="width: 80%;"></span>';
            //ResultString = ResultString + '</div>';
            //ResultString = ResultString + '<span class="review">270 reviews</span>';
            //ResultString = ResultString + '</div>';
            //ResultString = ResultString + '</div>';
            //ResultString = ResultString + '<div>';
            //ResultString = ResultString + '<p>' + ResultItem.Results[i].Description + '</p>';
            //ResultString = ResultString + '<div>';
            //ResultString = ResultString + '<span class="price"><small>AVG/NIGHT</small>' + Amount + '</span>';
            //ResultString = ResultString + '<a class="button btn-small full-width text-center" target=\"_blank\" title="" href=\"' + PropertyIDParam + '\">Book Now</a>';
            //ResultString = ResultString + '</div>';
            //ResultString = ResultString + '</div>';
            //ResultString = ResultString + '</div>';
            //ResultString = ResultString + '</article>';
            //ResultString = ResultString + '</div>';
            //ResultString = ResultString + '</div>';
            //ResultString = ResultString + '</div>';
            //ResultString = ResultString + '</div>';
            //ResultString = ResultString + '</div>';
            //ResultString = ResultString + '</section>';
            ResultString = ResultString.replace("<b>", "").replace("</b>", "");
        }
        //  $('#dvResults').html(ResultString);
        return ResultString;
    }

    function GenerateResultHtml(ResultItem,param,totalrecords,pagenumber,noofrecords)
    {


        var ResultString='';
        // var sparam ='"&adults="' + pAdults.toString() + '"' ;
        var sparam = param;
        var start = ((pagenumber-1) * noofrecords);
        var end = (start + noofrecords);
        if (end > totalrecords)
            end = (start + (totalrecords % noofrecords));
        alert("test1");
        sparam = sparam + '&title=' + ResultItem.Results[i].Title + '&HotelID=' + ResultItem.Results[i].HotelID;
        sparam = sparam + '&APIType' + ResultItem[i].InventoryAPIType;
        for (var i = start; i < end; i++)
     //   for (var i=0;i<ResultItem.Results.length;i++)
        {
            var PropertyIDParam='/property/property?propertyid='+ResultItem.Results[i].PropertyId+ sparam ;
            ResultString=ResultString+'<div class=\"col-md-12 listingbox\">\n' ;
            ResultString=ResultString+'    <div class=\"listing\">\n' ;
            ResultString=ResultString+'        <div class=\"col-md-4 pad0\">\n' ;
            ResultString = ResultString +'            <a target=\'_blank\' href=\"'+PropertyIDParam+'\" onclick=\"\">\n' ;
            ResultString=ResultString+'                <div class=\"img-thumb landscape\">\n' ;
            if ((ResultItem.Results[i].ImageFile == "Empty") || (ResultItem.Results[i].ImageFile ==undefined)||(ResultItem.Results[i].ImageFile == ""))
            {
                ResultString =ResultString+'<img src=\"/'+@no_image+'\" alt=\"'+ ResultItem.Results[i].Title +'"\"/>\n' ;
            }
            else{
                var imgsrc = ResultItem.Results[i].ImageFile;
                //var imgsrc = "/Files/Property/" + ResultItem.Results[i].PropertyId + "/" + ResultItem.Results[i].ImageFile;
                ResultString =ResultString+'<img src=\"'+imgsrc+'\" alt=\"'+ ResultItem.Results[i].Title +'serviced apartment in  '+ResultItem.Results[i].Location +' '+ ResultItem.Results[i].City +'"\"/>\n' ;
            }

            ResultString=ResultString+'                </div>\n' ;
            ResultString=ResultString+'            </a>\n' ;
            ResultString=ResultString+'            <a href=\"~/property/index/'+ResultItem.Results[i].PropertyId+'\">\n' ;
            ResultString=ResultString+'                <div class=\"price\">\n' ;
            var Amount =Math.round(ResultItem.Results[i].Amount);
            ResultString=ResultString+'<i class=\"fa cxprice fa-rupee\"></i><span class=\"cxcurele\"> '+ Amount +'</span>\n' ;
            ResultString=ResultString+'<p class=\"onwards whitetext\">onwards</p>\n' ;
            ResultString=ResultString+'                </div>\n' ;
            ResultString=ResultString+'            </a>\n' ;
            ResultString=ResultString+'        </div>\n' ;
            ResultString=ResultString+'        <div class=\"col-md-6 listingctr\">\n' ;
            ResultString = ResultString +'            <span class=\"name\"><a target=\'_blank\' onclick=\"getBooking('+ResultItem.Results[i].PropertyId+')\" class=\"mt\" href=\"/property/property  propertyid='+PropertyIDParam+'\">'+ ResultItem.Results[i].Title +'</a></span>\n' ;
            ResultString=ResultString+'            <div class=\"clear\">'+ ResultItem.Results[i].Location +'</div>\n' ;
            ResultString=ResultString+'            <div class=\"mapnreview\">\n' ;
            ResultString = ResultString +'                <a target=\'_blank\' href=\"'+PropertyIDParam+'\" class=\"redtext\">\n' ;
            ResultString=ResultString+'<i class=\"glyphicon glyphicon-map-marker blacktext\"></i>Show on map\n' ;
            ResultString=ResultString+'                </a>\n' ;
            ResultString = ResultString +'                <a target=\'_blank\' href=\"'+PropertyIDParam+'\" class=\"redtext review\">\n' ;
            ResultString=ResultString+'<i class=\"glyphicon glyphicon-user blacktext\"></i>Read reviews\n' ;
            ResultString=ResultString+'                </a>\n' ;
            if(ResultItem.Results[i].IsDistanceFromCity==true){
                ResultString=ResultString+'  <text>&nbsp;<a class=\"maxpinfo\" href="#" data-toggle="popover" data-placement="left"  data-content="If you are searching with  property name, distance shown is from nearest main city"><span class=\"glyphicon glyphicon-info-sign\"></span></a></text>\n';
            }
            ResultString=ResultString+'            </div>\n' ;
            ResultString=ResultString+'            <div>\n' ;
            ResultString=ResultString+'                <span class=\"trunc\">\n' ;
            ResultString=ResultString+''+ ResultItem.Results[i].Description +'\n' ;
            ResultString=ResultString+'<span class=\"truncate_ellipsis\"></span><span class=\"truncate_more\" style=\"display: none;\">       </span>\n' ;
            ResultString=ResultString+'                </span>\n' ;
            ResultString = ResultString +'                <a target=\'_blank\' href=\"'+PropertyIDParam+'\" class=\"redtext\">more...</a>\n' ;
            ResultString=ResultString+'            </div>\n' ;
            ResultString=ResultString+'        </div>\n' ;
            ResultString=ResultString+'        <div class=\"col-md-2 morebook\">\n' ;
            var Km=0;
            if (ResultItem.Results[i].Distance >= 0) {
                if (ResultItem.Results[i].Distance > 0)
                { km =  ResultItem.Results[i].Distance / 100;
                } else { km = 0; }
                ResultString=ResultString+'            <div class=\"km bold\">'+km +'</div>\n' ;
            }
            ResultString = ResultString +'            <a target=\'_blank\' href=\"'+PropertyIDParam+'\" onclick=\"\">\n' ;
            ResultString=ResultString+'                <img src=\"/images/more.jpg\" alt=\"More details\">\n' ;
            ResultString=ResultString+'            </a>\n' ;
            ResultString = ResultString +'            <a target=\'_blank\' href=\"'+PropertyIDParam+'\">\n' ;
            ResultString=ResultString+'                <img src=\"/images/booknow.jpg\" alt=\"Book now\">\n' ;
            ResultString=ResultString+'            </a>\n' ;
            ResultString=ResultString+'        </div>\n' ;
            ResultString=ResultString+'    </div>\n' ;
            ResultString=ResultString+'</div>' ;
        }
        $('#dvResults').html(ResultString);
        return ResultString;
    }
    function SortedResult(SortBy)
    {

        var pAdults=@ViewBag.Adults;
        var pDestination='@ViewBag.Destination';
        var pBedRooms=@ViewBag.Bedrooms;
        var pCheckIn='@ViewBag.CheckIn';
        var pCheckOut='@ViewBag.CheckOut';
        var pChildren=@ViewBag.Children;
        var pStayType=@ViewBag.StayType;
        var pRangeBudgetMaximum=@sm.rangeBudgetMax.ToString();
        var pstarRatingRange=@sm.starRatingRange.ToString();
        var pBeds=@sm.beds;
        var pDistanceinKm=@sm.distanceInKm;

        var  paramCriteria = "&adults=" + pAdults + "&destination=" + pDestination + "&checkIn=" + pCheckIn + "&checkout=" + pCheckOut + "&children=" + pChildren + "&staytype=" + pStayType + "&bedrooms=" + pBedRooms + "&rangebudgetmax=" + pstarRatingRange + "&rangebudgetmin=" + pRangeBudgetMaximum + "&starratingrange=" + pstarRatingRange + "&beds=" + pBeds + "&distanceInKm=" + pDistanceinKm;

        var SortBy;
        var SortDirection;
        switch(SortBy)
        {

            case "1":
                SortBy="DistanceInKm";
                SortDirection="Ascending";
                break;
            case "2":
                SortBy="Amount";
                SortDirection="Descending";
                break;
            case "3":
                SortBy="Amount";
                SortDirection="Ascending";
                break;
            default:
                SortBy="Amount";
                SortDirection="Ascending";
                break;

        }
        var AmadusResult = {};
        var HotelResult = {};
        var FinalResult = {};
        var Timer;

        var jsons = new Array();

        HotelResult=SortData(HotelResult,SortBy,SortDirection);
        AmadeusResult=SortData(AmadeusResult,SortBy,SortDirection);

        var ResultString='';
        // var sparam ='"&adults="' + pAdults.toString() + '"' ;
        var pFinalResult = {};
        var jsonlist = [];
        for (var i in AmadusResult) {
            jsonlist.push(AmadusResult[i]);
        }
        for (var i in HotelResult) {
            jsonlist.push(HotelResult[i]);
        }
        pFinalResult = jsonlist;

        //   alert(JSON.stringify(FinalResult));

        var ResultList = new Object();
        ResultList.Results=[];
        for (var i in pFinalResult) {
            ResultList.Results.push(pFinalResult[i]);
        }
        ResultList.CurrentPageIndex=1;
        ResultList.Destination=pDestination;
        ResultList.IsSearched=true;
        ResultList.MaxCount=AmadeusRows+MainRows;

        // Construct html over here


        var OutPutHeader=GenerateResultHeader(ResultList);
        var OutPutPagerHeader=GeneratePagerHeader(ResultList);
        var OutPutSortString=GenerateSortString();

        var OutputHtmlString='<div class="col-xs-12 col-md-12 tab-content searchviewctr">';
        OutputHtmlString=OutputHtmlString+'<div class="col-xs-12 col-md-12 tab-pane fade in active" id="home">';
        OutputHtmlString = OutPutHeader + OutputHtmlString + OutPutPagerHeader + OutPutSortString;

      //  debugger;

        var OutPutList=OutputHtmlString+'<div class="listsctr"'+GenerateResultString(ResultList,paramCriteria)+'</div>';

        var OutPutPageFooter=GeneratePagerFooter(ResultList);
        var Footer='<div class="col-md-12 tab-pane fade" id="profile"><div class="map_canvas"></div></div></div>';

        OutPutList=OutPutList+OutPutPageFooter+Footer;
        $('#loading').hide();
        $('#resultlisting').html(OutPutList);
    }
    function orderByProperty(prop) {
        var args = Array.prototype.slice.call(arguments, 1);
        return function (a, b) {
            var equality = a[prop] - b[prop];
            if (equality === 0 && arguments.length > 1) {
                return orderByProperty.apply(null, args)(a, b);
            }
            return equality;
        };
    }
    //sort
    function sort(data, orderBy) {
        orderBy = Array.isArray(orderBy) ? orderBy : [orderBy];
        return data.sort((a, b) => {
            for (let i = 0, size = orderBy.length; i < size; i++) {
                const key = Object.keys(orderBy[i])[0],
                    o = orderBy[i][key],
                    valueA = a[key],
                    valueB = b[key];
                if (!(valueA || valueB)) {
                    console.error("the objects from the data passed does not have the key '" + key + "' passed on sort!");
                    return [];
                }
                if (+valueA === +valueA) {
                    return o.toLowerCase() === 'desc' ? valueB - valueA : valueA - valueB;
                } else {
                    if (valueA.localeCompare(valueB) > 0) {
                        return o.toLowerCase() === 'desc' ? -1 : 1;
                    } else if (valueA.localeCompare(valueB) < 0) {
                        return o.toLowerCase() === 'desc' ? 1 : -1;
                    }
                }
            }
        });
    }

    //sort
</script>
<script type="text/javascript">
    $(function () {
        $('.trunc').jTruncate({
            length: 160,
            minTrail: 0,
            moreText: "",
            lessText: "",
            moreAni: "fast",
            lessAni: 1000,
            ellipsisText: "",
        });
        imgadj();

    })
</script>
<script type="text/javascript">
    $(function () { showFilterBoxes(); });
</script>
<script type="text/javascript">
    $(function () {
        cx_reloadRates();
        var v = $("#curPick").val();
        $("#srchcur").val(v);
        cx_removeDefault();
        cx_ChangeCurRate(v);
    });
</script>
<script type="text/javascript">
  function LoadMoreHotels(pMoreDataIndicator,pSessionID,pSequenceNumber,pSecurityToken)
  {
      //debugger;;



        var MainResult;
        var SearchResult = '';

        var pAdults=@ViewBag.Adults;
        var pDestination='@ViewBag.Destination';
        var pBedRooms=@ViewBag.Bedrooms;
        var pCheckIn='@ViewBag.CheckIn';
        var pCheckOut='@ViewBag.CheckOut';
        var pChildren=@ViewBag.Children;
        var pStayType=@ViewBag.StayType;
        var pRangeBudgetMaximum=@sm.rangeBudgetMax.ToString();
        var pstarRatingRange=@sm.starRatingRange.ToString();
        var pBeds=@sm.beds;
        var pDistanceinKm =@sm.distanceInKm;



        paramCriteria = "&adults=" + pAdults + "&destination=" + pDestination + "&checkIn=" + pCheckIn + "&checkout=" + pCheckOut + "&children=" + pChildren + "&staytype=" + pStayType + "&bedrooms=" + pBedRooms + "&rangebudgetmax=" + pstarRatingRange + "&rangebudgetmin=" + pRangeBudgetMaximum + "&starratingrange=" + pstarRatingRange + "&beds=" + pBeds + "&distanceInKm=" + pDistanceinKm;


        var AmadusResult = {};


        var Timer;

        var jsons = new Array();


        var amadeusResultCallback = false;
        var MainResultCallback = false;

        MainResultCallback = true;


        if (searchamaMore && gdsxhrMore != null) { gdsxhrMore.abort(); }
        searchamaMore = true;

        gdsxhrMore=$.ajax({
        type: "GET",
        url: "/search/GetMoreAmadeusHotels",
        data: { Destination: pDestination, CheckIn: pCheckIn, CheckOut: pCheckOut, Adults: pAdults, Children: pChildren, BedRooms: pBedRooms, Moreindicator: pMoreDataIndicator, SessionID: pSessionID, SequenceNumber: pSequenceNumber, SecurityToken: pSecurityToken },
        contentType: "application/text;charset=utf-8",
        dataType: "json",
        success: function (result) {
        AmadusResult = result.Results.Results;
        AmadusResult=SortData(AmadusResult,"Amount","Ascending");

        var x = result;
        AmadeusRows= result.Results.MaxCount;

        json1 = AmadusResult;


        var jsonlist = [];
        for (var i in AmadusResult) {
        jsonlist.push(AmadusResult[i]);
        }


        amadeusResultCallback = true;
        if (amadeusResultCallback == true) {
            FinalResult = jsonlist;

            //   ResultList.Results=[];
            for (var i in FinalResult) {
                ResultList.Results.push(FinalResult[i]);
            }
            ResultList.CurrentPageIndex = 1;
            ResultList.Destination = pDestination;
            ResultList.IsSearched = true;
            ResultList.MaxCount = AmadeusRows;
            totalrecords = ResultList.Results.length;

            var SortBy;
            var SortDirection;
            switch ($("#dlSortOrder").val()) {

                case 1:
                    SortBy = "DistanceInKm";
                    SortDirection = "Ascending"
                    break;
                case 2:
                    SortBy = "Amount";
                    SortDirection = "Descending"
                    break;
                case 3:
                    SortBy = "Amount";
                    SortDirection = "Ascending"
                    break;
                default:
                    SortBy = "Amount";
                    SortDirection = "Ascending"
                    break;

            }



            //debugger;;

            //var AmdResult = cleanup(ResultList.Results, 'Title');
            //ResultList.Results = [];
            //for (var i in AmdResult) {
            //    ResultList.Results.push(AmdResult[i]);
            //}

            //debugger;;
           var AmdResult = [];
            AmdResult = ResultList.Results.filter(f => f.APIType != "sb");
            AmdResult = SortData(ResultList.Results, SortBy, SortDirection);


            //    HotelResult = ResultList.Results.filter(f => f.InventoryAPIType == 0 || f.InventoryAPIType == null);
            HotelResult = ResultList.Results.filter(f => f.APIType == "sb");
            HotelResult = SortData(HotelResult, SortBy, SortDirection);

            ResultList.Results = [];
            for (var i in AmdResult) {
                ResultList.Results.push(AmdResult[i]);
            }
            for (var i in HotelResult) {
                ResultList.Results.push(HotelResult[i]);
            }
      //     debugger;;
            var subResult = [];
             subResult = groupBy(ResultList.Results, function (item) {
                return [item.Title, item.Amount];
            });
             ResultList.Results = [];
             for (var i = 0; i < subResult.length; i++) {
                 var subInnerResult = subResult[i].reduce(function (res, obj) {
                         return (obj.Amount < res.Amount) ? obj : res;
                     });
                         ResultList.Results.push(subInnerResult);
               }
            ResultList.CurrentPageIndex = 1;
            ResultList.Destination = pDestination;
            ResultList.IsSearched = true;
            ResultList.MaxCount = ResultList.Results.length;
            totalrecords = ResultList.Results.length;

         //   ResultList.Results = SortData(ResultList.Results, "InventoryAPIType", "Descending");




            SortedOutPutResult = ResultList;
     //       debugger;
            var MResultList = {};
            MResultList.Results = [];
            for (var i in ResultList.Results) {
                MainResultList.Results.push(ResultList.Results[i]);

            }
            var subResult = [];
            subResult = groupBy(MainResultList.Results, function (item) {
                return [item.Title, item.Amount];
            });

            for (var i = 0; i < subResult.length; i++) {
                var subInnerResult = subResult[i].reduce(function (res, obj) {
                    return (obj.Amount < res.Amount) ? obj : res;
                });
                MResultList.Results.push(subInnerResult);
            }
            MainResultList.Results = MResultList.Results;



            for (var i = 0; i <= 5; i++) {
                SetRateCount(i);
            }
            if (ResultList.Results.length > 0) {
                findMinMax(ResultList.Results);
                //       //debugger;;
                SetLocations(ResultList.Results);
                ResultList.Results = StarRatingResult();
            }

            var OutPutHeader = GenerateResultHeader(ResultList);
            var OutPutPagerHeader = GeneratePagerHeader(ResultList);
          //  var OutPutSortString = SortStringHeader; //GenerateSortString();

            var OutputHtmlString = '<div>';
            OutputHtmlString = OutputHtmlString + '<div id="home">';


            //var OutPut = GenerateResultString(ResultList, paramCriteria);
            //OutputHtmlString = OutPutHeader + OutputHtmlString + OutPutPagerHeader + OutPutSortString;



            var OutPut = GenerateResultString(ResultList, paramCriteria);
            var OutPutSortString = SortStringHeader;

            OutputHtmlString = OutPutHeader + OutputHtmlString + OutPutPagerHeader + OutPutSortString;
            //karthikms comment on 21-11-2019
            var OutPutList = OutputHtmlString + '<div><div id="dvResults">' + OutPut + '</div></div>';
            //var OutPutList = OutputHtmlString + '<div class="listsctr"><div id="dvResults">' + OutPut + '</div></div>';



            var OutPutPageFooter = GeneratePagerFooter(ResultList);
            var OutPutLoadMore = GenerateLoadMore();

            //var Footer = '<div class="col-md-12 tab-pane fade" id="profile"><div class="map_canvas" style="display:none"></div></div></div>';

            OutPutList = OutPutList + OutPutPageFooter + Footer;
        //    console.log(OutPutList);




            $('#resultlisting').html(OutPutList);
            $("#spTitle").text(totalrecords);
            if (IsMaximumDailyEntitlement == true) {
                $("#spEntitlement").text('(Only properties within your daily entitlement are listed below.)')
            }
            else {
                $("#spEntitlement").text('');
            }

            IsPaging = true;
            if ((ResultList.Results != undefined)) {
                totalrecords = (ResultList.Results.length > 0) ? ResultList.Results.length : 0;
            }


            if (totalrecords <= NoofRecordsPerPage) {
                $('#btnLoadMore').hide();
            }
            else {
                $('#btnLoadMore').show();

            }


            searchamaMore = false;
            //debugger;;
            if ((pMoreDataIndicator != "") || (pMoreDataIndicator != null)) {

                //search more hotels
                var SessionID = result.Results.SessionID;
                var SecurityToken = result.Results.SecurityToken;
                var SequenceNumber = result.Results.SequenceNumber;
                var Moreindicator = result.Results.Moreindicator;
                if (Moreindicator != undefined) {
                    if (Moreindicator != "") {
                        GDSSearchCount++;
                        if (GDSSearchCount <=20)
                        {
                            LoadMoreHotels(Moreindicator, SessionID, SequenceNumber, SecurityToken);
                            console.log('loading..');
                        }
                        else
                        {
                            console.log('loading completed');
                        }
                    }
                }

                //search more hotels end
            }
        }

            },
            error: function (response) {
            amadeusResultCallback = true;
     //       event.preventDefault();
            }
            });
    }

    function StopHotelLoading()
    {
        //debugger;;
        if ((gdsxhr != undefined) || (gdsxhr != null)) {
            gdsxhr.abort();
            gdsxhr = null;
        }

        if ((gdsxhrMore != undefined) || (gdsxhr != null)) {
            gdsxhrMore.abort();
            gdsxhrMore = null;
        }

        if (gdsxhr != null) { gdsxhr.abort(); }
        if (gdsxhrMore != null) { gdsxhrMore.abort(); }
    }
    function dynamicSortMultiple() {
        /*
         * save the arguments object as it will be overwritten
         * note that arguments object is an array-like object
         * consisting of the names of the properties to sort by
         */
        var props = arguments;
        return function (obj1, obj2) {
            var i = 0, result = 0, numberOfProperties = props.length;
            /* try getting a different result from 0 (equal)
             * as long as we have extra properties to compare
             */
            while (result === 0 && i < numberOfProperties) {
                result = dynamicSort(props[i])(obj1, obj2);
                i++;
            }
            return result;
        }
    }

    function dynamicSort(property) {
        var sortOrder = 1;
        if (property[0] === "-") {
            sortOrder = -1;
            property = property.substr(1);
        }
        return function (a, b) {
            var result = (a[property] < b[property]) ? -1 : (a[property] > b[property]) ? 1 : 0;
            return result * sortOrder;
        }
    }
    function cleanup(arr, prop) {
        var new_arr = [];
        var lookup = {};

        for (var i in arr) {
            lookup[arr[i][prop]] = arr[i];
        }

        for (i in lookup) {
            new_arr.push(lookup[i]);
        }

        return new_arr;
    }
    function removeDuplicateUsingSet(arr) {
        //let unique_array = Array.from(new Set(arr))
        //return unique_array;

        arr.reduce(function (item, e1) {
            var matches = item.filter(function (e2)
            { return e1.Title == e1.Title });
            if (matches.length == 0) {
                item.push(e1);
            }
            return item;
        }, []);
    }
   function groupBy(array , f )
    {
      var groups = {};
      array.forEach( function( o )
      {
        var group = JSON.stringify( f(o) );
        groups[group] = groups[group] || [];
        groups[group].push( o );
      });
      return Object.keys(groups).map( function( group )
      {
        return groups[group];
      })
    }
    function sortfinal(data, orderBy) {
        orderBy = Array.isArray(orderBy) ? orderBy : [orderBy];
        return data.sort((a, b) => {
            for (let i = 0, size = orderBy.length; i < size; i++) {
                const key = Object.keys(orderBy[i])[0],
                    o = orderBy[i][key],
                    valueA = a[key],
                    valueB = b[key];
                if (!(valueA || valueB)) {
                    console.error("the objects from the data passed does not have the key '" + key + "' passed on sort!");
                    return [];
                }
                if (+valueA === +valueA) {
                    return o.toLowerCase() === 'desc' ? valueB - valueA : valueA - valueB;
                } else {
                    if (valueA.localeCompare(valueB) > 0) {
                        return o.toLowerCase() === 'desc' ? -1 : 1;
                    } else if (valueA.localeCompare(valueB) < 0) {
                        return o.toLowerCase() === 'desc' ? 1 : -1;
                    }
                }
            }
        });
    }

    function StarRatingResult() {
        selected = [];
        $('#dvStarRatings input:checked').each(function () {
            selected.push($(this).attr('value'));
        });
        LocationsSelected = [];
        if (LocationCount > 10) {
            $('#dvLocationsMore input:checked').each(function () {
                LocationsSelected.push($(this).attr('value'));
            });
        }
        else {
            $('#dvLocations input:checked').each(function () {
                LocationsSelected.push($(this).attr('value'));
            });
        }
        var sorteddata = FilterbyStarRating(selected, LocationsSelected);
        return sorteddata;
    }


</script>

<!-- Javascript -->
<script type="text/javascript" src="~/RahulSample/js/jquery-1.11.1.min.js"></script>
<script type="text/javascript" src="~/RahulSample/js/jquery.noconflict.js"></script>
<script type="text/javascript" src="~/RahulSample/js/modernizr.2.7.1.min.js"></script>
<script type="text/javascript" src="~/RahulSample/js/jquery-migrate-1.2.1.min.js"></script>
<script type="text/javascript" src="~/RahulSample/js/jquery.placeholder.js"></script>
<script type="text/javascript" src="~/RahulSample/js/jquery-ui.1.10.4.min.js"></script>

<!-- Twitter Bootstrap -->
@*<script type="text/javascript" src="~/RahulSample/js/bootstrap.js"></script>*@

<!-- load revolution slider scripts -->
<script type="text/javascript" src="~/RahulSample/components/revolution_slider/js/jquery.themepunch.tools.min.js"></script>
<script type="text/javascript" src="~/RahulSample/components/revolution_slider/js/jquery.themepunch.revolution.min.js"></script>

<!-- load BXSlider scripts -->
<script type="text/javascript" src="~/RahulSample/components/jquery.bxslider/jquery.bxslider.min.js"></script>

<!-- load FlexSlider scripts -->
<script type="text/javascript" src="~/RahulSample/components/flexslider/jquery.flexslider-min.js"></script>

<!-- Google Map Api -->
<script type='text/javascript' src="http://maps.google.com/maps/api/js?sensor=false&amp;language=en"></script>
<script type="text/javascript" src="~/RahulSample/js/gmap3.min.js"></script>

<!-- parallax -->
<script type="text/javascript" src="~/RahulSample/js/jquery.stellar.min.js"></script>

<!-- waypoint -->
<script type="text/javascript" src="~/RahulSample/js/waypoints.min.js"></script>

<!-- load page Javascript -->
<script type="text/javascript" src="~/RahulSample/js/theme-scripts.js"></script>
<script type="text/javascript" src="~/RahulSample/js/scripts.js"></script>

<script type="text/javascript">
    tjq(document).ready(function () {
        tjq("#price-range").slider({
            range: true,
            min: 0,
            max: 8000,
            values: [1000, 8000],
            slide: function (event, ui) {
                tjq(".min-price-label").html("&#x20B9;" + ui.values[0]);
                tjq(".max-price-label").html("&#x20B9;" + ui.values[1]);
            }
        });
        tjq(".min-price-label").html("&#x20B9;" + tjq("#price-range").slider("values", 0));
        tjq(".max-price-label").html("&#x20B9;" + tjq("#price-range").slider("values", 1));

        tjq("#rating").slider({
            range: "min",
            value: 40,
            min: 0,
            max: 50,
            slide: function (event, ui) {

            }
        });
    });
</script>